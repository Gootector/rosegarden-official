Features for 1.0 - updated 20030923
-----------------------------------

- integrate new JACK transport and synchronisation - also
  investigate MIDI clock, MTC and MMC [IN PROGRESS - rwb]

- audio threading for file r/w access [rwb]
  o ringbuffer
  o mp3 support
  o libsndfile support
  o drag and drop

- metronome [IN PROGRESS - rwb/cc]

- banks/variations [cc]

- tidy up audio parameter box [cc/rwb/gl]

- ALSA ports [cc]

- multiple document interface (switcheable buffers, loading while playing) [rwb]

- playlists (essential for demos!) [rwb]

- song markers - jumping to, creating loops between [rwb]

- search facility for patch sounds (search all banks) [rwb]

- request: notation segment expanding itself as you enter 
           notes past the end of it

- Studio faders (MIDI and audio fader controls)

- porting to shared memory experimental branch [rwb/cc/gl] [almost DONE, audio remains]

- look at other updates for RG manual [dmm]
    
- request: import studio from file
- request: use studio from file instead of default
  
  dmm - stubbed out in GUI, but I've had no time to figure out how to
  implement it, and what time I might have in the forseeable future is better
  spent hacking on the Lilypond bugs, so either someone finish this or we
  should just dump it and forget about it, though I _do_ still think it's an
  excellent idea.

- implement Pitch in lilypondio in parallel with existing methods, so we can
  eventually wean it off of the junky code it currently uses. [dmm]

- fix lilypond lyric duration bug [dmm]

- named controllers for studio with associated bankeditor-like dialog [rwb/dmm]
  [ALMOST DONE - needs linking up to colours and implementing in IPBs
                 and control rulers to complete - rwb]

- find decent home for event filter toolbar icons [cc? dmm?]

- completely rewrite tutorial for 1.0, using fewer/smaller pixmaps, better
  organization, possibly converting to LDP docbook format [dmm]

- request: integration of fluidsynth [dmm]
  what does this mean exactly? muse's integration means bundling of
  fluidysnth source code - we don't want to go that far but bear in
  mind that this could mean as little or as much as we want [rwb]

  I haven't really looked into it just yet.  I've been lead to believe that we
  can just -llibfluidsynth1 and then use the API to talk to the thing, but I
  haven't determined whether that means talking to a running client, or
  effectively running an interfaceless client ourselves.  Then there are
  several Jack-related issues to work out no matter what the answer is.  The
  ultimate aim is to be able to provide a GUI for loading/unloading soundfonts
  conveniently and setting up other fluidsynth parameters.  It may all prove
  either un-doable or something best left for after 1.0, but it's worth a look
  I think.  It may be a quick hack. [dmm]

  Chris and I talked about this a bit more and while we'd like closer
  fluidsynth integration it'll probably mean we should talk more 
  closely with the fluidsynth team and get their support.  There are
  things that both of us dislike about current implementation. [rwb]

- control rulers [gl] [DONE?]
  
  I'll have a look at this soonish [rwb]

- Tempo ruler in main window: need control-ruler-like interface,
  ideally from control-ruler code.  This one is a lot more important
  than we've given it credit for so far, I think.

- native printing 
  o adding fluff and nicities to printed staves
  o getting mapping working for feta TT

- notation
  o staff connections above/below (bracketing)
  o bar styles: double, repeat -- integration with repeating segments how?
  o at least be able to draw segno, 1/2-repeats etc

- menus throughout
  o check that the accelerators don't clash
  o where necessary, reorganise and rename to make sure like functions
    are together and clearly described -- for example, the notation
    Transforms menu is not at all ideal
  o relatedly: make sure translators have time/awareness of changes!


Completed
---------

- general file merging [cc]

- adding instrument selection menu to tracks menu [rwb/gl] [DONE]

- document event filter dialog in RG manual [dmm] [DONE]

- event filter dialog [dmm] [DONE]

- request: triplets of more than three (erm, quintuplets?)
    [ALREADY DONE - DOCUMENT?]

- native printing 
  o printing resolution
  o create mapping files for commerical available fonts (so one can
    use them in RG)

- look at ways to avoid having multi-voice music completely fuck up the
  lilypond export (Chord class, plus possible measure by measure voice
  resolution/separation algorithm I've been thinking about in spare moments) [dmm]
  [This is not exactly completed.  Certainly no "voice separation
  algorithm", which would be interesting in itself regardless of
  applications for Lilypond.  But I think it's about as far as we'll
  get for the moment.  It's now pretty good with scores that actually
  display well in Rosegarden.]


To be ignored
-------------

- request: importing lilypond after manual hackery?
  dmm:  No, I don't think so.  I saw the exchange Hans had on the
  lilypond-devel list some time ago, and this feature would be extremely
  difficult to implement.  If Hans has been working on it all this time in
  secret, then it might make 1.0, but otherwise there's not a chance.


Bugs
----

Many - but additional ones are:

- audio cutting and moving is right off
- select a load of notes in the matrix view and quantize - the
  view screws up quite a bit.
- can't move the start time of a segment
- Repeating segment ghosts when moving them.
- segment preview ghosts when moving them
- opening files during playback
