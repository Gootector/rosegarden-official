
Potential optimisations in core/ that aren't worth doing at the moment
but might be worth bearing in mind:

 * Property names (currently strings) could be interned into integers
   once per program invocation and then stored as integers.  Tests
   suggest that Events using int property names instead of strings are
   twice as fast for integer get/set, marginally faster for string
   get/set, marginally faster for copy ctor and somewhat smaller than
   those using string property names.  We could possibly make
   PropertyName a class that does the interning (hashmap lookup) on
   construction and then converts trivially to an int, so that

       static const PropertyName MyPropertyName = "myproperty";

   continues to work.  (Could we?)

 * Track (and gui/NotationHLayout) could use FastVector instead of
   vector for BarPositionList and BarDataList.  We do lots of appends
   (although no inserts) so that might gain us something.  Probably
   not much though, as most appends will follow clear() and so reuse
   previously-allocated space.

