<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.1.2-Based Variant V1.0//EN" "dtd/kdex.dtd" [
  <!ENTITY rosegarden "<application>Rosegarden</application>">
  <!ENTITY MIDI "<acronym>MIDI</acronym>">
  <!ENTITY % English "INCLUDE" > <!-- change language only here -->
  <!ENTITY % addindex "IGNORE">
]>

<!-- The language must be changed in the <book> tag for translations. -->


<!--

    Notes on style and terminology for Rosegarden handbook
    ======================================================

     * Try to use British spelling and idiom as much as you possibly
       can, so the American bits don't stick out like a sore
       thumb.  Realise, not realize, colour, not color, though of
       course an American is going to miss using colorful (oops)
       British sayings like "a bit naff," and won't have any idea
       what the bloody hell (that was good, but a bit too vulgar, of
       course) words like "heuristic" mean.

     * Aim to be clear, brief and direct, but be informal.

     * Write instructions in the second person.

       Good:     "You can select segments by clicking on them with
                 the arrow tool."

       Bad:      "Segments can be selected by clicking on them with
                 the arrow tool."

       Very bad: "The arrow tool allows the user to select segments
                 by clicking on them."

       If you dislike the first of these because you want to make the
       phrase "the arrow tool" more obvious by placing it at the
       start of the sentence, then perhaps you should be using a
       variablelist instead and making "the arrow tool" a list item.

     * It's perfectly permissible to detour to explain why
       something is the way it is, particularly if it might not be
       obvious.

     * It's also entirely permissible to omit advanced stuff.  This
       document is be about understanding how and why, not about
       knowing every last clever detail.  Initially we were going to
       include a function reference section for the clever details,
       but it proved too hard to keep up to date, and not all that
       useful.  Providing a quick bit of guidance is most of the job.       

     * Bear in mind we can link extensively from any part of
       the handbook to any other.  Unfortunately DocBook won't allow
       you to write a link to a target that doesn't exist yet, so if
       you want to link to something that's not yet been written,
       either make a note of the planned link in an XML comment, or
       go and create a stub for the bit that hasn't been written yet,
       or else just write in a way that allows for a link to be
       easily added later (we could do an editing phase specially for
       links).

     * Be strict about using the correct terminology for
       Rosegarden data structures (segment, event, track, instrument,
       composition), but don't capitalise the words.  Capitalisation
       is useful in technical documents to make it clear that you're
       referring to a precise concept, but you shouldn't have to do
       it to make your meaning clear in user documentation.  If
       something seems ambiguous without, try rewording it instead.

    About Screenshots
    =================

    We recommend saving your current user preferences as a new theme
    using the KDE theme manager, so you can restore your usual
    desktop after your work on this manual is done.  Then we
    recommend that you spare yourself some effort, and use the
    "Rosegarden Handbook" KDE theme I just created, and put here:
    	
	http://rosegarden.sourceforge.net/Rosegarden\ Handbook.kth

    If you can't use the theme for some reason, you must dial in
    these changes by hand.  Screenshots used with this documentation
    should use the following style, colour and font settings:

    (NOTE: These specs are from the KDE 2.x era, surely, and make no
    particular mention of icon themes.  I have no idea what icons
    were used in the original version of this document, since it was
    not specified.  I have used the new default "Crystal SVG" icons
    in creating the theme above.  This will probably result in a
    mis-match, but I find I really don't care.)

    (NOTE in reply to the above: the scheme was originally from
    KDE 2.x, yes.  I suggest we don't worry about icon mismatches too
    much, as most of the screenshots don't have icons in semantically
    meaningful roles anyway.  I use Crystal SVG too now and I don't 
    really intend to change that for the documentation.)

     * KDE Style: "Light Style, 3rd Revision"

     * Colour scheme: "Blue Slate", with high-contrast
       setting and with the standard widget background set to white.
       (I have this saved as a new scheme.)

     * Fonts: Verdana 11px for general use and menus; Verdana
       11px bold for window titles; antialiasing on, but sub-pixel
       antialiasing off.  (For pictures of the segment and instrument
       parameter boxes I usually turn the size up to 13px, which
       perhaps says something about our use of font size in these
       boxes.)  WARNING: This is not a reliable hint any more, as
       the KDE font size is not in pixels but points that depend
       on the detected monitor resolution.  Go for something that
       looks a bit like the existing screenshots; it will probably
       be smaller than 11pt.

       NOTE: switching off sub-pixel antialiasing is quite important,
       as otherwise your text will look weird and fuzzy to any
       readers with CRT monitors or LCDs with a different colour
       ordering.  The exact choice of font is less important: I
       think you can get away with Vera or whatever.

     * Window Decorations: "Quartz"

    None of these would be my first choice for nice-looking
    screenshots now, but we're not here to sell Rosegarden in this
    document, we're here to provide clear and consistent help text.
    So the priority is to make new screenshots look like the existing
    ones, not to make them look fancy.  Also, I think there is an
    advantage to having screenshots in a help document look a bit
    distinct from the user's own window decorations surrounding the
    help text.

    Screenshots of the whole program or of whole matrix or notation
    windows may be taken using different themes if desired, but
    screenshots of individual dialogs or window components must use
    the above scheme.

-->

<!--
    Notes on Usability Defects
    ==========================

    This comment is a place to note anything I find difficult to
    document, or anything where the functions for two necessarily
    linked concepts are not actually linked in the GUI (etc).

    * The audio file directory (in document properties) can't be
      inspected or changed from the audio file manager.  This is
      arguably linked to a need for a project directory.  There
      are various other usability problems with the audio file
      manager as well, e.g. there's no way to tell it to pull all
      imported audio files into a single audio directory.

    * Track buttons showing sometimes-instrument, sometimes-label.

    * Mostly FIXED - Can't usefully double-click / right-click on
      most rulers.  This would be useful for a slower but clearer
      way to set loops; adding and editing markers; etc.  Setting
      loops is particularly opaque especially in notation and
      matrix views.

    * Hideous inconsistency (documented in an RFE already) between
      having to use RG for MIDI routing and being unable to use RG
      for audio routing.

    Troubleshooting
    ===============

    Shall we have a troubleshooting section?

    * I'm not seeing any MIDI outputs
    * I'm not hearing any sound from my MIDI outputs
    * I'm not seeing any audio outputs
    * I'm not hearing any sound from my audio outputs
    * I don't see any synth plugins

-->

<!--
    Still to do (yeah right, in 30 to 75 years)
    ===========

    * Control rulers

    * Controller editing

    * Event list

    * Event editor dialogs

    * Document properties

    * Add images for the tools (move, split &c) when describing them

    * Add images for transport buttons in transport section

    * Update notation menu references

    * Add new notation stuff     <- "new" when this to-do item was added? when was that I wonder?

    * Config dialog

    * Make sure the guimenuitem etc tags are being used for all menu refs

    * Give keyboard shortcuts for menu functions? SOM

    * Go through again changing Rosegarden -> &rosegarden; and double-hyphen ->
      &ndash; or &mdash; and review any uses of "the ... function" to see
      if these words are redundant

    * Troubleshooter

    * Check !!! items

    * Fill gaps in revision history

    * Consistent capitalisation: Instrument Parameter Box or instrument
      parameter box?  Audio Mixer or audio mixer?  Device or device?

    * Finally, review the structure again and adjust the <chapter>/<sect*>
      for balance

-->


<book id="rosegarden" lang="&language;">

  <!-- This header contains all of the meta-information for the document such
  as Authors, publish date, the abstract, and Keywords -->

  <bookinfo>
    <title>Rosegardenハンドブック</title>
    <authorgroup>
      <author>
	<firstname>Chris</firstname>
	<surname>Cannam</surname>
      </author>
      <author>
	<firstname>Richard</firstname>
	<surname>Bown</surname>
      </author>
      <author>
	<firstname>Guillaume</firstname>
	<surname>Laurent</surname>
        <firstname>D. Michael</firstname>
        <surname>McIntyre</surname>
        <firstname>Pedro</firstname>
        <surname>Lopez-Cabanillas</surname>
        <firstname>Heikki</firstname>
        <surname>Junes</surname>
	<firstname>Shelagh</firstname>
	<surname>Manton</surname>
      </author>
      <!-- TRANS:ROLES_OF_TRANSLATORS -->
    </authorgroup>

    <copyright>
      <year>2002-2008</year>
      <holder>Chris Cannam, Richard Bown, Guillaume Laurent, D. Michael
      McIntyre, Pedro Lopez-Cabanillas, Heikki Junes, Shelagh Manton</holder>
    </copyright>

    <date>2008-05-05</date>
    <releaseinfo>1.7.0</releaseinfo>

    <abstract>
      <para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-mainwindow.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>

	&rosegarden; はオーディオと  &MIDI; シーケンサと楽譜エディタである。この
        ハンドブックはどのようにこれを使うかを説明する。

      </para>
    </abstract>

    <keywordset>
      <keyword>Rosegarden</keyword>
      <keyword>sequencer</keyword>
      <keyword>MIDI</keyword>
      <keyword>audio</keyword>
      <keyword>music</keyword>
      <keyword>notation</keyword>
      <keyword>score</keyword>
      <keyword>KDE</keyword>
    </keywordset>

  </bookinfo>

  <!-- The contents of the documentation begins here.  Label each
  chapter so with the id attribute. This is necessary for two reasons:
  it allows you to easily reference the chapter from other chapters of
  your document, and if there is no ID, the name of the generated HTML
  files will vary from time to time making it hard to manage for
  maintainers and for the CVS system. Any chapter labelled (OPTIONAL)
  may be left out at the author's discretion. Other chapters should
  not be left out in order to maintain a consistent documentation
  style across all KDE apps. -->

  <chapter id="introduction">
    <title>概要</title>

    <sect1>
      <title>Rosegardenの概要</title>
    <para>
      <application>Rosegarden</application> は &MIDI;と音シーケンサ
      と楽譜エディタである。.  &rosegarden; は音楽の録音、編曲と作曲ができる。音楽は
      従来の楽譜か&MIDI; データ、あるいは指定した任意の音源かギターか
      マイクからの入力で録音されたものか、一続きの音ファイルから
      インポートされたもので表現される。
      &rosegarden; を、合成したりエフェクトを追加することができる、コンポジションの
      作成のために、書き込み、編集と音楽の編集のために使うことができ、
      CD書き込みのためのミックスダウンかWebへの公開にも使うことができる。
      &rosegarden; はまた、高品質の印刷出力のために、調和のとれた楽譜
      編集機能を含む。
    </para>

    <para>
      <application>Rosegarden</application>は、他のプラットフォームから来た、
      経験者にとって、見栄えと動作が親しみやすいように設計され、また、一般的に、
      新しいユーザにとって、アクセスしやすく、親しみやすいようになっている。
    </para>

    <sect2 id="intro-handbook">
      <title>このハンドブックについて</title>
    <para>
    このハンドブックは参考資料と基本概念の簡単な概要と、&rosegarden; の
    使用法を含んでいる。これは、&rosegarden;中で有効な機能とコンセプトに
    対するリファレンスとして使うか、そのように読むように、意味をなすように
    設計されている。チュートリアルをよく読みたいのであれば、<ulink
    url="http://rosegarden.sourceforge.net/tutorial/en/chapter-0.html">に用意
    してある。</ulink>。</para>

    <para>もしも、何らかの点で、理解できないことがあるか
	  追加してもらいたいヘルプがあるならば、
    <ulink url="http://www.rosegardenmusic.com/support/">the
    &rosegarden; website</ulink>にある、FAQとメーリングリストの説明を
    見てほしい。
    </para>
    </sect2>

    <sect2 id="intro-menufunctions">
      <title>メニューとショートカット</title> <para>このハンドブックは、通常メニュー
	上に存在する説明によって、&rosegarden;中で使うことが出来る機能を参照する。
	たとえば、メイントラックエディタで新しい1つのトラックを追加する機能は、
	<menuchoice>
<shortcut><keycombo><keycap>Ctrl</keycap><keycap>T</keycap></keycombo>
</shortcut>
	  <guimenu lang="en">Tracks</guimenu>
	  <guimenuitem>トラックの追加</guimenuitem>
	</menuchoice>である。</para>

      <para>多くの場合、これは特定の機能に到達する唯一の方法ではない。この場合、
	キーボードショートカットを通じて同じ機能が有効であり、また、メインウィンドウの
	ツールバー中の1つのアイコンとしても、提供されている。キーボートショートカットと
	アイコンの両方は、機能の名前が&rosegarden;のメニューに沿って表示されている
	ので覚えるのに簡単である。
	参照目的のために、この文書が全部のメニュー位置をいつでも与えるが、それが
	その機能を使うのに必ずしも最適か、よりよい方法ではない事を心に留めておく
	事は必要で、キーボードショートカットやツールバーアイコンも同様に、注目
	しておかなければならない。自分自身専用の
      <link linkend="keyboard-shortcuts">キーボードショートカット</link>を追加することが出来る。
      </para>
    </sect2>
    <sect2 id="keyboard-shortcuts">
      <title>固有のキーボードショートカットの設定</title>
      <!-- I'm not particularly happy with the placement of this section. I would prefer
           it to be part of a configuration section which
	  <screenshot>, I note, is meant to be written
           some time(tm). Then I could put a simple link to it from the previous section. SOM -->
      <para>もしも、何回も同じメニュー項目に行く事に気がつくならば、固有のショートカットを
	設定することを考えるべきであろう。ダイアログボックスを開く
      <menuchoice><guimenu lang="en">設定</guimenu> <guimenuitem>ショートカットの設定
      </guimenuitem></menuchoice>に行き、固有のキーボードショートカットを作ることが
      できる。たとえば例を挙げると、常にlyricエディタを開くとする。キーボードショートカット
      を設定するには、ダイアログボックスの一番上にある検索ボックス中で<quote>lyric</quote>
      を探す。これは、検索結果中の表示において、lyricエディタにフィールドを絞る。
      この後、そこをクリックすると、ショートカットエディタが起動する。</para>
	<para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-shortcut-editor.png" format="PNG"/>
	    </imageobject>
	    <textobject>
	      <phrase>lyricエディタのためのサンプルショートカットを表示するショートカットエディタ</phrase>
	    </textobject>
	  </mediaobject>
	</screenshot>
	</para>
<para>キーボードを使ってそのボックスの中に、選択したキーを置く。&rosegarden;は
  そのショートカットがすでに使われているかを知らせる。もしも、キーコンビネーションを
  使いたいならば、それらのキーを押すだけでよい。<guibutton>OK</guibutton>をクリック
  すると完了である。これのよいところは、ビルトインのものと同様に、メニュー上に
  そのショートカットが表示されることである。</para>
<para>おのおののエディタは固有のキーボードショートカットセットを持つ。たとえば、
  音符エディタ中では、<keycap>E</keycap>は<link
linkend="matrix-insertion-keyboard">entering notes</link>として使われるが、
  通常<keycap>E</keycap>はイベントリストエディタをオープンするのに使われる。
  これを、効率的に使うことができる。
You can use this to your advantage however,
as you can make a keyboard shortcut from the notation editor's
  音符エディタの<guimenuitem>設定</guimenuitem>メニューからキーボードショートカット
  を作るのと同様、これを効率的に使うことができ、音符エディタ内からイベントリストエディタ
  をオープンするために、
<keycombo><keycap>Alt</keycap><keycap>E</keycap></keycombo>を使える。</para>
 <!-- This is going to complicate writing up a
table for keyboard shortcuts-SOM -->
</sect2>


    <sect2 id="intro-optional">
      <title>オプションの機能</title> <para>このハンドブックは、インストールした&rosegarden;が
	持てる全ての機能をインストールされていることを仮定している。いくつかの、非常にメジャーな
	ものを含む&rosegarden;の機能は、実際は、他のライブラリとサポートコードに依存して、
	&rosegarden;のインストールを実行するときに、オプションである。例を挙げると、全ての
	オーディオサブシステムは、JACKライブラリが有効であるときに、コンパイル時に組み込まれる。
	シンセサイザープラグインサポートは、数多くの他のモジュールに依存するなどである。</para>
	<para>これらの依存性は、&rosegarden;のREADMEと設定ドキュメントに記載されている。
	もしも、このハンドブックが参照する機能が、使っている&rosegarden;のバージョンで見つからない
	ならば、設定ドキュメントを見るか、ディストリビュータに相談してほしい。
      </para>
    </sect2>
    </sect1>
  </chapter>


<!--
  **********************************
 
   PART I:
   Discussion and tutorial material

  **********************************
  -->


  <chapter id="file-operations">
    <title>Rosegardenのファイルとドキュメントの基礎</title>
     <para>
	&rosegarden; は各々の楽曲情報を固有のドキュメントに、固有の内部
        形式で格納する。ドキュメントをセーブするとき、ディスク上に、
        .rg 拡張子を付けたファイルとして格納される。.<footnote><para>
	 多くの利用者は我々の不可解なバイナリフォーマットに困惑するかもしれない。
	これは実際、gzipされたXMLファイルである。</para></footnote>&rosegarden; は、
        いくつかの、その他のファイル形式も扱うことができる。
      </para>
    <para>
      &rosegarden;は固有の内部フォーマットを使って、おのおののコンポジションを
      固有のドキュメントに保存する。ドキュメントを保存すると、.rgという
      拡張子を付けたファイルとしてディスクに保存される。
      <footnote><para>
	  多くのユーザは不透明なバイナリファイルフォーマットに困惑していた。
	  実際、それは、gzipで圧縮したXMLファイルである。
     </para></footnote>  &rosegarden; は、その他の標準ファイルフォーマットも
      扱うことが出来る。</para>

    <sect1 id="file-creating">
      <title>新しいコンポジション</title>
	<para>
	  &rosegarden; の起動時には、編集を行なうための、<quote>空白の</quote>楽曲情報
          を含む新しいドキュメントが開かれる。その楽曲情報になんらかのもの
          を配置するために、何らかを録音するか、色々な編集機能を使って埋める
          ことができる、長さ0(空白)の音楽(<quote>セグメント</quote>として参照される)を
          作成しなければならない。
	</para>
	<para>音楽の録音についての詳細の記述がある
              <link linkend="recording">録音</link> と、どのように音楽のセグメントを作成、
	編集、編集するかが記載されている<link linkend="segment-view">トラックエディタ</link>
	 セクションを参照のこと。
	</para>
    </sect1>

    <sect1 id="file-midi">
      <title>MIDIファイルの使用法</title>
      <para>
	&MIDI; ファイルをインポート/エクスポートするには、
	<menuchoice>
	  <guimenu lang="en">ファイル</guimenu>
	  <guisubmenu>インポート</guisubmenu>
	  <guimenuitem>MIDIファイルのインポート</guimenuitem>
	</menuchoice>
	と
	<menuchoice>
	  <guimenu lang="en">ファイル</guimenu>
	  <guisubmenu>エクスポート</guisubmenu>
	  <guimenuitem>MIDIファイルのエクスポート</guimenuitem>
	</menuchoice>を使用する。
      </para>
      
	<para>
　　　　　&rosegarden; が&MIDI;ファイルのようなファイル形式をロード/セーブ
	  できるにもかかわらず、内部的には&MIDI;データを格納しない。
	  一般的には、&rosegarden; が、&MIDI;にエクスポートするときに
          失われる大量の情報を格納する &rosegarden; 固有の形式でセーブ
	  することを選択しなければならない。これは単にファイルをインポートし、
	またもとにエクスポートする時にも適用される。&rosegarden;は生の&MIDI;を
	内部形式に変換し、次に、そのフォーマットを&MIDI;にもどす。
	ファイル構造に関するいくつかの詳細はこの翻訳中では失われたり、再構成
	されているが、結果として生じるパフォーマンスは機能的に同一でなければ
	ならない。
      </para>
	<para>
	  &MIDI;ファイルがロードされると、&rosegarden;は音楽データを
	  &MIDI;1トラックごとに1つのトラックに分割するか、ファイルに送り
	  込み、
	  <link linkend="studio-midi-import">適切な楽器のマッピングを
	  行ない</link>、 <link
	  linkend="nv-quantization">&MIDI;パフォーマンスデータのために
	  もっともな楽譜</link>を計算することを試みる。
	</para>
    </sect1>

    <sect1 id="file-rgproject">
      <title>Rosegardenプロジェクトファイル</title> <para>&rosegarden;の
      コンポジションファイル(.rg)には、コンポジション内すべての音符情報
      が、他のデータ、たとえば、&MIDI;コントローラの設定、プラグインの詳細と
      コンポジションが参照する任意のオーディオファイルの名前などと同様に
      含まれている。オーディオファイルそれ自身は&rosegarden;コンポジション
      ファイル内には保存されない。その代わりに、ディスク上でのそれへの
      位置を保っておく事が期待される
      (<link linkend="segment-view-audio-segments">オーディオセグメント</link>)
      を参照)。
      コンピュータからその他、あるいは有人や同僚に、これは不便である。
      これが、&rosegarden;プロジェクトファイルが便利であるところである。
      プロジェクトファイルは、コンポジション、それが使うすべてのオーディオファイル、
      コンポジション中で使うプラグインのために要求されるデータファイルと、
      一緒にしておくことを望んでいる任意のファイルをすべて1つの大きな束に
      して含んでいる。</para>
      <para>
	<menuchoice>
	<guimenu lang="en">ファイル</guimenu>
	<guisubmenu>エクスポート</guisubmenu>
	<guimenuitem>Rosegardenプロジェクトファイルをエクスポート</guimenuitem>
	</menuchoice>は、現在のコンポジションと、rosegarden;プロジェクトファイルに
	入れる、関連するデータをエクスポートするために使い、
	  <menuchoice> 
	    <guimenu lang="en">ファイル</guimenu>
	    <guisubmenu>インポート</guisubmenu> 
	    <guimenuitem>Rosegardenプロジェクトファイルのインポート</guimenuitem>
	    </menuchoice>は、 to expand a &rosegarden;プロジェクトファイルを
	    コンポジション中に展開してロードするために使う。</para>

      <para>&rosegarden;プロジェクトフォーマットはデータ交換用のフォーマットで
      あり、アーカイブフォーマットでないことに注意。rosegarden;コンポジション
      ファイルは1つのrosegarden;バージョンから次のバージョンへの互換性を注意深く
      検査してあるにもかかわらず、プロジェクトファイルフォーマットに対しては
      長期間の保証はされていない。</para>
    </sect1>
    
    <sect1 id="file-other">
      <title>その他のファイルフォーマット</title>
	<para>&rosegarden;はいくつかの他のファイルフォーマットをエクスポートしたり
	インポートできる。それらのいくつかは、ここで詳細を記している。LilyPond
	ファイルフォーマットのための情報は、<link linkend="file-printing">Printing</link>
	も参照のこと。</para>
	<variablelist>
	<varlistentry>
	<term>Csound</term>
	<listitem>
      <para>Csound synthesisシステムに対するスコアファイルのエクスポートは、
	<menuchoice>
	  <guimenu lang="en">ファイル</guimenu>
	  <guisubmenu>エクスポート</guisubmenu>
	  <guimenuitem>Csound楽譜ファイルのエクスポート</guimenuitem>
	</menuchoice>を使って行う事ができる。適合するオーケストラファイル(提供
	されていない)と一緒にするために、
	<ulink url="http://www.csounds.com/">Csound</ulink>を通してコンポジションを
	演奏するために使うことができる。</para>
	</listitem>
	</varlistentry>
	<varlistentry>
      <term>Mup</term>
	<listitem>
	<para>You can use <menuchoice>
	    <guimenu lang="en">ファイル</guimenu>
	    <guisubmenu>エクスポート</guisubmenu>
	    <guimenuitem>Export Mup file...</guimenuitem>
	  </menuchoice>を、現在のコンポジションの内容を新しいMupファイルに
	  セーブするために使うことができる。これは、次に音楽印刷システム
	  <ulink url="http://www.arkkra.com/">Mup</ulink>で処理することができるが、
	  真によい品質の出力を得るために、いくつかの微調整が必要かもしれない。
	  &rosegarden;コンポジション中のすべてのデータがMupフォーマットで保存され
	  るというわけではないことに注意。</para>
      </listitem>
	</varlistentry>
	<varlistentry>
      <term>MusicXML</term>
	<listitem>
	<para> <menuchoice>
	    <guimenu lang="en">ファイル</guimenu>
	    <guisubmenu>エクスポート</guisubmenu>
	    <guimenuitem>Export MusicXML file...</guimenuitem>
	  </menuchoice>は現在のコンポジションの内容を新しいMusicXMLファイルに
	  セーブする。これは、MusicXMLフォーマットをサポートしている任意の
	  音楽ソフトウェアとともに使うことができる。MusicXMLのサポートは
	  実験的で、まだよくテストされていないことに注意。&rosegarden;コンポ
	  ジション中のすべてのデータがMusicXMLフォーマットで保存され
          るというわけではないことに注意。</para>
	</listitem>
	</varlistentry>
	<varlistentry>
      <term>Hydrogen</term>
	<listitem> <para>&rosegarden; はHydrogenドラムマシンによって作成された
	    h2songファイルフォーマットをインポートできる。これは、パターンに付き
	    1つのトラックという骨格だけの&MIDI;スタイルの構造でインポートされる。
	    Hydrogenファイルをインポートするには、<menuchoice>
	    <guimenu lang="en">ファイル</guimenu>
	    <guisubmenu>インポート</guisubmenu>
	    <guimenuitem>Hydrogenファイルのインポート file...</guimenuitem>
	  </menuchoice>を使う。</para>
	</listitem>
	</varlistentry>
	<varlistentry>
      <term>Rosegarden 2.1</term>
	<listitem>
	<para>存在しているX11 &rosegarden; v2.1(.rose)ファイルの内容から新しい
	  コンポジションを作成するためには
	  <menuchoice>
	    <guimenu lang="en">ファイル</guimenu>
	    <guisubmenu>インポート</guisubmenu>
	    <guimenuitem>Rosegarden 2.1ファイルのインポート</guimenuitem>
	  </menuchoice>を使う。
	  </para>
	</listitem>

	</varlistentry>
	</variablelist>
      </sect1>

    <sect1 id="file-merge">
	<title>ファイルのマージ</title>
	 <para>
	 ファイルをロード/インポートするだけではなく、現在のドキュメント
	 中にそれらをマージすることも、すでにそこにあるファイル中にある
	 セグメントを追加することもできる。
	  </para>
      
      <para>ファイルをマージするため、  <guisubmenu>オープン</guisubmenu> か
	<guisubmenu>インポート</guisubmenu>オプションの代わりに、
	<menuchoice>
	  <guimenu lang="en">ファイル</guimenu>
	  <guisubmenu>マージ</guisubmenu>
	</menuchoice>
	上のサブメニュー上の適切なオプションを使う。
      </para>
    </sect1>

    <sect1 id="file-printing">
	<title>印刷</title>
	<para>
	  ファイルメニュー中の"印刷"機能を使うことで、
	  楽譜として楽曲情報を印刷することができる。これは、
	<menuchoice>
	  <guimenu lang="en">ファイル</guimenu>
	  <guimenuitem>印刷</guimenuitem>
	</menuchoice>
	 か
	<menuchoice>
	  <guimenu lang="en">ファイル</guimenu>
	  <guimenuitem>LilyPondで印刷</guimenuitem>
	</menuchoice>.
	を使う。
      </para>

	<para>
	  楽譜を演奏データから作成することは大変な作業なので、
	  ほとんどの場合、&MIDI;データに基づく既定値の印刷結果がとても読み
	  やすいことを期待するのは無謀である。印刷する前に、楽譜を
	  <link linkend="notation-view">楽譜エディタ</link>
	  を使って整形すべきである。
	  (<link  linkend="nv-quantization">演奏データからの作譜</link>
	   も参照のこと。)
	</para>

	<para>
	  注意深く扱うことによって、 &rosegarden;はとても読みやすい楽譜を
	  作成する能力がある。たとえそうでも、スクリーンエディタとして
	  デザインされたのであって、写植機ではない。本当に印刷品質の
	  楽譜を作成したいのであれば、&rosegarden; と結合できる
	  <ulink url="http://www.lilypond.org">Lilypond</ulink>
	  を考慮すべきである。 Lilypond は楽譜の写植を行なうソフトウェアで、
	  特別なテキストファイル形式を読み込み、高品質の活字化された
	  楽譜を生成する。
	  &rosegarden; は
	  <menuchoice>
	    <guimenu lang="en">ファイル</guimenu>
	    <guisubmenu>エクスポート</guisubmenu>
            <guimenuitem>LilyPondにエクスポート</guimenuitem>
          </menuchoice>を使うことによって、Lilypondファイルを書き出す
	  ことができ、
           and it
	  features special <link linkend="nv-lilypond-directives">exportable
	      directives</link> and <link linkend="track-parameters">track
	      parameters</link> that provide access to LilyPond features for
	  which there is currently no parallel within &rosegarden;'s own
	  native interface.
      </para>

      <para>LilyPondは、ファイルをテンポラリファイルにエクスポートし、
	PDFビューワでプレビューするために直接LilyPondで処理する
	  <menuchoice>
	    <guimenu lang="en">ファイル</guimenu>
            <guimenuitem>LilyPondでプレビュー</guimenuitem>
          </menuchoice>を一緒に使うと便利である。
	  プレビューで問題がなければ、PDFビューワの印刷機能を使って楽譜を
	  印刷するか、あるいは、
	  <menuchoice>
	    <guimenu lang="en">ファイル</guimenu>
            <guimenuitem>LilyPondで印刷</guimenuitem>
          </menuchoice>を使ってもよい。
      </para>

      <para>
	LilyPondによるエクスポート、プレビューあるいは印刷が終わると、
	いくつかの
	  <link linkend="lilypond-options">LilyPondオプション</link>の集まりも
	  有効になる。
      </para>
      </sect1>

    <sect1 id="lilypond-options">
      <title>LilyPondオプション</title> <para>もしもLilyPondエクスポート機能の
	1つを使うならば、LilyPondに対して指定するオプションがあるダイアログが
	表示され、変更することが出来る。
      </para>

      <variablelist>
	<varlistentry>
	  <term>LilyPondのバージョン</term>
	    <listitem><para>
		システムにインストールされたLilyPondのバージョンは、自動的にダイアログ中で
		検出すべきであるが、2.6から他のLilyPondのバージョンにエクスポートできる。
		歴史的経緯で、LilyPondの文法は、時間がたつごとに変わっていったが、LilyPond
		2.6より、変更はあまり急激でなくなり、メンテナンス性が向上した。</para>
	    </listitem>
	</varlistentry>
	<varlistentry>
	  <term>紙のサイズと方向</term>
	    <listitem><para>
		紙のサイズはA3, A4, A5, A6, Legal, US LetterとTabloidが使える。
		すべての紙のサイズは、横方向でも可能である。</para>
	    </listitem>
	</varlistentry>
	<varlistentry>
	  <term>フォントサイズ</term>
	    <listitem><para>
		フォントサイズは音符の大きさに影響する。もしも、紙の中に五線を
		よりうまく適合したいならば、フォントサイズを小さくする必要がある。</para>
	    </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Export content</term>
	    <listitem><para>
		Export content concerns tracks that have segments in them, which
		are the tracks that are not empty.
		It is possible to export <quote>All</quote> tracks, <quote>Non-muted</quote> tracks, the current
		<quote>Selected</quote> track, or <quote>Selected</quote> segments.  If LilyPond export is
		launched from the Notation view, Selected segments include
		the same selection which was used in opening the Notation view.</para>
	    </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Merge tracks that have the same name</term>
	    <listitem><para> It is possible to Merge tracks that have the same name.  This
	    options allows for example to make a piano score with several independent
	    voices.  You may give first three tracks name <quote>Right</quote> and three
	    next tracks <quote>Left</quote> and then merge them in LilyPond export.  (This
	    provides an easier way to manage overlapping segments with the price that the
	    top and bottom parts will have different names on the page.  If you wish both
	    of them to be named, eg. <quote>Piano,</quote> then you will have to keep all
	    of the segments on the same pair of staffs. Consult <ulink
	    url="http://rosegarden.sourceforge.net/tutorial/supplemental/piano/">Piano by
	    Example</ulink> for a hands-on demonstration of this.) <!-- this comment makes
	    absolutely no sense to me(dmm): Sometimes you may encounter notes that overlap
	    in printed form, you may avoid them by selecting one of the collapsing notes
	    and fine adjust its position in Notation view function -->
	  <menuchoice>
	    <guimenu lang="en">Adjust</guimenu>
            <guisubmenu>Fine Positioning</guisubmenu>
            <guimenuitem>Push Right/Left</guimenuitem>
          </menuchoice>.</para>
	    </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Export tempo marks</term>
	    <listitem><para>
		Tempo marks are not exported by default.  If tempo changes
		rarely, you may want to export all tempo marks, but if
		tempo changes too often, you may export only the first mark.</para>
	    </listitem>
	</varlistentry>
	<varlistentry>
	  <term>歌詞のエクスポート</term>
	    <listitem><para>
		<link linkend="nv-text-lyrics">Lyrics</link> is exported if this
		option is checked.  Text is entered in Unicode, which
		makes it possible to enter lyrics in all languages.  Multiple
		lines of lyrics per staff is also possible, see the section
		on <link linkend="nv-text-lyrics">Editing lyrics</link>.</para>
	    </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Export beamings</term>
	    <listitem><para>
		<link linkend="nv-beamed-groups">Beams</link> defined in
		&rosegarden; can be exported, or the default
		beam grouping of LilyPond can be used.  Future versions
		of &rosegarden;arden; may support nested note grouping.</para>
	    </listitem>
	</varlistentry>
<!-- deprecated
        <varlistentry>
	  <term>Add staff group bracket</term>
	    <listitem><para>
		Staff group bracket may be added to cover all staffs.
		Future versions of &rosegarden; may support nested staff
		groupings.</para>
	    </listitem>
	</varlistentry> -->
	<varlistentry>
	  <term>Lyrics alignment</term>
	    <listitem><para>
		Lyrics are aligned left by default.  Sometimes center or
		right alignment provide more pleasing output.</para>
	    </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Ragged bottom</term>
	    <listitem><para>
		The staffs normally cover the whole page from top to bottom.
		When there are only a few staffs, this option places the
		extra vertical space at the bottom of the page.</para>
	    </listitem>
	</varlistentry>
	<varlistentry> <term>Interpret chord texts as lead sheet chord names</term>
	  <listitem><para> Tick this item if you wish to turn on the fancy LilyPond jazz
	  chords for <link linkend="lead-sheets">Lead Sheets.</link> instead of the
	  standard &rosegarden; chords.</para> </listitem> </varlistentry>

	    <varlistentry>
	  <term>Enable <quote>point-and-click</quote> debugging</term>
	    <listitem><para>
		If you export the LilyPond source with 
	  <menuchoice>
	    <guimenu lang="en">File</guimenu>
	    <guisubmenu>Export</guisubmenu>
            <guimenuitem>Export LilyPond</guimenuitem>
          </menuchoice>, you may open the LilyPond source by clicking
		notes in the PDF output.  Consult <ulink url="  http://lilypond.org/doc/v2.10/Documentation/user/lilypond/Point-and-click#Point-and-click">LilyPond documentation</ulink> for more
		information.
</para>
	    </listitem>
	</varlistentry>	<varlistentry>
	  <term>\midiブロックのエクスポート</term>
	    <listitem><para>
			    LilyPon&rosegarden;d is also capable of producing &MIDI; output.  Check this
		option if you wish the LilyPond source to use this option.
		Note however that &MIDI; output which you obtain with &rosegarden;
		sequencer, via
	  <menuchoice>
	    <guimenu lang="en">ファイル</guimenu>
	    <guisubmenu>エクスポート</guisubmenu>
            <guimenuitem>MIDIファイルのエクスポート</guimenuitem>
          </menuchoice>,
		and LilyPond's &MIDI; output may differ considerably.</para>
	    </listitem>
	</varlistentry>	<varlistentry>
	  <term>Headers</term>
	    <listitem><para>
		You can edit headers both in LilyPond export dialog and through
	  <menuchoice>
	    <guimenu lang="en">Composition</guimenu>
	    <guisubmenu>Edit Document Properties</guisubmenu>
          </menuchoice>.</para>
	      <para>Some of the headers will appear
		only in LilyPond output.
		The position of the printable headers match roughly with
		the positions of the headers in the printed output.
		Below is shown an example with all headers and lyrics
		entered with Unicode text.</para>
	<para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="headers-and-unicode-lyrics.png" format="PNG"/>
	    </imageobject>
	    <textobject>
	      <phrase>LilyPond's output showing all headers and Unicode lyrics.</phrase>
	    </textobject>
	  </mediaobject>
	</screenshot>
	</para>
	    </listitem>
	</varlistentry>
      </variablelist>
      </sect1>

  </chapter>

  <chapter id="segment-view">
    <title>トラックエディタ</title>
    <sect1 id="segment-view-overview">
      <title>概要</title>
	<para>
	    &rosegarden; のメインレイアウトは、その他の一般的なシーケンサ
	    とよく似たコンセプトである。これは、&mdash; のトラック
	    コンセプトを基礎としていて、メインウィンドウはトラックの
	    一覧を表示しているトラックエディタを表示し、そのトラックは、
	    左側の下の楽器に関連付けられている。
	    (<link linkend="notation-view">notation</link>、
	    <link linkend="matrix-view">matrix</link>、と 
	    <link linkend="percussion-matrix-view">percussion matrix</link>と、
	    <link linkend="event-view">event list</link>)という特化した
	    エディタ中でセグメントそれ自身をオープンするのと同じように、
	    トラックエディタ上で<quote>;セグメント</quote>として参照
	    される)音楽データのブロックを移動したり操作することができる。
	</para>
      
      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-trackeditor.png" format="PNG"/>
      </imageobject>
	<textobject>
	  <phrase>2つの音楽データのセグメントを表示している&rosegarden;'のトラックエディタ</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

      <para>
	Tracks govern what sort of segment you can create in a particular
	place.  If you create a segment on an audio track, it will be an audio
	segment, no matter where that segment subsequently moves.  If you
	create a segment on a &MIDI; track, it will always be a &MIDI;
	segment.  You can set <link linkend="track-parameters">
	track parameters</link> to pre-select various segment properties at the track
	level, and to exercise fine control over &MIDI; recording.
      </para>
      <para>
      トラックは、&MIDI;のレンジや、プラグインシンセサイザ、オーディオ楽器(audio instruments)
      に割り当てることができる。上記の絵の中では、トラックエディタ上で
     3つのセグメントが表示されていて、 それはにGeneral &MIDI;に割り当てられている。
      </para>
      
      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-trackbutton-labels.png" format="PNG"/>
      </imageobject>
	<textobject>
	  <phrase>トラックラベルを表示している&rosegarden;のトラックボタン</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

      <para>
	セグメントキャンバスの左のボタン領域はトラック番号、ミュートと
	録音ステータス、トラックのラベルを表示している。青色のLED風の
	ボタンをクリックすることで、トラックのミュート状態を設定でき、
	赤いボタンをクリックすることで、特定のトラックが録音ターゲット
	かどうかを選択する。トラックラベルを変更するには、それをダブル
	クリックする。
      </para>
      
      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-trackbutton-instruments.png" format="PNG"/>
      </imageobject>
	<textobject>
	  <phrase>インスツルメントの割り当てを表示している&rosegarden;のトラックボタン</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

      <para>
	トラックラベルは
	<menuchoice>
	  <guimenu lang="en">設定</guimenu>
	  <guimenuitem>トラックラベルを表示</guimenuitem>
	</menuchoice>
	メニューオプションが有効になっているときのみ表示される。
	それ以外は、この図のように、トラックへのインスツルメントの
	割り当てが、その代わりに表示される。</para>

    </sect1>
    <sect1 id="segment-view-instruments">
      <title>トラックとインスツルメント</title>
      <para>
	各々のトラックは、音を鳴らすために、それに割り当てられている
	 インスツルメントを持たなければならない。規定値では、最初の16トラックが
	最初に有効な&MIDI;デバイスの16インスツルメントに割り当てられ、
	次の16トラックがオーディオに割り当てられる。</para>

      <para>トラックに対するインスツルメントの割り当てを変更するためには、
	トラックラベル上で、右クリックを行う。選択できるところからポップアップ
	メニューが現れ、有効なすべてのインスツルメントがそれに添って表示される。
      </para>
      
      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-trackbutton-instrumentmenu.png" format="PNG"/>
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;のインスツルメントメニュー</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

      <para>
	      インスツルメントというものは、&MIDI;デバイス上の1つのチャネル、あるいは
	     モノ又はステレオのオーディオ出力か、オーディオシンセサイザープラグイン
	     として理解することができる。トラックには &MIDI;かシンセサイザープラグイン インスツルメントを割り当てられなければならず、また、それらはオーディオから
	     オーディオインスツルメントを含む。1つ以上のトラックに同じインスツルメントを
	     割り当てることができ、その場合、複数のトラックは同じ音を生成する(&MIDI;トラック
	     はフルートを伴って左にパンするか、<link linkend="studio-plugins">プラグイン</link>の
 	     同じスタックを通して同じボリュームレベル、でオーディオトラックを演奏する)。
      </para>
      <para>
	      <link
		   linkend="segment-view-instrumentparameterbox">インスツルメントパラメータ
		      ボックス</link> を使うことで、トラックに割り当てられた色々な
	      プロパティを変更することができる。ここは、たとえば、特定の
	      パッチを使って特定の音(ピアノ、ストリング、その他)を出すために
	      &MIDI;インスツルメントを設定するところである。
      </para>
      <para>
	インスツルメントについいての詳細がある、
	<link linkend="studio-introduction">Studio</link> セクションを
	参照のこと。
      </para>
	
    </sect1>
    <sect1 id="segment-view-creating">
      <title>セグメントの作成</title>

      <para>
	何らかの作曲を開始するために、1つの空白のセグメントを作成するために、
	鉛筆ツールを使う必要がある(それは最初に&rosegarden;を起動したときに通常
	規定値のアクティブなツールとなっている)。ツールバーの鉛筆をクリックし、
	セグメントを開始したい場所でまたクリックし、 (at the correct height for the
	track you want the segment to be on, and at a distance
	across the editor window corresponding to the correct time)
	and セグメントが正しい長さのバーになるまで右にドラッグする。
      </para>

      <para>You can also create segments using the <link
      linkend="segment-view-selector">選択ツール</link>, by clicking
      and dragging either with the middle mouse button, or with the
      left button and <keycap>Ctrl</keycap> held down.</para>


      <para>If you want to draw a segment longer than the visible
	portion of the canvas, the canvas will scroll automatically once you
	reach its edge.  If you keep dragging past the end of the entire
	composition, you can keep dragging, and will push the end marker right along
	with you.  (This is a welcome contrast to earlier versions of
	&rosegarden;.)
      </para>

      <para>
	既定値では、新しいセグメントはバーライン上で開始し、バー単位で
	拡張するが、これは、クリックとドラッグ中<keycap>シフトキー</keycap>を押すことに
	よってグリッドに張り付く効果を抑止できる。
      </para>

      <para>New segments are created in a yellow colour, with a treble clef by
	  default.  You may wish to jump ahead and have a look at <link
	      linkend="track-parameters">track parameters</link> to explore
	  other possibilities.
      </para>

      <para>If you wish to draw a segment that begins in the middle of an existing
      segment, hold <keycombo><keycap>Ctrl</keycap><keycap>Alt</keycap></keycombo> when
      clicking.  The track will automatically expand to accommodate this new segment.
      This is especially useful for some situations involving music notation.
      </para>

      <para>
	一度セグメントを作成すると、
	<link linkend="matrix-view">マトリクス</link> 又は
	<link linkend="percussion-matrix-view">パーカッションマトリクス</link>又は
	<link linkend="notation-view">譜面</link>エディタを使って編集を
	 開始できる。それらのエディタを使うためには、セグメントをダブル
	 クリックするか、右マウスボタンをクリックし、コンテキストメニュー
	 で使いたいエディタを選択する。
      </para>

      <para>
	 &MIDI;デバイスかオーディオ入力からの
	 <link linkend="recording">録音</link>を考えているならば、
	 最初に新しいセグメントを作成する必要はない &ndash; それぞれの分離
	された録音は、録音中に自動的に作成される常に新しいセグメント
	中に入る。
      </para>
    </sect1>

    <sect1 id="segment-view-audio-segments">
      <title>オーディオセグメント</title>
      <para>
	An audio segment contains recorded or sampled audio data,
	instead of editable note-event data.  &rosegarden; allows you to
	record, play, arrange and split audio segments, but does not
	contain audio waveform editing facilities.
	</para>
      <para>To create an audio segment, you can <link
      linkend="recording">record</link> from an audio source onto a
      track assigned to an audio instrument, or you can work with
      existing WAV files.  To do this, you need to use the audio
      manager dialog <menuchoice><guimenu
      lang="en">File</guimenu><guimenuitem>Manage Audio Files</guimenuitem></menuchoice>.
	</para>
      <para>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="rg-audiofilemanager.png" format="PNG"/>
      </imageobject>
	<textobject>
	  <phrase>The audio file manager</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

      <para>You can drag-and-drop audio files from the KDE file browser or your KDE
      desktop into the audio file manager, or you can open them using its
      <guimenuitem>File</guimenuitem> menu.  Then you can
      either drag-and-drop them onto &rosegarden;'s track canvas, or use the audio file
      manager's <menuchoice><guimenu lang="en">Action</guimenu><guimenuitem>Insert into
      Selected Audio Track</guimenuitem></menuchoice> menu, provided the current selected
      track in the main window is assigned to an audio instrument.  Newly-recorded audio
      segments also appear in the audio file manager dialog.</para>

      <para>Details of the audio files associated with a particular
      composition are saved with that composition, but the audio files
      themselves are not.  You should ensure your document has a
      sensible audio file search path using <menuchoice><guimenu
      lang="en">Composition</guimenu><guisubmenu>Edit Document
      Properties...</guisubmenu><guimenuitem>Audio</guimenuitem></menuchoice>
      so as to keep your audio files accessible together.  You can also export
      your project to a &rosegarden; project package file (.rgp) using
      <menuchoice><guimenu lang="en">File</guimenu>
      <guisubmenu>Export</guisubmenu><guimenuitem>Export Rosegarden Project File
      </guimenuitem></menuchoice> to collect any scattered audio files
      together in one place.</para>

      <para>The audio manager dialog also shows the sample-rate and
      other information for each audio file, and marks with an
      asterisk any audio file whose sample rate does not match that of
      the current JACK audio session that &rosegarden; is using.
      &rosegarden; will resample these files at playback time using a
      very low quality zero order hold resampler.  You are advised to
      resample them separately using a separate dedicated audio editor
      instead.
      </para>

    </sect1>
    
    <sect1 id="segment-view-manipulating">
      <title>セグメントの操作</title>
      <para>
	メインウィンドウはセグメントを編集するための<quote>ツール</quote>の集まり
	が用意されている。それらはメインツールバーで有効になっている。
	最初にツールバーから使いたいツールを選択し、メインキャンバス上の
	セグメント上にクリックとドラッグを行なう。
      </para>

      <sect2 id="segment-view-selector">
	<title>選択ツール</title>
	<para>
		"選択ツール"(矢印ツール)は実際には他目的のツールである:
		それは選択、移動、コピー、リサイズとセグメントの作成に
		使える。</para>
	<para>
	  選択ツール <inlinemediaobject> 
	<imageobject><imagedata fileref="rg-select.png" format="PNG" />
	</imageobject></inlinemediaobject>は実際には他目的のツールである:
	それは選択、移動、コピー、リサイズとセグメントの作成に使える。</para>
 
	<para>
	最も明白な使用方法は"選択"である:これは、選択ツールで、
	セグメントを、セグメント上でクリックすることで1つを選択するか、
	<keycap>シフトキー</keycap>を押したままでクリックしていくつかを選択するか、
	ウィンドウの空白の領域中でクリックして領域外にドラッグする。
	</para>

	<para>
	選択ツールでセグメントを移動するためには、単にクリックし、
	セグメントをドラッグする。コピーを作成するためには、<keycap>Ctrlキー</keycap>
	キーを押しながら、クリックとドラッグする。新しいセグメントを作成するため
	には、中マウスボタンか<keycap>Ctrlキー</keycap>を押しながら左マウスボタンを押す
	かして空白の領域をクリックしてドラッグする。
	</para>

	<para>
	選択ツールは、時々、&mdash;が
	特に小さなセグメント上で、意図している動作により明確にする必要がある
	にもかかわらず、	その他のツールを完全に置き換えるものではない。
	</para>

      </sect2>

      <sect2 id="segment-view-move-resize">
	<title>移動とリサイズツール</title>
	<para>セグメントを別の開始時間又はトラックに移動するためには、
	<inlinemediaobject><imageobject><imagedata fileref="rg-move.png" format="PNG" />
	</imageobject></inlinemediaobject>移動ツールを使い、移動したい場所に、
	セグメント上でクリックしドラッグする。 
	もしも<keycap>Ctrl</keycap>キーを押したまま移動するならば、
	セグメントは移動でなはくてコピーされる。</para>

	<para>セグメントのリサイズをしたいならば、リサイズツールを使い、
	<inlinemediaobject><imageobject><imagedata fileref="rg-resize.png" format="PNG"/>
	</imageobject></inlinemediaobject> セグメントの右端をクリックし、ドラッグする。
	Resizing a segment has the effect of extending or shortening it, by
	subtracting some of its contents or adding silence at the start or end.  If you
	hold down the <keycap>Ctrl</keycap> key, the segment will be <link
	linkend="segment-view-rescale">rescaled</link> (stretched or squashed) instead of
	extended or shortened.</para>

	<para>
	移動とリサイズの両方のために、特定のグリッド位置に張り付くのを
	防ぐため、<keycap>シフト</keycap>キーを押すことができる。
	</para>

      </sect2>

      <sect2 id="segment-view-rescale">
        <title>Stretching and squashing segments</title>
        <para>Resizing a segment normally makes it shorter or longer by subtracting
        content or adding some extra space.  However, by holding the <keycap>Ctrl</keycap>
        key while resizing, you can instead stretch or squash the contents of the segment.
        You can also do this by selecting the segment and then using <menuchoice><guimenu
        lang="en">Segments</guimenu>
      <guimenuitem>Stretch or Squash...</guimenuitem></menuchoice>.</para>
        <para>
          For segments that contain &MIDI; events, this re-spaces the
          events so that they are spread across the new segment's
          duration, playing back faster or slower than before but in
          the same relative proportions.
        </para>
        <para>
          For audio segments, this time-stretches the audio <footnote><para>For reference,
          &rosegarden; uses a frequency-domain time-stretcher based on a phase vocoder
          with phase-locking at percussive transients.  This usually produces good results
          with stable harmonic sounds such as pads and basses as well as purely percussive
          sounds such as drum loops, but is less effective for composite material or music
          with soft or breathy note onsets.</para></footnote>, altering its played speed
          without altering its pitch (as would happen if the audio was simply played back
          faster or slower).  Time-stretching usually adds some audible artifacts as well,
          so the quality of your results may vary.
        </para>
        <para>
          &rosegarden; does not alter the original audio file when
          time-stretching an audio segment, and if you rescale the same
          segment repeatedly it will always work from the original
          file instead of accumulating timestretching artifacts with
          each rescale.  You can rescale both mono and stereo audio.
        </para>
                 
      </sect2>

      <sect2 id="segment-view-split-join">
	<title>分割ツール</title>
	<para>
	<inlinemediaobject><imageobject><imagedata fileref="rg-split.png" format="PNG" />
	</imageobject></inlinemediaobject>
	を、1つのセグメントを2つの分離されたセグメントにするために
	  分割ツールを使うことができる。セグメントを分割するために、
	    分割ツールを選択し、分割したい点でクリックする。
	</para>
	<para>
	既定値では、セグメントは、カーソルに関係した最も近いバーラインに
	分割されるが、これはセグメントを分割している間<keycap>シフト</keycap>キーを押すこと
	で抑制できる。
	</para>

      </sect2>

      <sect2 id="segment-view-split-by-pitch">
	<title>Other Split functions</title>
	<para>The Segments menu contains a number of other Split functions.</para>
	<variablelist>
	<varlistentry>
	<term>Split on Silence</term>
	<listitem><para><menuchoice>
		  <guimenu lang="en">Segments</guimenu>
		  <guisubmenu>Split</guisubmenu>
		  <guimenuitem>Split on Silence</guimenuitem>
		</menuchoice>
	  splits the selected segments on silences.
		  This function works slightly differently depending
		  on whether the selected segments contain audio or
		  &MIDI; data.  For audio segments, it offers you a
		  dialog in which you can choose a threshold below
		  which the segment is considered <quote>silent</quote>; it then
		  splits the segment whenever its amplitude falls
		  below this threshold.  For &MIDI; segments, it simply
		  splits the segment everywhere that a full bar of
		  silence occurs.
	</para>
	</listitem>
	</varlistentry>
	<varlistentry>
	<term>Split by Pitch</term>
	<listitem><para>
		<menuchoice>
		  <guimenu lang="en">Segments</guimenu>
		  <guisubmenu>Split</guisubmenu>
		  <guimenuitem>Split by Pitch...</guimenuitem>
		</menuchoice>
		  splits the currently selected segments into higher and
		    lower parts.</para>

		 <para> This function invokes a dialog allowing you to
		  choose a pitch as a <quote>split point</quote>, and then splits
		  the selected segments in half with all the notes on
		  or above that split point in the <quote>higher</quote> segment
		  and all the notes below it in the <quote>lower</quote>.

		</para>
		<para>
		  If the music in the segment consists of two separate
		  parts (e.g. left and right hand piano parts) that
		  are not always completely on either side of a single
		  split point, you may wish to select the <quote>ranging
		  split-point</quote> option.  If this is selected,
		  &rosegarden; will attempt to track the two parts as
		  they move up and down, usually doing a slightly
		  better job of separating out notes that were
		  intended to lie in the two separate parts.

		</para>
		<para>
		  The resulting segments are both created on the same
		  track, with one overlapping the other.
		  
		</para>
	</listitem></varlistentry>

	<varlistentry>
<term>Split by Recording Source</term><listitem><para><menuchoice>
		  <guimenu lang="en">Segments</guimenu>
		  <guisubmenu>Split</guisubmenu>
		  <guimenuitem>Split by Recording Source...</guimenuitem>
		</menuchoice> splits the currently selected segments according to the
		&MIDI; channel and device their events were recorded from.</para><para>If
		you have recorded events from more than one &MIDI; channel or device into
		the a single segment, you can use this function to split them into
		separate segments afterwards.  Select the channel or device whose events
		you want to split out, and the segment will be split into two segments,
		one containing events from the selected channel or device and the other
		containing the remaining events.  The two segments are both created on the
		same track, with one overlapping the other.</para><para>See
		also <link linkend="recording">Recording</link>
		and <link linkend="track-recording-filters">Track recording filters</link>
		for more details on how to select the source &MIDI; channel or device for
		a recording.</para></listitem></varlistentry>


	<varlistentry>
	<term>Split at Time</term><listitem><para> <menuchoice>
		  <guimenu lang="en">Segments</guimenu>
		  <guisubmenu>Split</guisubmenu>
		  <guimenuitem>Split at Time...</guimenuitem>
		</menuchoice> simply splits the currently selected segments into two parts
		at the time you specify.</para></listitem></varlistentry>

	</variablelist>
	  
	</sect2>
    </sect1>

    <sect1 id="segment-view-tempo-timesig">
      <title>Tempo and Time Signature</title>

      <sect2 id="tempo">
	<title>Tempo in Rosegarden</title>
	<para>
	  &rosegarden; considers a composition to be accompanied by a
	  single stream of <quote>tempo changes</quote> and <quote>time signature
	  changes</quote>, which you can edit to adjust the tempo and the
	  number and structure of beats in each bar.</para>

	<para>A tempo change
	  can be to a constant fixed tempo, or it can be <quote>ramped</quote>
	  &mdash; changing smoothly to a different target tempo at a
	  given future time.  Each tempo change takes effect until the
	  following one is reached, so any two consecutive tempo changes
	  together describe a region that will be played at a constant
	  or smoothly ramping tempo.
	</para>

	<para>
	  Tempo and time signature are related, because &rosegarden;
	  displays tempo in beats per minute, and the duration of a
	  beat depends on the time signature.  &rosegarden; only
	  permits a single time signature to be in effect in any given
	  bar; you can't have different time signatures in
	  different tracks.  Each new time signature causes a new bar
	  to start, so you can place two time signatures closer
	  together than the natural bar duration in order to obtain a
	  partial bar.
  </para>
</sect2>

      <sect2 id="tempo-ruler">
	<title>Tempo rulers</title>
	<para>
	  The &rosegarden; <link linkend="segment-view">track editor</link>, <link
	  linkend="matrix-view">matrix editor</link> and <link
	  linkend="notation-view">notation editor</link> each contain
	  a tempo ruler, which can be optionally displayed at the top
	  of the editing area.</para>

      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-temporuler.png" format="PNG"/>
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s tempo ruler (and the bar and beat ruler beneath it)</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

	<para>The tempo ruler shows changes to tempo and time
	signature throughout the composition, and can be used for
	editing tempo.</para>

	<para>To increase or decrease the tempo within the range of a
	single tempo change, click and drag the horizontal line (or
	sloped line, for ramped tempos) representing that tempo
	upwards or downwards.</para>

	<para>To insert a new tempo change, right-click on the ruler
	for a menu and select <guimenuitem>Insert Tempo
	Change</guimenuitem>.  This will insert a new tempo change
	with the same tempo as the prior one, which you can then drag
	to increase or decrease.</para>

	<para>You can also click and drag the starting point of a
	tempo change left or right to move that tempo change to a
	different time, and you can click and drag the ending point of
	a tempo change up or down to make the tempo ramp gradually
	towards an ending tempo value.</para>

	<para>Double-click on the tempo ruler to open the <link linkend="tempo-timesig">tempo and
	time signature editor</link>.</para>

</sect2>

<sect2 id="tempo-timesig">
	<title>Tempo and time signature editor</title>
	
	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-tempotime-editor.png" format="PNG" />
	      </imageobject>
	      <textobject>
		<phrase>&rosegarden;'s tempo and time signature editor</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
	</para>
 
	<para>The tempo and time signature editor window lists all of the tempo and time
	signature changes in the composition.  You can edit an individual tempo or time
	signature change by double-clicking on it.</para>

      </sect2>

      <sect2 id="tempo-edit">
	<title>Changing Tempo</title>
	<para>
	You can edit an existing tempo change, or add a new one, by using
	the <link linkend="tempo-ruler">tempo ruler</link>, by double-clicking on the
	tempo display in the <link linkend="transport">Transport window</link>, by
	using <menuchoice>
		  <guimenu lang="en">Composition</guimenu>
		  <guimenuitem>Add Tempo Change...</guimenuitem>
		</menuchoice>, or by double-clicking on an existing tempo in
		the <link linkend="tempo-timesig">tempo and time signature editor</link>.
		Each of these will bring you to some variation of the tempo editing
		dialog:</para>
	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-tempodialog.png" format="PNG"/>
	</imageobject>
	  <textobject>
	    <phrase>&rosegarden;'s tempo dialog</phrase>
	  </textobject>
	</mediaobject>
	</screenshot>
	</para>
	<para>To set a new tempo, either dial it into the numeric tempo spinbox at the
	top, or else click repeatedly on the <guibutton>Tap</guibutton> button at approximately the speed you
	want and let &rosegarden; work out the tempo for you.
	  </para>
	<para>By default, a new tempo is <quote>fixed</quote>; that is, the tempo remains
	constant from the tempo change until the next tempo change is reached.
	Alternatively, you can tell &rosegarden; to make the tempo ramp smoothly to a
	particular value, or to the following tempo value, by the point at which the next
	tempo change is reached.  See also <link linkend="tempo">Tempo</link> for more
	details on tempo handling.</para>
      </sect2>
      
      <sect2 id="time-signature">
	<title>Time signature</title>
	<para>
	  To change the time signature, use <menuchoice>
		  <guimenu lang="en">Composition</guimenu>
		  <guimenuitem>Add Time Signature Change...</guimenuitem>
		</menuchoice> or double-click on the existing time signature in
		the <link linkend="transport">transport window</link>
		or <link linkend="tempo-timesig">tempo and time signature
		editor</link>.</para>
		
		<para>
		  <screenshot>
		    <mediaobject>
		      <imageobject>
			<imagedata fileref="rg-timesigdialog.png" format="PNG" />
		      </imageobject>
		      <textobject>
			<phrase>&rosegarden;'s time signature dialog</phrase>
		      </textobject>
		    </mediaobject>
		  </screenshot>
		</para>
     
      </sect2>
      <sect2 id="tempo-from-segment">
	<title>Setting tempo from an existing segment</title>
	<para>&rosegarden; provides two ways to set tempo from a segment that you have recorded or imported:</para>
	  <variablelist>
	    <varlistentry>
	    <term>Audio Segment Duration</term>
	      <listitem><para>Use <menuchoice>
		  <guimenu lang="en">Composition</guimenu> <guimenuitem>Set Tempo to Audio Segment
		  Duration</guimenuitem></menuchoice> when you have imported or recorded
		  an audio segment that you know is exactly one bar long, and you want to
		  ensure that the tempo for surrounding note events is set
		  appropriately.</para><para>This function uses the duration of the
		  selected segment (which must be an audio segment of a single bar) to
		  work out a single matching tempo setting.  It does not analyse the
		  content of the audio segment in any way &ndash; it simply looks at how long it
		  is.</para>
		</listitem>
	    </varlistentry>
	  <varlistentry>
	    <term>Beat Segment</term>
	    <listitem><para><menuchoice>
		  <guimenu lang="en">Composition</guimenu> <guimenuitem>Set Tempos from Beat
		  Segment</guimenuitem></menuchoice> analyses a segment of &MIDI; events
		  that are assumed to be at beat positions for the current time signature,
		  and sets a series of tempo changes according to the time elapsed between
		  consecutive beats.</para>
	      <para>You can use this to set an overall tempo map for a composition by
	      <quote>tapping</quote> tempo in a recorded segment.  For example, you can record from a
	      &MIDI; keyboard and tap a series of single notes at approximate beat
	      positions, speeding up and slowing down gradually; then select the recorded
	      segment and use this function to set a tempo map that speeds up and slows
	      down to match your tapping.</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</sect2>
		
    </sect1>

    <sect1 id="markers-ranges-loops">
      <title>Markers, ranges, and loops</title>
      <sect2 id="markers">
	<title>Markers</title>

	<para>Markers are moments in time that have labels.  You can
	create any number of markers in your &rosegarden; composition,
	to define particular points that you wish to remember the
	locations of.  Marker positions and labels will be saved in
	your &rosegarden; file.</para>

	<para>Markers are shown in the main ruler at the top of each
	of &rosegarden;'s editor windows.</para>

      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-markerloop.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>A marker and a loop range</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>
        <para>To add
	a new marker, double-click on the marker area (top half) of
	the ruler to open the marker editor.  Make sure &rosegarden;'s
	playback pointer (see <link linkend="transport">The
	Transport</link>) is in the location you want to add the
	marker, and then click the <guibutton>Add</guibutton> button to add a new marker
	at the playback position.  You can then double-click on the
	marker's entry in the marker editor window to edit its name or
	adjust its location.</para>

	<para>Click on the text of a marker in the marker ruler to
	move the playback pointer directly to that marker.</para>

	<para>You can set a <link linkend="ranges-loops">loop range</link>
	between two marker positions, by clicking in the area between
	the markers in the marker ruler with the <keycap>Shift</keycap> key
	pressed.</para>
      </sect2>

      <sect2 id="quick_marker">
    <title>Quick Marker</title>

    <para>The quick marker is a special moment in time that can be defined on the fly with
    a single key (by default <keycombo><keycap>Ctrl</keycap><keycap>1</keycap></keycombo>)
    from the main window (track editor). Once defined it appears as a red line in the loop
    ruler (it does not appear among other markers, since it does not have a label).  At
    any time when in the track editor you can jump to the quick marker position with a
    single key (&rosegarden;by default simply <keycap>1</keycap>).
    <screenshot>
      <mediaobject>
        <imageobject>
          <imagedata fileref="rg-quickmarker.png" format="PNG" />
      </imageobject>
    <textobject>
      <phrase>Quick Marker at the start of the third bar</phrase>
    </textobject>
      </mediaobject>
      </screenshot>
    </para>
    
    <para>A typical use of the quick marker is when you want to record the same bars
    on different instruments: after setting the quick marker at the first bar of 
    the working interval, it is easy to jump to the quick marker each time you need
    to record a new part.</para>
    
    <para>Note that the quick marker position is not saved in your &rosegarden; file.</para>
      </sect2>
      
      <sect2 id="ranges-loops">
	<title>Ranges and loops</title>
	<para>
	  &rosegarden; allows you to highlight a period of time in the
	  main ruler, which will be used as a <quote>range</quote> for editing
	  operations and which will be looped during playback.
	</para>

	<para>To set the current range, click and drag with the <keycap>Shift</keycap>
	key pressed on the subdivided area of the main ruler at the
	top of the editing window.  The range that you drag will be
	highlighted in white as you drag it, and will snap to the
	nearest beat boundary at both ends.  Any subsequent playback
	will then be constrained to looping this range.
	</para>
	
	<para>You can also set a range between two <link
	linkend="markers">markers</link> by shift-clicking between the
	marker positions in the marker ruler, or set a range using the
	<link linkend="transport-overview">transport</link> window.
	The transport contains small buttons to set the start and end
	of the current range to the current playback pointer position.
	Either of these methods allows you to set more precise end
	points for your range than you can with click-drag.</para>

	<para>To clear a range and restore normal playback, click on
	the subdivided area of the main ruler with the <keycap>Shift</keycap> key
	pressed, or toggle the loop button on the transport.</para>

	<para>Note that playback looping when a range is defined is
	not the same thing as <link
	linkend="segment-view-segmentparameterbox">repeating
	segment</link> available in the segment parameters
	(which seamlessly repeats individual segments rather than 
	causing the transport to jump).</para>

	<sect3 id="range-operations">
	  <title>Range editing</title>

	  <para>You can carry out edits
	    on the current range in order to cut and paste sections
	    of music that include the relevant parts of all
	    segments, tempos and time signatures within the range.
	  </para>

	  <para>Set a range and then use <menuchoice> <guimenu
	  lang="en">Edit</guimenu> <guimenuitem>Cut
	  Range</guimenuitem> </menuchoice> or
	  <menuchoice><guimenuitem>Copy
	  Range</guimenuitem></menuchoice> to cut or
	  copy the range to the clipboard.</para>

	  <para>You can paste a range using <menuchoice>
	  <guimenu lang="en">Edit</guimenu>
	  <guimenuitem>Paste</guimenuitem></menuchoice>
	  to overlay its contents onto the rest of the composition at
	  the current playback pointer position, or you can use
	  <menuchoice> <guimenu lang="en">Edit</guimenu>
	  <guimenuitem>Paste Range</guimenuitem></menuchoice> to
	  insert the range from the clipboard into the composition at
	  the current playback pointer position.</para>

	</sect3>

	<sect3 id="range-insert">
	  <title>Inserting a range</title>

          <para>You can also insert an empty range at the current
          playback position using <menuchoice> <guimenu
          lang="en">Edit</guimenu> <guimenuitem>Insert
          Range</guimenuitem> </menuchoice>.  You can
          specify how much space you want to insert, and then all of
          the segment content, tempos, and time signatures following
          the playback position will be pushed along in time by that
          duration to leave an empty space.
          </para>
        </sect3>

      </sect2>
    </sect1>

    <sect1 id="triggered-segments">
      <title>Triggered segments</title>

	<para>A triggered segment is a segment that does not appear on
	the main canvas and is not positioned at a particular time or
	on any particular instrument, but is instead triggered during
	playback by one or more notes in other segments.  These
	triggering notes serve as a shorthand for the full triggered
	segment, in the same way as written ornaments such as trills
	in notation ser&rosegarden;ve as shorthand for the notes that make up the
	trill.  One use of triggered segments is in fact for
	<link linkend="nv-ornaments">playing ornaments</link>.</para>

    <para>&rosegarden; can optionally stretch or squash each triggered
    segment to match the duration of the note that triggers it, and
    can raise or lower the pitch and velocity of the segment likewise
    to match.  A triggered segment is played on the same instrument as
    its triggering event.</para>

      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-triggersegment.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s Trigger Segment dialog, as reached from the matrix editor</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>
 
    <para>You manage triggered segments through a window available
    via the <menuchoice> <guimenu
    lang="en">Segments</guimenu><guimenuitem>Manage Triggered
    Segments</guimenuitem></menuchoice> option in the main segment
    canvas.  To make a new triggered segment, copy a segment or part
    of a segment to &rosegarden;'s clipboard, then use the <menuchoice>
    <guimenu lang="en">Edit</guimenu> <guimenuitem>Paste as New
    Triggered Segment</guimenuitem></menuchoice> menu option in this
    manager window.  You can then set a particular note to play this
    triggered segment instead of the original note, using 
    <menuchoice> <guimenu lang="en">Adjust</guimenu>
    <guimenuitem>Trigger Segment...</guimenuitem></menuchoice>
    in the matrix or <menuchoice> <guimenu
    lang="en">Note</guimenu><guisubmenu
    lang="en">Ornaments</guisubmenu> <guimenuitem>Trigger
    Ornament...</guimenuitem></menuchoice> in the notation
    editor.</para>

    <para>When triggering a segment, you will be offered a choice for
    how it is played in terms of timing, because the triggered segment
    (or ornament) may have a different underlying duration from your
    triggering note.  The options for playback timing are:</para>

    <variablelist>

      <varlistentry>
	<term>As stored</term>
	<listitem>
	  <para>Play the triggered segment with a start time
	  coinciding with that of the note, and at the original speed.
	  Keep playing the triggered segment until it ends, even if it
	  is longer than the triggering note.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>Truncate if longer than note</term>
	<listitem>
	  <para>Play the triggered segment with a start time
	  coinciding with that of the note, and at the original speed.
	  If the triggered segment is longer than the triggering note,
	  truncate it so that it ends at the end time of the note.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>End at same time as note</term>
	<listitem>
	  <para>Play the triggered segment with its end time
	  coinciding with the end of the note, and at the original
	  speed.  This means the start of the triggered segment may be
	  chopped off if it is longer than the triggering note.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>Stretch or squash segment to note duration</term>
	<listitem>
	  <para>Speed up or slow down the triggered segment so that it
	  fits exactly into the duration of the triggering note.  This
	  is the default.
	  </para>
	</listitem>
      </varlistentry>
 
    </variablelist>
 
    <para>A triggered segment may contain silence at the start or end,
    and this will be <quote>played</quote> (and stretched or squashed if
    appropriate) as well as the notes and other events in the segment.</para>
 
    <para>It is not currently possible to make a triggered segment
    start playing before the start time of its triggering note. You
    also can't trigger a segment from within another triggered
    segment, and you can't trigger audio segments.</para>
 
    <para>To edit the contents of a triggered segment, either
    double-click on it in the manage triggered segments window, or
    double-click on any note that triggers it.  Apart from editing the
    notes in the segment, you can also change the duration of the
    segment itself from the <guimenuitem>Edit</guimenuitem> menu of the resulting event list
    view.  Remember that editing a triggered segment will affect all
    the notes that trigger it, not just the one that you
    double-clicked to get to the editing window.</para>

    </sect1>
  </chapter>

  <chapter id="transport">
    <title>トランスポート</title>
    <para>
      コンポジションを演奏するとき、
      &rosegarden; はそれが
      クロスしているセグメントの内容を演奏するときに左から右へとトラック
      上でポインタを横切る。画面上でのポインタの位置は、Transportと
	呼ばれるダイアログによってtrackされ制御される。
    </para>
    
    <sect1 id="transport-overview"><title>概要</title>
    <para>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="rg-transport.png" format="PNG" />
    </imageobject>
      <textobject>
	<phrase>&rosegarden;'s Transport window</phrase>
      </textobject>
    </mediaobject>
    </screenshot>
    </para>

    <para>
      トランスポートが不可視ならば、<menuchoice> <guimenu lang="en">設定</guimenu> 
	<guimenuitem>トランスポートの表示</guimenuitem> </menuchoice>を使って有効にすることができる。
    </para>
    
    <para>トランスポートは規定値では秒単位で再生ポインタから届く時間を表示する。</para>

    <para>You can switch it to show musical time (bar and beat counts), musical time with
    a flashing visual metronome, or audio sample frame times, using the topmost of the
    small buttons <inlinemediaobject><imageobject><imagedata
    fileref="rg-button-bar-time.png" format="PNG" /></imageobject></inlinemediaobject> on
    the left of the transport window.</para>

    <para>The button immediately below that <inlinemediaobject><imageobject><imagedata
    fileref="rg-button-from-end.png" format="PNG" /></imageobject></inlinemediaobject>
    toggles the display so as to show time remaining to the end of the composition instead
    of from the start.</para>

    <para>
    transport上のメインコントロールはシーケンサの演奏を起動、一時停止、
    ポインタの位置の早送り、巻き戻し、停止または楽曲の最初/最後への
    移動を行なう。
    </para>

    <para>
      The transport display also shows the tempo and time signature in
      effect at the current playback position.  Double-click on either
      of these to insert a new tempo or time signature change.  See
      <link linkend="segment-view-tempo-timesig">Tempo and Time
      Signature</link> for more ways to adjust these elsewhere in &rosegarden;.
    </para>

    <para>
      You can also double-click anywhere on the main time display on
      the transport window, to enter a precise time that you want the
      playback position to be set to.
    </para>

    <para>transport上のメインコントロールはシーケンサの演奏を起動、一時停止、
    ポインタの位置の早送り、巻き戻し、停止または楽曲の最初/最後への
    移動を行なう。Also on this extra portion there are buttons for recording, setting the loop
    start and end (see <link linkend="ranges-loops">Ranges and loops</link>), soloing
    individual tracks, turning on or off the metronome (see <link
    linkend="studio-metronome">Metronomes</link>), and silencing your &MIDI; devices (the
    panic button <inlinemediaobject><imageobject><imagedata fileref="rg-transport-panic.png"
    format="PNG" /></imageobject></inlinemediaobject>).  </para>

    </sect1>
    <sect1 id="recording">
      <title>録音</title>
      <para>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="rg-trackbuttons.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>Track buttons in various states of recording readiness</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>
      <para>
	To record a new segment into a track, first make sure the
	right tracks are armed for recording by selecting the red
	(for audio tracks) or yellow (for &MIDI; tracks) LED-style
	buttons on the track labels, and then use the <link
	    linkend="transport-overview">transport's</link> record
	control.  This has the effect of both starting the transport,
	thus playing the existing composition, and recording into the
	appropriate track, or tracks.
      </para>
      <para>
	You can record any number of &MIDI; and audio tracks at once so long
	as your computer is powerful enough, and you have enough disk space.
	Be careful not to accidentally leave tracks selected when you have
	finished using them and are trying to record somewhere else.
      </para>
      <para>
	Alternatively you can use punch-in record to separate the acts
	of starting the transport and entering record mode.  Punch-in
	record is toggled with the <keycap>Space</keycap> bar.  You can press
	<keycap>Space</keycap>
	while playing a composition to switch instantly between
	playback and recording without stopping the transport, or you
	can use <keycap>Space</keycap> to arm for recording when the transport is
	stopped, so that a subsequent <quote>play</quote> will in fact record as
	well.  (The latter is handy when synchronising to an <link
	linkend="transport-external">external transport</link>.)
      </para>
      <para>
	If you record to &MIDI; tracks, you will record from the 
	&MIDI; devices that are selected for recording in the
	<link linkend="studio-device-editor">MIDI device
        manager</link>, as filtered through the <link
        linkend="track-recording-filters">track level recording filter</link>
        and the global <link linkend="studio-midi-filters">MIDI filters</link>.
      </para>
      <para>
	If you record to audio tracks, your recording to each track
	will be from the input currently selected for that track's
	instrument in the <link
	linkend="segment-view-instrumentparameterbox">instrument
	parameter box</link>.  This will either be an external audio
	input or an audio submaster or master (for performing
	mixdowns).  If it's an external input, it will by default
	record from your soundcard's first available physical record
	in.  You may wish to use a JACK connection tool to
	connect some other JACK audio application to the input
	instead.  See also <link
	linkend="studio-audio-routing">Audio Routing</link>.
      </para>
    </sect1>
    <sect1 id="transport-external">
      <title>Synchronising to external transports</title>
      <sect2 id="transport-jack">
	<title>JACK Transport</title>
	<para>
	  &rosegarden; supports the JACK transport mechanism for
	  synchronising its transport with other JACK applications on
	  the same computer.  To activate it, go to
	  <menuchoice>
	    <guimenu lang="en">Settings</guimenu>
	    <guimenuitem>Configure Rosegarden...</guimenuitem>
	  </menuchoice>
	  and check the <guimenuitem>Use JACK transport</guimenuitem> box.</para>
	
	<para>When the JACK transport is in use, all of the applications
	  that are subscribed to it share a common transport control, and
	  you can start, stop, and move the transport from any one of
	  them.</para>

	<para>Many Linux audio applications that use the JACK audio
	server also support JACK transport: consult their
	documentation for details of whether and how.</para>
      </sect2>
      <sect2 id="transport-mtc">
	<title>MIDI Time Code</title>
	<para>
	  &rosegarden; supports &MIDI; Time Code (MTC) synchronisation in
	  master and slave modes.  This is particularly useful for
	  synchronising the &rosegarden; transport with a hardware
	  MTC-capable device, or with software running on other
	  computers connected via &MIDI;.
	</para>
	<para>To make &rosegarden; the MTC Master, so that it will
	  control any MTC slave device or application connected to it,
	  go to
	  <menuchoice>
	    <guimenu lang="en">Settings</guimenu>
	    <guimenuitem>Configure Rosegarden...</guimenuitem>
	  </menuchoice>
	  and in the &MIDI; page's &MIDI; Sync tab, select <guimenuitem>MTC
	  Master</guimenuitem>from the &MIDI; <guimenuitem>Time Code</guimenuitem> menu.  To make &rosegarden; an
	  MTC Slave so that &rosegarden;'s transport will automatically
	  be synchronised with incoming MTC events, select <guimenuitem>MTC
	  Slave</guimenuitem>.
	</para>
      </sect2>
    </sect1>
    
    <sect1 id="infrared-remote-controls">
    	<title>Infrared Remote Controls</title>
		<para>
			&rosegarden; supports infrared remote controls for 
			almost all transport functions. In order to use it, 
			you need either the internal LIRC client, which is 
			an optional feature at &rosegarden;'s compile time, 
			or the KDE IRKick application (KDE LIRC daemon) 
			that you can find in your Linux distribution's 
			repositories. In both cases, you need to install 
			and configure the LIRC server daemon. The exact 
			details depend on your remote control and receiver, 
			and you should refer to the <ulink url="http://www.lirc.org/html">
			LIRC web site</ulink> for more information.
		</para>
			
		<para>
			You can find more details online about the internal
			LIRC client configuration file and IRKick basics, at  
			<ulink url="http://www.rosegardenmusic.com/resources/documents/infrared-remotes.shtml">
			&rosegarden;'s web site</ulink>.
		</para> 
    </sect1>
  </chapter>

  <chapter id="studio">
    <title>スタジオ</title>
    
    <sect1 id="studio-introduction">
	    <title>デバイス、インスツルメントと接続</title>
	    
	    <para>&rosegarden;は"スタジオ"という単語をコンピュータに繋がれる
		    サウンドシステムについて知っているモのすべてを参照するために
		    使う。これは、&MIDI; とオーディオ用のハードウェアとその他の
		    サウンドソフトウェアを含んでもよく、さらに、接続状態の情報と
		    構成(configuration)と&MIDI; パッチやその他を含んでもよい。
		    スタジオは&rosegarden;で作成する全てのコンポジションのために
		    組み込まれている。.</para>
	    
	    <para>用語の3つの部分はここで重要である:
		    
		    <variablelist>

			    <varlistentry>
				    <term>デバイス</term>
				    <listitem>
					    <para>1つの <quote>デバイス</quote>は&rosegarden;
						の範囲において関係するものは、単に音を生成する能力が
						ある何かである。これは&MIDI;やオーディオデバイスでもよい。
						 &MIDI;デバイスは物理的な&MIDI;ポートに直接対応する必要
						はない。それらは参照することができ、特定の手段で動作する
						ことを期待する、名前を持つ何らかのものである。&MIDI;パッチ
						マップのような構成情報は、デバイスに割り当てることができる。
					    </para>
				    </listitem>
			    </varlistentry>
			    
			    <varlistentry>
				    <term>インスツルメント</term>
				    <listitem>
					<para>おのおののデバイスはいくつかの
					<quote>インスツルメント</quote>を持ち、それらおのおのは
					特定の音を作るために仮定される。それらは音を演奏するために
					選択されたトラックに割り当てることができるものである。既定値で
					はデバイスは起動時に生成される16のインスツルメントを持つ:もし
					も、デバイスが&MIDI;デバイスであれば、16の&MIDI;チャネルのうち
					の1つに初期化される。インスツルメントはたとえば、プログラムの
					設定、リバーブ(reverb)、ボイスなどのような特定のボイスのすべて
					のプロパティである。
				    </para>
				    </listitem>
			    </varlistentry>
			    
			    <varlistentry>
				    <term>コネクション</term>
				    <listitem>
					    <para>&MIDI;デバイスが単に名前で、構成情報の集合の間は
						 <quote>コネクション</quote>はどのMIDIポートに物理的
						 に割り当てられているかを指定する。これは、
						 <link linkend="studio-device-editor">&MIDI;デバイス
							 マネージャ</link>で構成することができる。(オーディオとシンセ
						 サイザープラグインは同じ方法ではコネクションを持たない。)
					    </para>
				    </listitem>
			    </varlistentry>
		    </variablelist>
	    </para>
	    
	    <para>
		    例をあげると、セットアップが、2つの物理&MIDI;ポートを持つPC
		    によって成り立っていて、その1つは外部のシンセサイザー
		    が接続されていることを考えてみよう。ここでは1台のシンセサイザーに
		    対応する&MIDI;デバイスを持つために、通常&rosegarden;を構成する。
		    次に、このデバイスについて、名前を修正し、マップをパッチする
		    ように構成することができ、次にサウンドカードの関連する&MIDI;
		    ポートにそれを結合するために接続を指定する。それぞれの16個の
		    デバイス上の既定値の楽器は適切なプログラムとともに構成でき、
		    それらをトラックに割り当てられる。</para>
	    
	    <para>
		    実際の所、&rosegarden;は既定値で、起動時に有効な接続をおのおのの
		    デバイスに対して作成するだろう。そのため、上記の例では、
		    2つの&MIDI;デバイスは1つのみが必要だったとしても既定値で2つの
		    デバイスが作成されるだろう。一般的に、最初のものに対して
		    名前を変え、パッチマップを適用し、2つめのものに対しては、
		    削除するか未使用にする。コンピュータ上の&MIDI;ポートに実際に
		    どのシンセサイザーが接続されているかを&rosegarden;が知るすべは
		    ないことを記憶しておくこと。この理由により、起動時に作成され
		    るデバイスは、既定値のセットになる予定であり、構成するデバイスが
		    本当に使うものに一致しているかどうかはあなた次第である。
	    </para>
	    
	    <para>いったん設定されると、スタジオセットアップはセーブする全ての&rosegarden;形式の
		ファイルに格納される。.</para>
	    
    </sect1>

    <sect1 id="studio-device-editor">
      <title>&MIDI; デバイスの管理</title>

      <para>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="rg-devicemanager.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>The &MIDI; デバイスマネージャ</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

      <para>
      &MIDI;デバイスマネージャダイアログは現在有効な&MIDI;デバイスと
      どこに繋がっているかを表示する。このダイアログに到達する
      ためには、<menuchoice><guimenu lang="en">Studio</guimenu>
	  <guimenuitem>MIDIデバイスの管理</guimenuitem>
	</menuchoice>を使う。
      </para>

      <para>
	<link linkend="studio-introduction">デバイス、インスツルメントとコネクション</link>
	セクションで説明されているように、規定値では、 &rosegarden;
	は起動時に、もっともらしいデバイスのセットを提供しようとし、
	それらのデバイスに対して理にかなったコネクションをしようとする。
	しかし、既定値の構成では、通常は最適ではないかもしれないので、
	このダイアログはデバイスの名前を変更し、それらの接続を変更
        し、再生/録音方向の接続を修正する。
      </para>
      
      <para>
      各々のここでリストされた再生デバイスは、通信(talk to)するため
      の&MIDI;トラックのためのターゲットを提供する。もしも、新しい
      再生デバイスを追加するならば、トラックに割り当てることができる
      このデバイス上の16の新しいインスツルメントを持つことができるだろう。
      もしも、そのデバイスに対するコネクションを割り当てるならば、
      トラックはその接続に割り当てられた任意の&MIDI;シンセサイザー
      の適切なチャネル(インスツルメントによって依存する)で再生するために
      割り当てられる。
      </para>

      <para>ここでリストされた録音デバイスは、&MIDI;を録音することが
          可能なソースを意味する。このダイアログ中で表示されている
	  ように、おのおのの行上でチェックボックスを使うことで、それら1つ以上の
	  ものをカレントにすることができる(そのため、&rosegarden;は
	  録音時にそれらを聞くことができる)。</para>

    </sect1>

    <sect1 id="studio-bank-editor">
	    <title>MIDIデバイスのバンクとプログラムの管理</title>

      <para>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="rg-bankeditor.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&MIDI; バンクとプログラムエディタ</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

      <para>
      おのおのの&MIDI;デバイスは複数のインスツルメントを含み、それらの
      インスツルメントをトラックに割り当てることができることを憶えておくこと。
      &MIDI;用語中では、おのおののインスツルメントは&MIDI;シンセサイザー上の
      1つのチャネルに対応する。使用する各々のインスツルメントのシンセサイザー
      上の有効なボイス(サウンド)のどれかを選択することができるが、
      この理由により、すべての有効なボイスの名前を&rosegarden;が
      知っているようにする必要がある。
      </para>

      <para>
      このダイアログはプログラムのバンク(ボイスの名前)を&MIDI;デバイス
      に接続することを可能にし、それゆえ、
      <link linkend="segment-view-instrumentparameterbox">
	インスツルメントパラメータボックス</link>中のそれらのボイスの1つを
	使うために、デバイス上の各々のインスツルメントはセットされる。
      </para>

      <para>
      デバイスのプログラム名をセットアップするための通常の方法は、
      単に提供されるデバイスファイル(".rgd")の1つからそれらを
      インポートすることである。これを行なうために、ダイアログの
      左のリスト中のデバイスを選択し、次にリストの下の<guibutton>インポート</guibutton>
      ボタンをクリックし、シンセサイザーに対応する.rgdファイルを選択する。
      </para>

      <para>
      もしも、シンセサイザー用に何らの.rgdファイルが有効になっていない
      のであれば、新しいバンクを作るためにこのダイアログを使うことが
      できる。これを行なうために、シンセサイザーの&MIDI;実装チャート中の
      プログラムマップを見つけ、すべての名前を手入力で入力する必要が
      ある。次にそれを他の&rosegarden;ユーザのために.rgdファイルに
      エクスポートする。もしもそれを共有したいのであれば、
      rosegarden-userメーリングリストにコンタクトしてほしい(これは
      どのようにして、&rosegarden;と共に存在するすべての.rgdファイルが
      含まれているかの理由である)。
      </para>
      

      <sect2 id="studio-keymappings">
	<title>Percussion Key Mappings</title>

	<para>
	  Many &MIDI; synthesizers have at least one percussion program,
	  in which each <quote>pitch</quote> plays a different type of sound.
	  &rosegarden; contains a dedicated percussion matrix editor to
	  view and edit notes against a scale consisting of the
	  correct names for the pitches, instead of against the
	  conventional piano keyboard pitch scale.
	</para>

	<para>
	  The key mappings available for a particular &MIDI; device are
	  also defined in the &rosegarden; device (".rgd") file.  Each
	  &MIDI; program that is defined as a percussion program can
	  have a key mapping associated with it; if there is one, then
	  it will be used by default in any track that is assigned to
	  this program.  Like program and bank definitions, key
	  mappings can be imported from and exported to .rgd files.
	</para>
      </sect2>

      <sect2 id="studio-soundfonts">
	<title>サウンドフォント</title>

	<para>
	もしも、ソフトウェアシンセサイザーかSountFont(.sf2)ファイルを
	使うサウンドカードを使っているならば、このダイアログ中に
	.sf2ファイルから正しいプログラム名を単純に直接ロードすることが
	できる。 通常の<guimenuitem>インポート</guimenuitem>と同じように
	質問されたならば、rgdファイルの代わりに使う.sf2ファイルを選択する。
	</para>

	<para>Note that the studio only manages information about
	  existing &MIDI; devices for &rosegarden;, it does not actually
	  handle tasks such as loading a SoundFont to your soundcard in
	  the first place.  If you want to make sure a SoundFont is
	  loaded to your soundcard when &rosegarden; starts up, you should
	  use the special <quote>Load SoundFont to SoundBlaster card at
	  startup</quote> option in the sequencer configuration in
	<menuchoice>
	  <guimenu lang="en">Settings</guimenu>
	  <guimenuitem>Configure Rosegarden...</guimenuitem>
	</menuchoice>.
	</para>
      </sect2>

      <sect2 id="studio-variations">
	<title>Variations</title>

	<para>
	いくつかの&MIDI;デバイス(たとえばローランドからのもの)は、
	<quote>variations</quote>として知られているスキームを使うプログラム名
         を体系化している。それらのデバイスのために、一般的には、
	 &mdash;ピアノのような&mdash;基本的なプログラム名を最初に選択する
	 ことによってプログラムを選択したいだろう。そして、次に、&mdash;
	 電子ピアノ&mdash;のような、そのプログラム上での1まとまりのvariation
	 を選択する。これは、一般的な&MIDI;ベースのシンセサイザーと対象的であり、
	 それはバンク中にそれらのプログラムを組織化し、バンクを最初に選択することを
         期待し、次にそのバンクからプログラムを選択する。
	</para>

	<para>
	&rosegarden; はvariationを使うデバイスをサポートできるが、
	バンクフォーマット中にプログラム名を入力しなければならない。
	内部的に、variationを使うデバイスはvariationsとの間で
	選択するために、&MIDI;バンク選択コントローラを使う。
	variationを選択するために、デバイスがLSBかMSBのどちらかの
	バンクセレクトを使うかを、シンセサイザーのドキュメントから
	見つけ出す必要があり、どのバンク番号がどのvariationに
	対応しているかを見つけ出す必要がある。次に、バンクを通常として、
	入力し、バンクダイアログ上の、
	<quote>MSB/LSB上のVariationリストの表示</quote>オプションを使い、
	&rosegarden;にインスツルメントパラメータボックス内でそのデバイスが表示される
	ときにバンクの代わりにvariationが表示するように伝える。
	</para>
      </sect2>

    <sect2 id="studio-midi-import">
	    <title>&MIDI; インポート上のスタジオのマッピング</title>
      <para>
	
      コンポジションに &MIDI;ファイルをインポートするとき、&rosegarden; は
      &rosegarden; のインスツルメント上に &MIDI; プログラムをどのようにマップするかを
      決めるために、存在するスタジオのセットアップを使用する。
      目的は、スタジオ中に実際に存在するマップされた1つのインスツルメントを、
      すべての &MIDI; プログラムが得ることを確実にすることであり、
      (そして、そういう理由で、実際にコンピュータに割り当てられる)
      そのため、すべての &MIDI;トラックは聞くことができる。

      </para><para>

      インポートされたファイル中に見付かった、&MIDI; プログラム
      チェンジとバンクセレクトイベントはインポートのときに使用されるが、
      スタジオ中の1まとまりのインスツルメントから各々の&MIDI;トラックのための
      適切なインスツルメントを見つけるのを手助けする手段としてのみ使われる。そのため、
      例をあげると、もしもスタジオが現在<acronym>GM</acronym>楽器(音源)
      のみ含んでいるようにセットアップされていた場合で、
      <acronym>GS</acronym> プログラムチェンジをその上に含む&MIDI;ファイル
      をインポートした場合、&rosegarden;は<acronym>GS</acronym>バンク
      を<acronym>GM</acronym>にリマップする。なぜならば、ファイルを
      インポートするときに知っているすべてだからである。オリジナルの
      <acronym>GS</acronym> プログラムナンバーを憶えているわけではない。

      </para><para>

      このことは、&MIDI; ファイルをインポートする前に、
      実際に持っているデバイス向けに正しくスタジオを
      構成することを確実にしなければならない、ということを意味する。
      それ以外では、&MIDI;ファイル中のプログラムデータは失われるだ
      ろう。

      </para>
    </sect2>
    </sect1>

    <sect1 id="studio-audio-routing">
      <title>Audio Routing</title>
      <para>
	Any &rosegarden; track assigned to an audio or synth plugin
	instrument becomes part of &rosegarden;'s audio routing
	architecture.  There are 16 audio instruments and 16 synth
	plugin instruments, and each of these has a set of adjustable
	parameters including fader level, pan, effects and so on.
	These are generally configurable in the <link
	linkend="segment-view-instrumentparameterbox">Instrument
	Parameter Box</link> or <link
	linkend="studio-audio-mixer">audio mixer</link>.  Each audio
	instrument also has an input connection, and both audio and
	synth plugin instruments have an output connection.
      </para>
      
      <para>An instrument's input connection defines where &rosegarden;
      will read audio data from when recording to this instrument.
      The most usual setting would be to one of &rosegarden;'s external
      audio inputs, the number of which is configurable in the <link
      linkend="studio-audio-mixer">audio mixer</link>.  These
      correspond to JACK audio ports exposed by &rosegarden;, to which
      you can connect outputs from any other JACK audio application or
      soundcard capture ports using an external JACK router
      application such as <ulink
      url="http://qjackctl.sf.net/">QJackCtl</ulink>.  You can also
      set an instrument's audio input to the output of one of
      &rosegarden;'s built-in audio submasters or master output for
      mixdowns.
      </para>
      <para>An instrument's output connection defines where the audio
      goes when played.  Instruments default to sending their audio to
      &rosegarden;'s master output, which is another (stereo pair of)
      external JACK port(s) that can then be connected up using the
      same external JACK router.  However, &rosegarden; also supports up
      to eight internal submaster busses, to which you can send
      instrument outputs instead so as to group instruments into
      related categories.  You can control the number and routing of
      these in the <link linkend="studio-audio-mixer">audio
      mixer</link>.
      </para>
      <para>
	&rosegarden; currently supports effects using a set of pre-fader
	insert effects slots for each audio instrument.  You cannot
	yet assign effects to the submaster busses, and &rosegarden;
	does not yet support send effects, although you can obtain
	similar results using an external JACK effects and mixing
	architecture.
      </para>
      <para>Some further details of audio routing configuration,
      mixing, and effects are discussed in the <link
      linkend="studio-audio-mixer">audio mixer</link>, <link
      linkend="segment-view-instrumentparameterbox">instrument
      parameter box</link> and <link
      linkend="studio-plugins">audio plugins</link> sections.</para>
    </sect1>

    <sect1 id="studio-midi-routing">
      <title>&MIDI; Routing</title>
      <para>&rosegarden; is able to instantly send incoming &MIDI; events to 
      some output device and &MIDI; channel. This feature is known as &MIDI; Thru.</para>
      <para>&MIDI; Thru is enabled by default in &rosegarden;. You may want 
      to globally disable it using the menu option <menuchoice>
      <guimenu lang="en">Studio</guimenu>
      <guimenuitem>MIDI Thru Routing</guimenuitem></menuchoice>, if you prefer 
      to use an external &MIDI; routing system. There is also a global filter by 
      &MIDI; event type, which you may use to ignore some event types and let other
      types to be routed. It is explained in the section <link linkend="studio-midi-filters">
      &MIDI; filters</link>.</para>
      <para>&MIDI; Thru routing works quite differently when &rosegarden; is playing 
      or stopped than when it is recording.</para>
      <itemizedlist>
        <listitem><para>When &rosegarden; is playing or in stopped state, the &MIDI; 
        thru function routes events to the selected track instrument. The selected 
        track has its track name highlighted.</para></listitem>
        <listitem><para>When &rosegarden; is recording, the &MIDI; events are routed 
        to the armed track instruments, based on the <link linkend="track-recording-filters">
        recording filters</link>. It doesn't
        matter which track is selected. Only one instrument is selected for each event,
        corresponding to the first track with a matching record filter.</para>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1 id="studio-audio-mixer">
      <title>The Audio Mixer</title>
      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-audiomixer.png" format="PNG" />
            </imageobject>
	    <textobject>
	      <phrase>&rosegarden;'s Audio Mixer</phrase>
	    </textobject>
          </mediaobject>
        </screenshot>
      </para>

      <para>
	&rosegarden;'s audio mixer window, reached through 
	<menuchoice>
	  <guimenu lang="en">Studio</guimenu> <guimenuitem>Audio
	  Mixer</guimenuitem></menuchoice>, resembles a hardware audio
	  mixer and provides a way to see and change the state of a
	  number of audio instruments at once.  It contains many of
	  the same controls as found in the audio and synth plugin
	  <link
	  linkend="segment-view-instrumentparameterbox">instrument
	  parameter boxes</link>, most importantly a playback level
	  meter and fader control for each audio and synth plugin
	  instrument, as well as routing controls, pan, mono/stereo
	  and effects plugin slots.
      </para>
      <para>
	The audio mixer window is also where you see and control the
	master audio output level (at the far right of the picture
	above), as well as the record level (to the left of the master
	fader) and submaster output levels.
      </para>
      <para>
	The audio mixer's <menuchoice> <guimenu
	lang="en">Settings</guimenu></menuchoice> menu is particularly
	relevant.  Apart from controlling what will be shown in the
	mixer window, this menu also contains the <link
	linkend="studio-audio-routing">audio routing</link> settings
	for the number of stereo audio record inputs available and the
	number of submasters.  These are studio settings whose values
	are saved with your &rosegarden; format file.</para>

      <para>Note that if you are not actually using any submasters
      (i.e. if there are no instruments configured to route their
      output to a submaster) you may see a small performance
      improvement if you set the number of submasters explicitly to
      <quote>None</quote>, rather than keeping unused ones in the configuration.
      </para>
    </sect1>

    <sect1 id="studio-midi-mixer">
      <title>The MIDI Mixer</title>
      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-midimixer.png" format="PNG" />
            </imageobject>
	    <textobject>
	      <phrase>&rosegarden;'s &MIDI; Mixer</phrase>
	    </textobject>
          </mediaobject>
        </screenshot>
      </para>
      <para>
	&rosegarden;'s &MIDI; mixer window, reached through 
	<menuchoice>
	  <guimenu lang="en">Studio</guimenu> <guimenuitem>&MIDI;
	  Mixer</guimenuitem></menuchoice>, provides a way to see and
	  edit the <link
	  linkend="segment-view-instrumentparameterbox-midi">instrument
	  parameter values</link> for a number of &MIDI; instruments at once.</para>
      
      <para>The window is organised using a tabbed pane.  Along the
	bottom, you will see one tab for each playback &MIDI; device in
	your studio configuration.  When you select a device tab, the
	rest of the window will update to show the controls for the 16
	instruments of that device.
      </para>

      <para>
	The controls shown for each instrument are those set up in the
	<!-- !!! link linkend="studio-device-controllers"  Manage MIDI
	 Devices -> select device -> Control Events...--> control
	parameter manager, as well as volume (corresponding to the
	&MIDI; volume control change, not to &MIDI; velocity or audio dB
	levels) and an approximate output level indicator.
      </para>
    </sect1>

    <sect1 id="studio-plugins">
      <title>Audio Plugins</title>
      <para>An audio plugin is a piece of software, separate from
      &rosegarden;, that &rosegarden; can load and use in order to perform
      a particular audio processing task.  These can be broadly
      divided into effects plugins and synth plugins.  Effects plugins
      take an audio input and manipulate it to produce a different
      audio output; synth plugins take &MIDI;-like events as input and
      turn them into audio output.  &rosegarden; uses the Linux standard
      LADSPA plugin API for effects and the DSSI plugin API for
      synths, permitting the use of large numbers of open-source
      plugins made available by many developers.
      </para>
      <para>The use of plugins has a cost in CPU time, as audio
      processing in real time usually takes a significant amount of
      work even on a modern CPU. It also has a potential cost in
      reliability: when &rosegarden; is running a plugin, if the plugin
      hangs or crashes, so does &rosegarden;.  Many plugins are very
      reliable, but it's inevitable that some will not be so well
      tested.
      </para>
      <sect2 id="studio-plugins-effects">
	<title>Effects plugins</title> <para>An effects plugin is
	something that you can use to modify an audio signal in a
	controllable way.  Examples include reverb, delay effects,
	dynamic compression and so on.
	</para>
	<para>Every audio or synth-plugin instrument in &rosegarden; has
	five associated effects slots.  By default these are empty,
	but you can load plugins into them in order to chain up to
	five effects onto the audio signal before it goes through
	fader level and pan processing.</para>

	<para>To load a plugin to a slot, click its button on the
	<link linkend="segment-view-instrumentparameterbox-audio">instrument
	parameter box</link>:
	</para>
	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-pluginbuttons.png" format="PNG" />
	      </imageobject>
	      <textobject>
	      <phrase>Plugin Slot Buttons</phrase>
	      </textobject>
	    </mediaobject>
          </screenshot>
        </para>
	<para>(These buttons are also optionally available in the <link
	linkend="studio-audio-mixer">audio mixer</link> window.)
	</para>
	<para>Clicking a plugin button will make the 
	the plugin dialog pop up.  This shows you
	the available categories of effects in the first menu; select
	one, and you can then choose your plugin in the second menu.
	</para>
      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-plugin-dialog.png" format="PNG" />
            </imageobject>
	    <textobject>
	      <phrase>A &rosegarden; Plugin Dialog</phrase>
	    </textobject>
          </mediaobject>
        </screenshot>
      </para>

	<para>Below the plugin selection menus, the dialog gives you a
	varying number of rotary controllers showing all the
	modifiable parameters for the plugin you have selected.  To
	change a value, just click a rotary and drag up and down or
	left and right.  (Up or right to raise the value, down or left
	to lower it.)  You can also roll the mouse wheel to change the
	value, or click with the middle mouse button to reset it to
	its initial default.</para>

	<para>It is also possible to copy one plugin with its current
	configuration into another slot, so as to use the same plugin
	settings with more than one instrument, or to base one plugin
	configuration on another.  Just click the <guibutton>Copy</guibutton> button when you
	have the plugin set up the way you want it, and then open
	another plugin slot's plugin dialog and click <guibutton>Paste</guibutton>.</para>

	<para>Finally, you can use the <guimenuitem>Bypass</guimenuitem> toggle to remove a
	plugin temporarily from processing while retaining its
	configuration.
	</para>
      </sect2>
      <sect2 id="studio-plugins-synths">
	<title>Synth plugins</title>
	<para>
	  Synth plugins can be used in place of hardware or standalone
	  soft-synth &MIDI; devices, to generate sounds from your note
	  event segments.</para>

	<para>Using a synth plugin gives you somewhat better control
	and repeatability than using an external &MIDI; device, because
	&rosegarden; will be able to load the correct plugins for you
	and use the correct settings the next time you load your same
	file.  Plugins may also offer better timing resolution than
	external &MIDI; devices. Synth plugin instruments also have the
	advantage of being routable like audio instruments, which also
	means you can add effects plugins on top of them.
	</para>
	
	<para>To make use of a synth plugin, first <link
	linkend="segment-view-instruments">assign a track</link> to a
	synth plugin instrument, and then load a synth plugin by
	clicking on the topmost button in the <link
	linkend="segment-view-instrumentparameterbox-synth">instrument
	parameter box</link>:</para>
	  
	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-synthpluginbuttons.png" format="PNG" />
	      </imageobject>
	      <textobject>
	      <phrase>Synth Plugin Buttons</phrase>
	      </textobject>
	    </mediaobject>
          </screenshot>
        </para>

	<para>This will bring up the same plugin dialog as shown above
	for effects plugins, but with a list of synth plugins instead
	of effects.  Once again, you will be shown the particular set
	of rotary parameters for the synth you have selected.  Synth
	plugins may also have <quote>programs</quote>, selectable from a menu &ndash;
	this menu will only appear if you have chosen a synth that supports
	them.  When you have selected and configured a synth plugin
	for an instrument, any &MIDI; data on tracks assigned to that
	instrument should play through that synth, as should
	incoming &MIDI; data during recording or monitoring.
	</para>
      </sect2>

      <sect2 id="studio-plugins-guis">
	<title>Plugin native editor windows</title>

	<para>Most plugins can be controlled completely using the
	rotary controllers in &rosegarden;'s plugin dialog.  However, a
	few plugins (generally synths) also have their own editor
	windows which can be switched on or off from &rosegarden; and
	which may provide more complete or more organised
	controls.</para>

	<para>When you select a plugin that has its own editor window,
	the button at the lower left of the plugin dialog labelled
	<guibutton>Editor</guibutton>will become active:</para>

	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-plugineditorbutton.png" format="PNG" />
	      </imageobject>
	      <textobject>
	      <phrase>A Plugin Editor Button</phrase>
	      </textobject>
	    </mediaobject>
          </screenshot>
        </para>

	<para>(For synth plugins, there is a similar button in the
	instrument parameter box.)  Clicking this button should show
	the plugin's own editor window.  Any changes you make in this
	editor window should also be reflected in &rosegarden;'s own
	plugin dialog, if visible, and of course should be saved in
	your &rosegarden; file as normal.</para>
      </sect2>
    </sect1>

    <sect1 id="studio-metronome">
      <title>メトロノーム</title>
      <para>
      &rosegarden; は内蔵の2つのメトロノームを持っていて、その1つは
      録音中に使い、もう一つは通常の再生中にスイッチすることができる。
      それらは&MIDI;インスツルメントにノートを送ることによって動作し、両方の
      メトロノームは同じインスツルメント、ピッチとベロシティ情報を使う。
      </para>

      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-metronome.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;のメトロノーム構成ダイアログ</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>
      <para>
	メトロノームを構成するためには、
	<menuchoice>
	  <guimenu lang="en">スタジオ</guimenu>
	  <guimenuitem>メトロノームの管理</guimenuitem>
	</menuchoice>
	を使ってメトロノームダイアログを起動する。そののち、メトロノームのための
	&MIDI;インスツルメントとメトロノームの解像度(1つのビートあたりのティック、
	ビートの再分割、あるいはビートあたり1つ)を選択できる。&MIDI;シンセサイザーの
	実際のボイスのようなプロパティは選択されたインスツルメントに依存する
	メトロノームのティックのために使われ、トラックに割り当てられた
	インスツルメントに依存する&MIDI;トラックのために使われるボイスのようである。
	メインウィンドウ上でそれにをラックを割り当てることでインスツルメントを
	構成することができ、楽器パラメータボックスから正しいプログラム
        を選択することができる。
      </para>

      <para>
      メトロノームの録音と再生はtransportウィンドウでメトロノーム
      ボタンによってonまたはoffすることができる。このボタンは
      録音が供給されているか、実行中の時にメトロノームの録音を制御し、
      録音メトロノームはonにされ、再生メトロノームはoffにされる。
      既定値では、録音メトロノームはonになっていて、再生メトロノームは
      offになっている。
      </para>

      <para>
	&rosegarden; also has a <quote>visual metronome</quote>: the transport window
	can be told to flash brightly to mark each beat.  See <link
	linkend="transport">the Transport section</link> for more
	details.</para>
    </sect1>

    <sect1 id="studio-midi-filters">
      <title>MIDIフィルタ</title>
      <para>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="rg-midifilter.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>The MIDIフィルタダイアログ</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

      <para>
      このダイアログを使うことで、どの&MIDI;イベントを&rosegarden;が
      &MIDI; THRUを使ってイベントを送るか、それを単に録音するかで
      受け付けたり無視したりすることを決められる。このダイアログ上の
      チェックボックスを使うことで、&rosegarden;にどのタイプの&MIDI;
      イベントを送るか録音するかを希望しないことを伝える。
      </para>

    </sect1>


    <sect1 id="studio-external-controllers">
      <title>External MIDI control surfaces</title>
      <para>
	&rosegarden;'s audio and &MIDI; mixer windows and main canvas can
	also be controlled to some degree by an external &MIDI; device.
	To set this up, you will need to use an ALSA &MIDI; connection
	manager such as qjackctl to connect your &MIDI; controller
	device to &rosegarden;'s <quote>external controller</quote> input and output
	&MIDI; ports.
      </para>
      <para>
	&rosegarden; accepts &MIDI; control change messages to adjust the
	mixer track corresponding to the incoming &MIDI; channel on each
	controller event, and also sends out &MIDI; messages when
	something is changed in a mixer track in order to support
	controllers with powered faders or knobs.
      </para>
      <para>&rosegarden; accepts &MIDI; controller number 81 to change the
      currently active window.  Send controller 81 with data value 0-9
      to select the main window, 10-19 to select the audio mixer
      window or 20-29 to select the &MIDI; mixer window.</para>
      <para>&rosegarden; accepts &MIDI; controller number 82 to change the
      currently selected track in the main window.  The stepping of
      this controller depends on the number of tracks in the window &ndash;
      the ratio of controller data value to track number will be
      calculated so as to use the full &MIDI; controller data range,
      provided there are no more than 128 tracks in the window.</para>
    </sect1>

  </chapter>

  <chapter id="segment-instrument-parameters">
    <title>Special Parameters</title>
    
    <sect1 id="track-parameters">
      <title>The Track Parameter Box</title>
      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-trackparameterbox.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s track parameter box</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>
	<para>
	  The track parameter box can be found at the left side of the
	  &rosegarden; main window.  It displays the parameters for the
	  currently selected track.  If you can't see it, try using 	<menuchoice>
	  <guimenu lang="en">Settings</guimenu>
	  <guimenuitem>Show Special Parameters</guimenuitem>
	</menuchoice>.
    </para>
    <para>
	It allows you to assign instruments to tracks, control what
	incoming &MIDI; data from which sources will be recorded to
	particular tracks, control staff attributes (currently only for LilyPond
	export,) make selections that govern how &MIDI; segments
	will be created for each track that is assigned to a non-audio
	instrument, and apply these selections to existing segments. For example when
	converting a trumpet part from an imported &MIDI; file to be
	represented as notation playable by a real human on a real instrument.
    </para>
    <para>This box is divided into three sections:</para>
	<sect2 id="track-playback-parameters">
	    <title>Playback parameters</title>
	    <para>
		These provide an alternative mechanism to the <link
		    linkend="segment-view-instruments">menu-based
		    system</link> of instrument assignment.
	    </para>
	</sect2>
	<sect2 id="track-recording-filters">
	    <title>Track recording filters</title>
	    <para>
               These provide you a way to control what events are recorded to this
               track. If you leave the default values <quote>all</quote> for both parameters, every
               received event will be stored in the track. This setting is safe and
               convenient if you are recording only one &MIDI; track. Otherwise, you
               should adjust one or both parameters to select only the desired events for
               the track.
            </para>
	    <variablelist>
		    <varlistentry>
			<term>Device</term>
			<listitem>
			    <para>You can record from only one of the available devices
			    marked for recording in
			    the <link linkend="studio-device-editor">device
			    manager</link>, or from all of them simultaneously.</para>
			</listitem>
		    </varlistentry>
		    <varlistentry>
			<term>Channel</term>
			<listitem>
			    <para>You can record from all channels, or limit recording to
			    only one of the 16 available &MIDI; channels. In this case,
			    only &MIDI; channel messages matching the channel number will
			    be recorded, and system messages not having a channel (as
			    system exclusive events) will be discarded.</para>
			</listitem>
		    </varlistentry>
	     </variablelist>
	     <para>
               Both parameters are cummulative: you can filter only a device, only a
               channel, or both a device and a channel simultaneously. It is not mandatory
               to ensure mutually exclusive selections for all the armed tracks, but if
               you don't do so you will find duplicated events at several recorded tracks.
             </para>
	     <para>
		The recording filters are also used
		to <link linkend="studio-midi-routing">route &MIDI; events </link> to the
		assigned track instrument when you are recording.
             </para>
	</sect2>
	<sect2 id="track-staff-params">
	    <title>Staff export options</title>
	    <para>
	        These provide you with a means of exporting notation to render
		at either normal, small, or tiny size (eg for printing certain
		parts at cue size,) and allow you to export a variety of nested
		brackets.
	   </para>
	   <para>
	        You are responsible for creating a series of bracket start and
		end markers that will yield a functional result, and if you make
		a mistake with these, it is likely that your file will not
		export or preview correctly in LilyPond.
	   </para>
	   <para>For a detailed, hands-on demonstration of brackets in action,
	   please see
	   <ulink url="http://rosegarden.sourceforge.net/tutorial/supplemental/fidelio/">this
	   online tutorial.</ulink>
	   </para>
	</sect2>
	<sect2 id="track-create-with">
	    <title>Create segments with</title>
	    <para>
		These provide you with a means of controlling many of
		the <link
		    linkend="segment-view-segmentparameterbox">segment
		    parameters</link> for segments that don't yet
		exist.  They are aimed especially at notation users,
		and they facilitate operations that require you to use
		more than one segment on a track (as when using
		<link linkend="segment-view-segmentparameterbox">repeats</link>, or <link
		    linkend="nv-lilypond-directives">alternative
		    endings</link>), by allowing you to create a series of new
		segments that all have the same properties by default.
	    </para>
	    <para>
		<variablelist>

		    <varlistentry>
			<term>Preset</term>
			<listitem>
			    <para>
				The <guibutton>Load</guibutton> button
				launches a dialog that allows you to pick
				a pre-defined collection of parameters
				that provide guidelines for how you should
				write parts for real-world instruments, and
				optionally convert any existing segments on this
				track to take on these new parameters.
				<!-- needs a tutorial somewhere, and a link to
				that tutorial DMM -->
			    </para>
			    <para>
			    <inlinemediaobject>
				<imageobject>
				    <imagedata fileref="rg-loadpreset.png" format="PNG" />
				</imageobject>
			    </inlinemediaobject>
			    </para>
			    <para> You first pick a <guilabel>Category</guilabel>, then an
			    <guilabel>Instrument</guilabel>, and finally choose whether
			    you wish to write a part for an amateur or a professional
			    player.  <footnote><para>This database was compiled by Magnus
			    Johansson, who deserves all the special mention we can muster
			    for his outstanding effort on this.  </para></footnote> The
			    <guilabel>Scope</guilabel> controls allow you to choose whether these parameters
			    will only affect segments that don't yet exist (which you will
			    subsequently record, or draw with the pencil) or should
			    convert any existing segments to take these parameters as
			    well.  (For a demonstration of the latter case in action,
			    please see
				<ulink url="http://rosegarden.sourceforge.net/tutorial/supplemental/fidelio/">
				this online tutorial.)</ulink>
				Clicking the <guibutton>OK</guibutton>
				button injects the appropriate parameters into
				the remaining widgets in this part of the track
				parameters box, where you can tweak them if you
				desire.<footnote><para>No facility is provided
				at this time for assembling your own database of
				presets, or customizing the existing ones in a
				permanent way.</para></footnote> </para>
			    <para>
				Once you have loaded a preset, the name of
				your chosen preset will be used as the label
				for any segments you subsequently draw or
				record on this track, even if you change some
				or all of the associated parameters away from
				the values you just loaded.
			    </para>
			</listitem>
		    </varlistentry> 

		    <varlistentry>
			<term>Clef</term>
			<listitem>
			    <para>This lets you choose the clef for any
				segments you subsequently draw or record on
				this track.  Clefs are events, not properties.
				Your segments will be created with an initial
				clef event of the appropriate type (which you
				may subsequently alter or delete, should you
				have some occasion to do so.)
			    </para>
			    <para>
				The clefs available include a variety of named
				clefs representing standard clefs with various
				octave offsets.
			    </para>
			    <!-- !!! I would enumerate this list, but I have
			    no idea how to do it in docbook.  I'm just winging
			    it by the seat of my pants here.  Why do you think
			    I avoided touching this hateful mess until now?  I
			    wrote Rosegarden Companion using OO.o, and didn't
			    touch tag one.  Wah. -->
			</listitem>
		    </varlistentry>

		    <varlistentry>
			<term>Transpose</term>
			<listitem>
			    <para>
				This causes segments on this track to be
				created so that their note events sound at a
				given transposition.  Useful, especially, for
				writing parts for transposing instruments.
			    </para>
			</listitem>
		    </varlistentry>

		    <varlistentry>
			<term>Colour</term>
			<listitem>
			    <para>
				This causes segments on this track to be
				created using a given colour.
			    </para>
			</listitem>
		    </varlistentry>

		    <varlistentry>
			<term>Range</term>
			<listitem>
			    <para>
				The <guibutton>Low:</guibutton> and 
				<guibutton>High:</guibutton> buttons,
				launch a dialog that allows you to pick a
				pitch using a staff.  The lowest and highest pitches
				you select will then appear right on these
				buttons.
			    </para>
			    <para>
				These represent the lowest and highest
				playable notes, respectively, on the instrument for which you
				are writing notation.  In some cases, these
				limits will be hard and fast, like the low B
				on a Transverse Flute (B foot).  In others,
				they may only serve as guidelines to help you
				make good choices for instruments with which
				you are not intimately familiar.
			    </para>
			    <para>
				If you enter, record, or import data that has
				pitches exceeding the values specified, the
				note heads will appear in red by default.  You
				can turn this behavior off with
				<menuchoice><guimenu lang="en">Settings</guimenu><guisubmenu>Configure
					Rosegarden</guisubmenu><guimenuitem>Notation</guimenuitem><guimenuitem>Show
					notes outside playable range in
					red</guimenuitem></menuchoice>
			    </para>
			</listitem>
		    </varlistentry>

		</variablelist>
	    </para>
	</sect2>

    </sect1>

    <sect1 id="segment-view-segmentparameterbox">
      <title>セグメントパラメータボックス</title>

      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-segmentparameterbox.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s segment parameter box</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

      <para>
	The segment parameter box can be found at the left side of the &rosegarden; main
	window.  If you can't see it, try using
	<menuchoice>
	  <guimenu lang="en">Settings</guimenu>
	  <guimenuitem>Show Special Parameters</guimenuitem> </menuchoice>. 
 	セグメントパラメータボックスは、選択されたセグメントのいくつかの外見を変更することができる。</para>
	<para>もしも1つのセグメントが現在選択され
	ているのならば、そのパラメータはセグメントパラメータボックス中
	で表示され、そこで編集できる。もしも複数のセグメントが選択されて
	いるのならば、パラメータボックスは選択されたセグメントすべてで
	現在共通な値のみが表示されるが、それらは変更でき、それはすべての
	選択されたセグメントに反映される。

	<variablelist>
	  <varlistentry>
	    <term>ラベル</term>
	    <listitem>
	    <para>選択されたセグメント(もしも同じラベルを持っているならば、
		    複数のセグメント)のラベルを表示する。<guibutton>Edit</guibutton>ボタンをクリック
	してラベルの編集ができる。</para>
	    </listitem>
	  </varlistentry>
	  
	  <varlistentry>
	    <term>繰り返し</term>
	    <listitem>
	    <para>
	    選択されたセグメントの繰り返しのon/offを切り替える。繰り返しを
	    指定されたセグメントは、同じトラック上の継続するセグメントの
	    開始点まで繰り返すか、継続するセグメントがない場合、楽曲の
	    最後まで繰り返す。
	    </para>

	      <para>
		繰り返しているセグメントの繰り返している部分は、オリジナルの
		セグメントに比べて、メインキャンバス上で淡い色で表示される。
		セグメントメニュー上で
		<menuchoice>
	  	<guimenu lang="en">セグメント</guimenu>
	  	<guimenuitem>Turn Repeats into Copies</guimenuitem>
 	 	</menuchoice>を使うか、単に単一の繰り返しブロック上でダブルクリックを行なう
		 ことによって、オリジナルのセグメントを真に編集可能なコピーに
		変更することができる。.</para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>クォンタイズ</term>
	    <listitem>
	      <para>
		選択されたセグメントのquantizationを表示する。
		すべてのそれらの音符の開始時間を簡単にquantize
		するために、これを変更することができる。
		より詳細なquantizationは<menuchoice>
	  <guimenu lang="en">セグメント</guimenu>
	  <guimenuitem>クォンタイズ</guimenuitem>
	</menuchoice>機能を使う。詳細は <link
		  linkend="quantization">Quantization</link>にある。
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
		    <term>Transpose</term>
	    <listitem>
		    <para>
		選択されたセグメントに現在適用されているtransposition(in semitones)
		を表示する。このtranspositionはセグメントが演奏されるときに適用され、
		マトリクス、notationまたはイベントリストエディタ内で表示される音符
		では見えない。楽曲全部または一部分のピッチを簡単に変更するためと、
		たとえばクラリネットのように、トランスポーズするインスツルメントのために書かれた
		音符を含むセグメントとともに、これを一般的に使うことができる。</para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>ディレイ</term>
	    <listitem>
		    <para>
		    選択されたセグメント上で現在効力のあるディレイを表示する。
		    演奏するために、後で書くより、セグメント全体にさせるために、
		    ここでディレイを設定することができる。このディレイはセグメントが
		    演奏されるときに適用されるが、マトリクス、譜面またはイベント
		    リストエディタ内で表示される音符では見えない。
		    </para>
	      <para>
		You can set a delay either in musical time (by
		choosing a note duration from the delay dropdown),
		in which time the exact delay will depend on the
		tempo, or in real time (by choosing a time in
		milliseconds from the dropdown).
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>色</term>
	    <listitem>
		 <para>
		選択されたセグメントが表示されるときに使われる色を表示する。
		ドロップダウン機能を使うか、ドロップダウンで見付からない場合、
		<quote>新しい色を追加</quote>オプションを選択することでその他の色を選択できる。
		 </para>
	      <para>
	<menuchoice>
	 <guimenu lang="en">コンポジション</guimenu>
	 <guimenuitem>ドキュメントプロパティの編集</guimenuitem>
	</menuchoice>
	を使い、ドキュメントプロパティダイアログの色ページを選択することによって、色の管理と
	名前の変更もできる。変更された色のパレットは&rosegarden;ファイル中の楽曲
		データと共にセーブされる。
		<screenshot>
		  <mediaobject>
		    <imageobject>
		      <imagedata fileref="rg-colours.png" format="PNG" />
	      </imageobject>
		<textobject>
		  <phrase>&rosegarden;'の色マネージャ</phrase>
		</textobject>
	      </mediaobject>
	      </screenshot>
	      </para>
	    </listitem>
	  </varlistentry>
	  
	</variablelist>
      </para>
    </sect1>

    <sect1 id="segment-view-instrumentparameterbox">
	<title>インスツルメントパラメータボックス</title>
      <para>
	The instrument parameter box can be found at the left side of
	the &rosegarden; main window, near the <link
	linkend="segment-view-segmentparameterbox">Segment Parameter
	Box</link>.  If you can't see it, try using
	<menuchoice> <guimenu lang="en">Settings</guimenu>
	<guimenuitem>Show Special
	Parameters</guimenuitem> </menuchoice>.</para>

      <para>It shows you
	which instrument is assigned to the current selected track,
	and contains all of the editable controls for that instrument.
	Remember that because any number of tracks can be assigned to
	the same inst	rument, the settings in this box may affect more
	than one track at a time.</para>

      <para>The layout and contents of the instrument
	parameter box depend on the type of instrument: &MIDI;, audio,
	or synth plugin.
      </para>

      <sect2 id="segment-view-instrumentparameterbox-midi">
	<title>MIDI Instrument Parameters</title>
      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-ipb-midi.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s instrument parameter box for a &MIDI; instrument</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>
	<para>When you select a track assigned to a &MIDI; instrument,
	the instrument parameter box shows &MIDI; parameters.
	</para>
	<para>At the top, this box
	shows the name of the instrument and the connection that its
	device is using.
	</para>
	<para>Below that, you can see and edit the &MIDI;
	channel number and the <link linkend="studio-bank-editor">bank
	and program</link> settings that should be sent to the
	instrument at the start of playback including a <guilabel>percussion</guilabel>
	toggle that controls whether only percussion programs should
	be offered in these settings.</para>

	<para>Finally this box shows you the <!-- !!! link
	linkend="studio-device-controllers" --> controllers available
	for this device (those for a General &MIDI; device are shown
	above).  Any settings you make here will be sent to this
	instrument's channel at the start of playback.</para>
      </sect2>

      <sect2 id="segment-view-instrumentparameterbox-audio">
	<title>Audio Instrument Parameters</title>
      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-ipb-audio.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s instrument parameter box for an audio instrument</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>
	<para>
	  When you select an audio track, the instrument parameter
	  box shows audio parameters.
	</para>
	<para>
	  The box has two main faders, one with a blue surround for
	  playback level and the other with a red surround for the
	  record level when recording to this instrument.  Between
	  them is a playback level meter.
	</para>
	<para>The two menus at the top of the box are used to select
	the input and output <link linkend="studio-audio-routing">audio routing</link> for this
	instrument.  Below them you can select whether the instrument
	is mono or stereo, and the pan setting for position in the
	stereo field. <footnote><para>Audio instruments are always ultimately
	stereo, because the pan setting is always applied.  But if you
	set the instrument to mono, it will reduce any audio data and
	effect outputs to mono before applying pan.</para></footnote>
	  </para>
	<para>The column of five buttons at lower left are the effects slots.  Click on
	them to select and activate plugin effects for this audio instrument, and to
	control them using the <link linkend="studio-plugins">plugin editor dialog</link>.
	These are insert effects, applied in order from top to bottom before the fader and
	pan.
	</para>
      </sect2>

      <sect2 id="segment-view-instrumentparameterbox-synth">
	<title>Synth Plugin Instrument Parameters</title>
      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-ipb-synth.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s instrument parameter box for a synth plugin instrument</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>
	<para>When you select a track assigned to a synth plugin
	instrument, the instrument parameter box shows synth
	parameters.  You will notice that although a synth plugin
	track uses segments with &MIDI; data in them, in terms of
	control and routing it behaves more like an audio track.
	</para>
	<para>The most important control here is the button at top
	left (saying <guibutton>Xsynth</guibutton> in the above picture) which shows the name
	of the synth plugin in use for this instrument.  Click this to
	select a particular synth and control it in the standard
	&rosegarden; <link linkend="studio-plugins">plugin editor dialog</link>.  Once
	you've selected a plugin, you may also be able to click the
	<guibutton>Editor</guibutton> button below it in order to open a dedicated GUI editor
	for the particular plugin if the plugin has one.
	</para>
	<para>The remaining controls here are the same as for audio
	instruments: the playback fader, playback level, output
	routing, mono/stereo and pan settings and effects slots are
	all exactly the same.</para>
      </sect2>

    </sect1>
  </chapter>

  <chapter id="quantization">
    <title>Quantization</title>
    <para>
    <quote>Quantization</quote>は音符の再ポジショニングのプロセスとその他のイベントであり、
	    so that they start or finish on exact beat divisions.  It
      is traditionally used to make an approximate performance into a
      precise but rather mechanical-sounding one &ndash; either because
      precision is the desired effect, or for reasons such as making
      the notes clearer in notation.
    </para>

    <para>
      For general quantization, use
      	<menuchoice>
	  <shortcut><keycap>=</keycap></shortcut>
	  <guimenu lang="en">Segments</guimenu>
	  <guimenuitem>Quantize</guimenuitem>
	</menuchoice>
      in the main window or
	<menuchoice>
	  <guimenu lang="en">Adjust</guimenu>
	  <guimenuitem>Quantize</guimenuitem>
	</menuchoice>
      in matrix or notation editors.  This shows you a dialog in which
      you can select the precise quantization parameters you need, and
      then it applies these to all of the selected segments or notes.
      
    </para>

    <para>
      <screenshot>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="rg-gridquantizer.png" format="PNG" />
    </imageobject>
      <textobject>
	<phrase>&rosegarden;'s quantize dialog</phrase>
      </textobject>
    </mediaobject>
    </screenshot>
    </para>

    <para>
      The quantize dialog offers a selection of quantizers, each with
      its own set of parameters.  The quantizers available are:
    </para>
    <variablelist>

      <varlistentry>
	<term>Grid quantizer</term>
	<listitem>
	  <para>The grid quantizer moves the start times of notes so
	  that they start at the nearest point on some grid (defined
	  by various parameters of the quantizer).  Thus notes that
	  initially vary slightly in start time will be aligned by the
	  quantizer, making for a more precise and mechanical
	  performance.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>Legato quantizer</term>
	<listitem>
	  <para>The legato quantizer carries out a simple grid
	  quantization, and also adjusts the note durations so as to
	  remove any gaps between notes by extending each note so as
	  to (at least) continue until the start of the following one.
	  You can also obtain this legato effect without the
	  accompanying grid quantization using
	<menuchoice>
	  <shortcut><keycap>-</keycap></shortcut>
	  <guimenu lang="en">Adjust</guimenu>
	  <guimenuitem>Quantize</guimenuitem>
	  <guimenuitem>Legato</guimenuitem>
	</menuchoice> in the matrix editor.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>Heuristic notation quantizer</term>
	<listitem>
	  <para>The notation quantizer attempts to adjust note start
	  times and durations so as to produce readable notation.  See
	  <link linkend="nv-quantization">Notation from performance
	  data</link> for a description of this quantizer and its
	  uses.</para>
	</listitem>
      </varlistentry>

    </variablelist>

    <para>The grid quantizer has the following adjustable parameters:</para>
    <variablelist>

      <varlistentry>
	<term>Base grid unit</term>
	<listitem>
	  <para>This is the size of the grid used for quantization.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>Swing</term>
	<listitem>
	  <para>This is a percentage figure which adjusts the degree
	  by which alternate beats are quantized <quote>late</quote>.</para>
	  <para>If set to
	  None (the default), quantization will be to an even grid
	  spaced according to the base grid unit.</para>
	  <para>If set to 100%,
	  every second grid line will be placed two-thirds of the distance
	  between the previous and next ones, instead of only half.
	  This will result in notes being quantized to the first and
	  third triplets of a swing beat.
	  </para>
	  <para>Other settings will produce proportionately varying degrees of
	  swinginess.  You can also set this parameter to negative
	  figures (for alternate beats to start early) or to figures
	  greater than 100%.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>Iterative amount</term>
	<listitem>
	  <para>The default behaviour of the grid quantizer is to move
	  each note exactly onto its nearest grid line.  But if you
	  set the iterative amount to something less than 100% (the
	  <quote>Full quantize</quote> default), each note will only be moved that
	  percentage of the distance toward its nearest grid line,
	  resulting in a nearly-but-not-quite quantized effect.</para>
	  <para>This quantizer may be applied repeatedly so as to try
	  out gradually increasing degrees of quantization, hence the
	  name <quote>iterative</quote>.  Use 
	<menuchoice>
	  <shortcut><keycap>+</keycap></shortcut>
	  <guimenu lang="en">Adjust</guimenu>
	  <guimenuitem>Quantize</guimenuitem>
	  <guimenuitem>Repeat Last Quantize</guimenuitem>
	</menuchoice> in the Matrix editor to do so.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>Quantize durations as well as start times</term>
	<listitem>
	  <para>If this option is enabled, the quantizer will quantize
	  the notes' end times to the same grid as their start times.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

    <para>The quantize dialog also has an optional <guibutton>Advanced</guibutton> section
      containing further options for 
	  <link linkend="nv-quantization">notation quantization</link>.
    </para>
    
    <para>
      Another simple way to apply a grid quantizer is to do it in the
      main window, using the <guimenuitem>Quantize</guimenuitem> menu
      on the <link linkend="segment-view-segmentparameterbox">segment
      parameter box</link>.  If you select some segments and change
      the value shown in the menu, the segments will immediately be
      grid-quantized to the resolution shown in the menu.
    </para>

    <para>
      Finally, there is also a <link
      linkend="matrix-grid-quantize">quantize control</link> in the matrix
      view.</para>
    
  </chapter>
  
  <chapter id="matrix-view">
    <title>マトリクスエディタ</title>
    <para>
    &rosegarden;のマトリクスエディタは、クリヤで論理的な形式で
    音楽を表示し、編集することを可能にする。それぞれの音符は
    グリッド中のブロックとして表わされ、高さはピッチに関連する。
    </para>
    <para>
      <screenshot>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="rg-matrixview.png" format="PNG" />
    </imageobject>
      <textobject>
	<phrase>&rosegarden;のマトリクスエディタ</phrase>
      </textobject>
    </mediaobject>
    </screenshot>
    それぞれのマトリクスエディタウィンドウは1つのセグメントを表示する。
    セグメントを編集するために、メインキャンバス上で右クリックし、
      <menuchoice><shortcut><keycap>M</keycap></shortcut><guimenu
      lang="en">セグメント</guimenu><guimenuitem>マトリクスエディタ</guimenuitem>
      </menuchoice>からマトリクスエディタを選択する。代わりに、セグメントを
      ダブルクリックするときにマトリクスエディタが既定値のエディタに
        なるように&rosegarden;を設定することも可能である。
    </para>

    <sect1 id="matrix-grid-quantize">
      <title>The Grid and Quantize controls</title>
      <para>
	The matrix view contains <guilabel>Grid</guilabel> and <guilabel>Quantize</guilabel> menus in its main
	toolbar.
      </para>
      <para>The <guilabel>Grid</guilabel> menu controls the size of the visible grid in the
      background of the matrix view, as well as the time resolution
      used when entering and moving notes.  After you set it to a
      particular time value, the normal note insertion and drag
      operations will then snap automatically to grid points spaced at
      that time width.  You can override the snap-to-grid effect
      temporarily by holding down <keycap>Shift</keycap> during editing, or you can
      disable it by setting the <guilabel>Grid</guilabel> menu to <guibutton>None</guibutton>.
      </para>
      <para>The <guilabel>Quantize</guilabel> menu works rather differently.  Rather than
      controlling the behaviour of other editing tools, it actually
      performs an action.  When you change the value in this menu, the
      selected notes &ndash; or the whole segment if nothing is selected
      &ndash; will immediately be quantized using a grid quantizer of the
      chosen resolution.
      </para>
      <para>The <guilabel>Quantize</guilabel> menu also shows you continuously what
      resolution the current segment or selection is quantized to.
      For example, if you select a set of notes that start on
      consecutive quarter-note beats, the <guilabel>Quantize</guilabel> menu will update
      itself to show 1/4, as this is the coarsest resolution
      consistent with the existing quantization of the current
      selection.
      </para>
    </sect1>

    <sect1 id="matrix-insertion">
      <title>音符の挿入</title>
      <para>
      マトリクスビューにノートを挿入する一番簡単な方法は、マウスを
      使うことである。これを行なうために、ツールバー上で鉛筆ツール
      を選択し、マトリクスエディタ上にクリックしドラッグする。
      音符と、そこでクリックした点に関連するピッチが入力され、
      マウスボタンをリリースする前に関連した距離に関連するデュレーション
      を持つだろう。.</para>

	<para>You can also draw notes using the select tool  <inlinemediaobject><imageobject><imagedata fileref="rg-select.png" format="PNG" /></imageobject></inlinemediaobject>
, by clicking and dragging either with the <mousebutton>middle</mousebutton> mouse
	button, or with the <mousebutton>left</mousebutton> mouse button and <keycap>Ctrl</keycap> pressed.</para>

       <para>既定値では、時間とデュレーションは、ツールバー又は<guimenu>表示</guimenu>
	メニュー上の<guilabel>グリッド</guilabel>設定に添った形で、
	特定のグリッドユニットに貼り付けられる。クリックとドラッグ中に<keycap>シフト</keycap>
	キーを押したままにすることでこの効果を抑止できる。.
      </para>

      <sect2 id="matrix-insertion-keyboard">
	<title>Typing notes with the PC keyboard</title>

	<sect3>
	  <title>Duration</title>

	  <para>キーボードからのデュレーション入力は、
	  <menuchoice><guimenu lang="en">表示</guimenu>
	<guimenuitem>グリッド</guimenuitem></menuchoice>上の
	<guilabel>グリッド</guilabel>設定又はツールバーによって制御される:</para>

	  <itemizedlist>
	    <listitem><para><keycap>5</keycap> &ndash; Whole bar</para></listitem>
	    <listitem><para><keycap>1</keycap> &ndash; Beat</para></listitem>
	    <listitem><para><keycap>2</keycap> &ndash; Half note (minim)</para></listitem>
	    <listitem><para><keycap>4</keycap> &ndash; Quarter note (crotchet)</para></listitem>
	    <listitem><para><keycap>8</keycap> &ndash; Eighth note (quaver)</para></listitem>
	    <listitem><para><keycap>6</keycap> &ndash; Sixteenth note (semiquaver)</para></listitem>
	    <listitem><para><keycap>3</keycap> &ndash; Thirty-second note (demisemiquaver)</para></listitem>
	    <listitem><para><keycap>0</keycap> &ndash; Sixty-fourth note (hemidemisemiquaver)</para></listitem>
	  </itemizedlist>
	  
	</sect3>

	<sect3>
	  <title>ピッチ</title>

	  <para>
          <guilabel>グリッド</guilabel>メニュー中でいったん正確なデュレーションが選択されると、
	  以下のピッチキーの1つを押すことによって、
	  <link linkend="nv-rulers">カーソルの挿入</link>による
	  現在の位置にノートを挿入できる。
	  </para>

	  <itemizedlist>
	    <listitem><para><keycap>A</keycap> &ndash; ド (the tonic of the current key in the current clef)<!-- !!! FIXME: no clef in matrix view --></para></listitem>
	    <listitem><para><keycap>S</keycap> &ndash; レ</para></listitem>
	    <listitem><para><keycap>D</keycap> &ndash; ミ</para></listitem>
	    <listitem><para><keycap>F</keycap> &ndash; ファ</para></listitem>
	    <listitem><para><keycap>J</keycap> &ndash; ソ</para></listitem>
	    <listitem><para><keycap>K</keycap> &ndash; ラ</para></listitem>
	    <listitem><para><keycap>L</keycap> &ndash; シ</para></listitem>
	  </itemizedlist>

	  <para>キーを押す間に<keycap>Shiftキー</keycap>を押すと、
	  ノートが半音上がり、(シャープが定義されていないミとシは
	  除く) <keycap>Shift</keycap>と<keycap>Ctrl</keycap>キーを
	  一緒に押すと、半音下がる(ファとドを除く)</para>

          <para>1オクターブ上を入力する場合は、 <keycap>Q</keycap>,
	    <keycap>W</keycap>, <keycap>E</keycap>, <keycap>R</keycap>,
	    <keycap>U</keycap>, <keycap>I</keycap>と
	    <keycap>O</keycap>を使う。同様に、1オクターブ下を入力する場合には
	    <keycap>Z</keycap>, <keycap>X</keycap>,
	    <keycap>C</keycap>, <keycap>V</keycap>, <keycap>B</keycap>,
	    <keycap>N</keycap>と<keycap>M</keycap>を使う。</para>

	</sect3>

	<sect3>
	  <title>その他の注意すべき点</title>

	  <para>
	  すべてのコマンドの挿入は<guimenu>ツール</guimenu>メニューのサブ
	  メニュー上で有効である。たった1つのノートを挿入するためにメニューを
	  辿っていくことはありそうもないが、メニューはキーボード
	  ショートカットを表示しているので、どのキーがどの機能に
	  割り当てられているかを忘れた場合には役に立つリファレンスを
	  提供する。</para>

         <para>キーボードショートカットはQWERTYレイアウトキーボード用に
	  現在デザインされている。その他のレイアウトにキーをリマップ
          する方法はまだなく、<menuchoice><guimenu lang="en">設定</guimenu>
	  <guimenuitem>ショートカットを設定.</guimenuitem></menuchoice>
  	を明示的に使うことにより、各々のキーの再定義を個別に行なう??。</para>

	</sect3>

      </sect2>

      <sect2 id="matrix-insertion-midi">
	<title>&MIDI;キーボードからの音符の入力</title>

	<para>
	&MIDI;キーボード又はその他の&MIDI;制御デバイスを使うことで
        マトリクスエディタ中に音符を入力することができる。
	マトリクスエディタはキーボード上で演奏したピッチを使うが、
	デュレーションは、エディタそれ自身の <guilabel>グリッド</guilabel>
	設定中で選択したものを使う。これは<quote>ステップ録音</quote>
	として知られている。
	</para>

	<para>
	 &MIDI;キーボードからノートを入力するために、最初に既定値の
	 &MIDI;デバイスにキーボードを構成することを確実にする必要が
	 ある。次にツールバーの<guimenu lang="en">表示</guimenu>メニュー中で、
	 これが音符のデュレーションを制御するようにする。次に、マトリクスエディタの
	 ツールバー上のステップ録音ボタン
	  <inlinemediaobject><imageobject><imagedata fileref="rg-steprecord.png"
	  format="PNG" /></imageobject></inlinemediaobject>を押すか、
	  <menuchoice><guimenu lang="en">ツール</guimenu>
	  <guimenuitem>ステップ録音</guimenuitem>
	  </menuchoice>を選択する。その時点から&MIDI;キーボード上で押された全ての音
	  は、ウィンドウがクローズするか、別のウィンドウが有効になるか、再度ステップ
	  録音がoffにされるまでそのウィンドウ中に現在の挿入時間で挿入される。
	</para>

	<para>
	異なったデュレーションの音符を挿入するために、ステップ録音実行
	中の間グリッド設定を変更することができる。
	</para>
      </sect2>
    </sect1>

    <sect1 id="matrix-selection">
      <title>音符の選択</title>
      <para>マトリクスエディタ中で音符を選択するために、
      <inlinemediaobject><imageobject><imagedata fileref="rg-select.png"
      format="PNG" /></imageobject></inlinemediaobject> <keycap>F2</keycap>
      選択ツールにスイッチし、次に、選択したいノートを含む四角の領域を囲む。
      選択されたイベントは青でハイライトされる。もしも1つのイベント
        上で代わりにクリックすると、そのイベントのみが選択される。

      </para><para>
	もしも、<keycap>シフト</keycap>キーを、ノートをクリックするか、
	四角で囲む間押しているならば、新しい選択が、置き代わる代わりに
        存在する任意の選択に追加される。
      </para>

      <para>
      選択を解除したい場合には、マトリクスエディタの空白の場所で
      クリックするか、<keycap>エスケープ</keycap>キーを押す。</para>
      
	<para>
	マトリクスエディタの左端のピアノキーボードの下中でキー上で
	シフトしながらクリックすることによって与えられたピッチの
	ノートをすべて選択することができる。ピッチの範囲を選択する
	ために、シフトキーをOSIながらドラッグすることもできる。この選択
	は、今まで選択したものに追加されるので、新しく選択したい場合には
	古いものを先に消す。
	</para>

	  <sect2 id="matrix-selectionfilter">
          <title>Filtering the selection</title>
		  <para> <menuchoice>
		  <guimenu lang="en">Edit</guimenu>
		  <guimenuitem>Filter Selection</guimenuitem>
		</menuchoice> offers you the ability to filter a range of events in
		  any of several categories out of your selection.  You can use this to
		  refine the selection, if you want some action to apply to only certain
		  events in it.
	        </para>
		<para>
		  <screenshot>
		    <mediaobject>
		      <imageobject>
			<imagedata fileref="rg-eventfilter.png" format="PNG" />
		</imageobject>
		  <textobject>
		    <phrase>The event filter dialog</phrase>
		  </textobject>
		</mediaobject>
		</screenshot>
	        </para>
		<para>
		  All ranges may be either inclusive or exclusive.
		</para>
	        <para>
		  An inclusive range will remove events on either side of it
		  from the selection.  You can use this, for example, to
		  filter everything below middle C and above the A above
		  middle C out of your selection.
		</para>
	        <para>
		  An exclusive range will remove the events within the range
		  itself, leaving everything on either side of it selected.
		  Using the same search points as in the previous example,
		  you would use an exclusive range to remove everything
		  between middle C and the A above middle C from your
		  selection, while leaving everything above and below that
		  range selected.
		</para>
		<para>
		  Once your selection has been filtered, you can manipulate
		  it by any conventional means.
		</para>
 	</sect2>
    </sect1>

    <sect1 id="matrix-editing">
    <title>音符の移動とコピー</title>
    <para>
    移動ツールと共にクリックしてドラッグするか、選択の後
    選択ツールと共にドラッグするかをマトリクスエディタで
    行なうことによって時間とピッチの両方中でノートを移動
    することができる。
    </para>
      <para>
      ノートをコピーするためには、まず選択し、標準のコピーと
      貼り付け機能を使う。貼り付け後、張り付けられた音符は
      代わりに選択され、必要なところにどこにもドラッグすることが
      できる。選択ツールを使ってそれらを選択して、音符をコピーしてもよく、
      <keycap>Ctrl</keycap>を押しながら保持して、選択した音符を
      クリックアンドドラッグして新しい場所におく。
      </para>
    </sect1>

  </chapter>
  
  <chapter id="percussion-matrix-view">
    <title>The Percussion Matrix editor</title>
    
    <para>The Percussion Matrix editor is identical to the <link
    linkend="matrix-view">Matrix editor</link>, except that it shows pitch names on the
    vertical scale instead of a piano keyboard, and it does not show the duration for each
    note. It can be found under
    <menuchoice><shortcut><keycap>D</keycap></shortcut><guimenu
    lang="en">Segments</guimenu><guimenuitem>Edit With</guimenuitem><guimenuitem>Open in
    Percussion Matrix Editor</guimenuitem></menuchoice>. This is intended for use with
    percussion programs on &MIDI; instruments, in which each note pitch plays a different
    percussion sound.</para>

    <para>
      <screenshot>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="rg-percussionmatrix.png" format="PNG" />
    </imageobject>
      <textobject>
	<phrase>&rosegarden;'s percussion matrix editor</phrase>
      </textobject>
    </mediaobject>
    </screenshot>
      The pitch names are only shown if the segment being edited is
      playing through a percussion instrument that has an associated
      key mapping to define the names; otherwise the standard matrix
      view piano keyboard will appear instead.  See <link
      linkend="studio-keymappings">Percussion Key Mappings</link> for
      more information about key mappings.</para>
  </chapter>

  <chapter id="notation-view">
    <title>作譜エディタ</title>

    <!-- Introduction, purpose -->

    <sect1 id="nv-introduction">
      <title>概要</title>

      <para>

      &rosegarden;の作譜エディタは、伝統的なスコア記法中で
      1つまたはそれ以上のstaffを表示、編集することを可能にする。
	It can be found under
	<menuchoice><shortcut><keycap>N</keycap></shortcut><guimenu
	lang="en">Segments</guimenu><guimenuitem>Edit With</guimenuitem><guimenuitem>Open
	in Notation Editor</guimenuitem></menuchoice>.

      </para><para>

	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-notationview.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s notation editor</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
	</para>
      <para>
      &rosegarden; はシーケンサアプリケーションとして、その主要な
      焦点と互換性を持つ、最高のレイアウトを提供しようとする。
	This means that although the editor supports
	chords, overlapping and nested beamed groups, triplets and
	arbitrary tuplets, grace notes, dynamics, accents, text and so
	on, it does not provide as much fine control over layout
	(especially in contrapuntal music) as a dedicated score
	editing program might. &rosegarden; does not aim to produce
	typeset-quality score, although it can export LilyPond files,
	which may form a good basis for typesetting.

      </para>
    </sect1>

    <!-- Single and multiple staffs, and "current staff" -->

    <sect1 id="nv-staffs">
      <title>1つ又は複数行の五線譜</title>

      <para>
      &rosegarden;メインウィンドウから作譜エディタを開く
      3つの方法がある(それらはすべて、メインウィンドウに
      いくつかのセグメントが存在することを最初に要求し、
      そのため、もしも、新しい楽曲構成を始めるならば、
      それを編集することを考え始める前に、セグメントを
      作成する必要がある)。

	<variablelist>

	  <varlistentry>
	    <term>セグメント上でのダブルクリック</term>
	    <listitem>
	      
	<para>最も明瞭な手段は、メインキャンバス中でセグメントを
	ダブルクリックする方法である。これは既定のエディタ
	This opens the segment in whatever you have configured <!--
	!!!Link-->(作譜、マトリクスまたはイベントリスト)として設定した何でもでセグメントを
	オープンし、そして、既定値は作譜エディタである。そのため、1つのセグメントを
	ダブルクリックすると、作譜エディタウィンドウ中で1行の五線譜として開く。</para>
	      
	<para>
	この方法で複数行の五線譜をオープンすることもできる。
	<keycap>シフト</keycap>キーを押しながら、オープンしたい複数のセグメントの
	各々を、メイン表示上で選択(1つのマウスクリック)するが、
	最後のものをダブルクリックする。選択されたすべての
	セグメントは1つの作譜ウィンドウ中に一緒に
	オープンされる。
	</para>

	    </listitem>
	  </varlistentry>

	  <varlistentry>
		  <term>既定のエディタメニュー機能でのオープン(リターンキー)</term>
	    <listitem>

	    <para>
	   <keycap> リターン</keycap>キーは既定のエディタメニュー機能の中のオープン
	    のショートカットであり、それはダブルクリックと同じである。作譜エディタ
	    中で現在選択されているセグメントすべてをまとめてオープンするか、既定値として
	    構成したその他のエディタでオープンする。</para>
	    </listitem>
	  </varlistentry>
	  
	  <varlistentry>
	  <term>作譜エディタメニュー機能内でのオープン</term> <!-- !!!this needs work menu work rewording? SOM-->
	    <listitem>

	    <para>代わりに、メインウィンドウのメニュー機能内の
		 オープンた、キャンバス内のセグメント上の右ボタンの
		 ポップアップメニュー上でオープンすることもできる。
		 希望のセグメントを選択(上記のようにシフトキー+クリックか、
		 すべてのセグメントの選択機能のどちらか)し、
		 次に、作譜エディタ中でオープンを選択する。
		 </para>
	 </listitem>
	  </varlistentry>
	</variablelist>

      </para>

      <para>
      もしも1つ以上の五線(すなわちセグメント)を作譜エディタ内で表示したいのであれば、
      一時にそのうちの1つのみが<quote>カレント</quote>にできる。
      カレントの五線は、その上に挿入カーソルを持つことで識別すること
      ができ(<link linkend="nv-rulers">ルーラとカーソル</link>
      を参照)、挿入カーソルを使う任意の編集が行える五線の場所である。
      operations that use the insert cursor will take place.
      最上部の五線は既定値ではカレントであるが、その上で
      コントロールキーを押しながらクリックするか、
      <menuchoice><shortcut><keycombo><keycap>Shift</keycap><keycap>Up</keycap></keycombo>
	      </shortcut><guimenu lang="en">ツール</guimenu>
	      <guimenuitem>ローカルカーソル</guimenuitem>
	      <guimenuitem>上の五線にカーソル移動</guimenuitem></menuchoice>と
      <menuchoice><shortcut><keycombo><keycap>Shift</keycap><keycap>Down</keycap>
	</keycombo></shortcut><guimenuitem>下の五線にカーソル移動</guimenuitem>
	</menuchoice>を使う。
      </para>

    </sect1>

    <!-- Linear and page layouts -->

    <sect1 id="nv-layout">
      <title>リニアとページレイアウト</title>

      <para>
	作譜エディタが五線を表示する通常の方法は、リニアレイアウトとして知られて
	いるものである。1つの五線がその他の一番上にあり、それぞれの五線は単独の、
	水平にスクロール可能な長い行になっている。エディタのいくつかの機能は
	(<link linkend="nv-rulers">ルーラ</link>のようなもの)
	<menuchoice><guimenu lang="en">表示</guimenu><guisubmenu>レイアウトモード
	</guisubmenu><guimenuitem>リニアレイアウト</guimenuitem></menuchoice>
	のみで有効である。
      </para>

	<para>
          しかし、2つの違ったページベースのレイアウト内で五線を表示させることも可能である。
	継続(Continuous)ページと複数(Multiple)ページである。</para>

      <para>継続レイアウトページ <menuchoice><guimenu
      lang="en">表示</guimenu><guisubmenu>レイアウト
      </guisubmenu><guimenuitem>継続ページレイアウト</guimenuitem></menuchoice>内では、
	楽曲はウィンドウとして同じ幅の無限の高さのページとして編集される。各々の五線は
         各行の終わりで区切られ、残りの五線を以下に持つ新しい行で始まる。</para>

      <para>複数ページレイアウト<menuchoice><guimenu
      lang="en">表示</guimenu><guisubmenu>レイアウトモード</guisubmenu>
	<guimenuitem>複数ページレイアウト</guimenuitem></menuchoice>内では、
	楽曲は印刷されるときにの状態のページに分割される。それぞれのページのサイズは、
	実際に印刷される時にそれぞれのラインにほぼ同じ量の楽曲がフィットするように
        計算される(構成ダイアログ中で印刷の改造度のために指定された
        ポイントサイズに従って)。印刷バージョンは、印刷するときに
        明確な紙の大きさとマージンに依存するので、まったく同じという
        ことはありそうもないが、A4サイズを使うときにはそれはかなり
        近くなければならない。</para>

      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-notationview-multipage.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>複数ページ内での&rosegarden;の複数ページレイアウト</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
	</para><para>
        ほとんど、但し全部ではない、表示と編集機能はリニアレイアウト
        と同じようにページレイアウトモードで動く。
      </para>

     
    </sect1>

    <!-- Rulers and Cursors -->

    <sect1 id="nv-rulers">
      <title>ルーラとカーソル</title>

      <para>
	&rosegarden; 譜面エディタウィンドウは、それぞれ固有のカーソルに関連づけられている2つのメモリ付き
	のルーラを含んでいる。ルーラはメインの五線キャンバスの上から下までtickマークで分割された
	水平stripであり、カーソルは、エディタ中の一番上の五線の最初の部分に、初期状態で存在
	する、色つきの垂直ラインである。主な2つについて追加すると、それらは
	<guimenuitem>chord name</guimenuitem>ルーラ、<guimenuitem>tempo</guimenuitem>
	ルーラと<guimenuitem>raw note</guimenuitem>ルーラである。
    </para>
      <para>
	ルーラは<link linkend="nv-layout">リニアレイアウト</link>モードでのみ表示され、 
	いくつかのものは既定値では表示されないことに注意。
      </para>


    <para>
      <screenshot>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="rg-cursors.png" format="PNG" />
    </imageobject>
      <textobject>
	<phrase>譜面エディタの2つのカーソル</phrase>
      </textobject>
    </mediaobject>
    </screenshot>
    </para>

      <para>
          紫色のカーソルは挿入カーソルである。これは、挿入かペースト
          が起こるような動作のポイントを表示する。一番上ののルーラ上で
          ドラッグかクリックをするか、(任意のイベントを避ける)空白の
          五線の一部上でクリックするかドラッグするか、<keycap>
          コントロール</keycap>キーを押したままどこかでクリックすること
          で挿入カーソルを移動することができる。
      </para>

	<para>
        一度に1つのイベントを、挿入カーソルを移動するために、左か右の
        矢印キーを使うことができる。もしも<keycap>コントロール</keycap>
        キーを、矢印キーを押すときに押していると、カーソルは一度に
        次の小節線まで移動する。もしもシフトキーを押しているならば、
        カーソルはそれらをパスするように、
        <link linkend="nv-tools-selections">イベントの選択</link>
        を行なう。
	</para>

      <para>
          青のカーソルは再生ポインタである。マトリクス表示とメイン
          ウィンドウ内の同様のカーソルと同じく、これは、現在の再生
          または録音位置を示し、トランスポートがローリングしている間は、
	音符をまたいで通過する。これは下の方のルーラで位置を変更できる。
      </para>
      <sect2 id="nv-raw-note-ruler">
	  <title>The raw note ruler</title>
	  <para>The raw note ruler is particularly
	      useful when editing <link linkend="nv-quantization">quantized
		  notation</link> where the display duration on the page
	      differs from the duration of the actual performance.
	      Enabled via
	      <menuchoice>
	        <guimenu lang="en">設定</guimenu>
                <guimenuitem>ルーラ</guimenuitem>
                <guimenuitem>Show Raw Note Ruler</guimenuitem>
              </menuchoice>, it draws a small bar above
	      each note, similar to the way notes appear in the matrix.  In this
	      example screenshot, you can see how interpreted, quantized notes
	      appear on this ruler.  The tenuto notes have full performance
	      durations, while the staccato notes are considerably shorter, and
	      the accented notes have a higher velocity (more red colour) than
	      their neighbors.
	  </para>
	  <para>
	      Raw note ruler marks only notes in the selected segment in the track.
	      The colour of the selected segment is used in the background of
	      the raw note ruler between the start and end time of the segment.
	  </para>
	  <para>
	      <screenshot>
		  <mediaobject>
		      <imageobject>
			  <imagedata
			    fileref="rg-rawnoteruler.png" format="PNG" />
		      </imageobject>
		      <textobject>
			  <phrase>The raw note ruler,
			showing notation whose performance duration value differs
			from what appears on the staff</phrase>
		      </textobject>
		  </mediaobject>
	      </screenshot>
	  </para>
      </sect2>
      <sect2 id="nv-chord-name-ruler">
	  <title>The chord name ruler</title>
	<para>The chord name ruler analyzes the tonality of the piece, and attempts to
	display which chords are sounding.  This is for informational purposes only, and
	you can neither print nor edit the contents of this ruler. To actually write
	chords which will print see <link linkend="chord-text">Chords</link> in the
	section on text elements in a &rosegarden; file.
	    <!-- !!! throw in a link to how to do proper chords with text, (SOM-done)  -->
	</para>
    </sect2>
    <sect2 id="nv-tempo-ruler">
	<title>The tempo ruler</title> <para>The tempo ruler displays
	the global tempo, and provides a vehicle for entering,
	editing, and manipulating it.  It works the same way as the
	tempo rulers in the main window and the matrix editor.  See
	<link linkend="tempo-ruler">Tempo Rulers</link> for more
	information.</para>
    </sect2>

    </sect1>

    <!-- Display conventions (annotated picture with some selected notes,
    some quantized notes, a bar of incorrect length etc) -->

    <!-- Tools and Selections -->

    <sect1 id="nv-tools-selections">
      <title>ツールと選択</title>
      <para>
          ほとんどの、&rosegarden; 譜面エディタのメニューと
          ツールバー編集機能は<quote>ツール</quote>、<quote>
          選択を行なう機能</quote>と<quote>ドラッグ操作</quote>
          の3つの機能に分類される。
      </para>

      <variablelist>
	<varlistentry>
	  <term>ツール</term>
	  <listitem>
	    <para>
		基本的なツールは、ツールバーボタンから通常アクセスできる、選択ツール
		 <keycap>F2</keycap>、削除ツール<keycap>F4</keycap>で、それらは
		音符、休符、テキストやその他を挿入しする。
	  </para>
	  <para>
	      <screenshot>
		  <mediaobject>
		      <imageobject>
			  <imagedata
			    fileref="rg-notationtools.png" format="PNG" />
		      </imageobject>
		      <textobject>
			  <phrase>挿入、削除、テキストとギターコードツール</phrase>
		      </textobject>
		  </mediaobject>
	      </screenshot>
	  </para>

	    <para>
		ツールを選択すると、代わりに少なくとも他のツールが選択されるまで、
		メイン音符キャンバス上でマウスボタンの既定の動作が変わる。たとえば、
                選択ツールを選択すると、選択が可能になり、(以下の)選択ベースの機能が
		使えるようになる。挿入ツールを選択すると(たとえばノートの1つ)、
		<acronym>GUI</acronym>の動作が切り替えられ、キャンバス上でクリックする
		ことで音符を挿入できる。削除ツールを選択すると、
	      <inlinemediaobject><imageobject><imagedata fileref="rg-eraser.png"
	      format="PNG" /></imageobject></inlinemediaobject>っろそれらの上で
		クリックすることで、イベントを削除する。
	    </para>
	    <para>
	      <guimenu lang="en">ツール</guimenu>メニューを使うことで、現在のツールを変更する
		こともできる。
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>選択操作上の機能</term>
	  <listitem>
	    <para>
                残りの大多数のメニュー機能は使うことができる前にキャンバス
                上で選択されることを要求する。そのうちのいくつかは、
                (たとえば、<guimenuitem>Cut</guimenuitem>
		<keycombo><keycap>Ctrl</keycap><keycap>X</keycap></keycombo>
		か、<guimenuitem>Note スタイル</guimenuitem>機能)
                選択されたイベント上で動作する。その他は
                (たとえば<guimenuitem>Stem Directions</guimenuitem>機能)
                選択がいくつかの音符を含むまで実行を凍結する。
	    </para>
	    <para>
	      キャンバス上のいくつかのイベントを選択するために、
		<inlinemediaobject><imageobject>
		<imagedata fileref="rg-select.png" format="PNG" /></imageobject>
		</inlinemediaobject>で選択したいイベントを含む矩形領域を囲む。
		選択されたイベントは、青にハイライトされる。もしも1つのイベント上でクリックすると、
		そのイベントのみが選択される<footnote>
		<para>そのイベントのために編集ダイアログをオープンするために
                1つのイベント上でダブルクリックをすることもできるが、それは選択には何の動作もしない。
		</para> </footnote>。</para>
		<para>もしも、<keycap>シフト</keycap>を矩形領域からドラッグ
                アウトする間押しているならば、そのコンテンツは置換の代わりに、存在する
		任意の選択範囲に追加される。.
	    </para>
	    <para>
		小節全体を選択するためには、小節内のどこか空白の場所で、選択ツールとともに
		ダブルクリックする。全ての五線を選択するためには、3回クリックする。
		<guimenu lang="en">編集</guimenu>メニューは挿入カーソルの位置上を
		元にした拡張領域を選択するための機能を運び、<keycap>シフト</keycap>と
		左又は右矢印キーを押すことによって、挿入カーソルの周りのイベントを選択できる。
	    </para>
	    <para>
                一度に、1つの五線より多くイベントを選択することはできない。
	    </para>
		  <para>After selecting some events, you can filter your selection further
		  using
		  <menuchoice><shortcut><keycombo><keycap>Ctrl</keycap><keycap>F</keycap></keycombo>
		</shortcut>
		  <guimenu lang="en">編集</guimenu>
		  <guimenuitem>フィルタの選択</guimenuitem>
		</menuchoice>.  For more details, refer
		to <link linkend="matrix-selectionfilter">the corresponding function in
		the matrix editor</link>.
	        </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>ドラッグ操作</term>
	  <listitem>
	    <para>
		あるものの周りでドラッグを行なうことでひとまとまりの編集を確実にすることが
		できる。選択<inlinemediaobject><imageobject><imagedata
	      fileref="rg-select.png" format="PNG" /></imageobject></inlinemediaobject>
		ツールに切り替え、ノートのピッチを、その頭を上か下にクリックし、ドラッグする
                ことによって変更でき、音符の時間とその他のイベントは、それらを左か右にドラッグ
		することによって変更できる。(残りの時間シグネチャにドラッグできないが、それ以外は
		すべてドラッグできる。もしも1つ以上のイベントを選択しているならば、一度にすべて
		の選択がドラッグされる。)
	    </para>
	    <para>
                ドラッグは通常ツールバー機能やメニューを使うよりも、
                 より少ない確実な手段であるが、それはより簡単である。
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>

      <sect2>
	<title>Transposing</title>
	
	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
	        <imagedata fileref="transpose-by-interval.png" format="PNG" />
		  </imageobject>
	  	  <textobject>
	        <phrase>Transposing by interval</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
	</para>
	<para>
	  In notation view menu there are two functions which can be
	  used to transpose notes by an arbitrary interval, namely
	    <menuchoice>
	      <guimenu lang="en">Adjust</guimenu>
	      <guimenuitem>Transpose</guimenuitem>
	      <guimenuitem>Transpose by Semitones</guimenuitem>
	    </menuchoice>
	  which asks just the number of semitones to be
	  transposed, and
	    <menuchoice>
	      <guimenu lang="en">Adjust</guimenu>
	      <guimenuitem>Transpose</guimenuitem>
	      <guimenuitem>Transpose by Interval</guimenuitem>
	    </menuchoice>
	  which shows a neat dialog that can be used to 
	  transpose notes. In the latter, the dialog shows an example 
	  notes before and after transposing and expresses the
	  interval in written form. The interval may be changed either
	  by dragging the notes shown by the dialog or by changing
	  separately the base note, its octavation and accidentals.
	</para>
	<para>
	  You can access the transpose by interval dialog in <!-- In Segment view (what's
	  this?) --> the notation and track (or default) view through
	    <menuchoice>
	      <guimenu lang="en">Segment(s)</guimenu>
	      <guimenuitem>Transpose by Interval</guimenuitem> </menuchoice>.
	  
	</para>
      </sect2>
    </sect1>

    <!-- Insertion: notes, auto-ties, accidentals -->

    <sect1 id="nv-insertion">
      <title>音符と休符の挿入</title>

      <para>音符を挿入するために、ツールバー上の音符の特定のデュレーション上を
	クリックすることで、音符ツールの1つを選択し、音符を挿入したい位置の五線上で
	クリックする。</para>
      <para>
	  <screenshot>
	      <mediaobject>
		  <imageobject>
		      <imagedata
			fileref="rg-notation-toolbars.png" format="PNG" />
		  </imageobject>
		  <textobject>
		      <phrase>The duration, rests, and accidentals toolbars</phrase>
		  </textobject>
	      </mediaobject>
	  </screenshot>
      </para>

      <para>You can also select one of the accidentals on the toolbar to insert sharpened
      or flattened notes.  If no accidental is selected, the note inserted will follow the
      key signature.  Alternatively, you can select the
      <inlinemediaobject><imageobject><imagedata fileref="rg-follow.png" format="PNG"
      /></imageobject></inlinemediaobject> follow previous accidental icon to make the
      note follow whatever accidental was last used at the same height on the
      staff.</para>

      <para>If you add a note at the same time as an existing note of different duration,
      the editor will generally assume that you want to create chords and will split the
      existing or new note accordingly so as to create one or more chords with ties.  If
      you really do want to chord two different durations, you can select the tied
      noteheads and use
      <menuchoice><shortcut><keycombo><keycap>Ctrl</keycap><keycap>=</keycap></keycombo>
      </shortcut><guimenu
      lang="en">Adjust</guimenu><guisubmenu>Notes</guisubmenu><guimenuitem>Collapse
      Equal-Pitch Notes</guimenuitem></menuchoice> to merge them together. Alternatively,
      the default behaviour can be changed in the &rosegarden; configuration dialog so as
      not to do the split at all.</para>

      <para>もしも、異なったduration(すなわち同じピッチ)の存在する音符の
      上に正確に音符を追加するならば、存在する音符のdurationは新しい
      ものによって変更される。</para>

      <para>もしも存在する音符と同じような時間の休符を追加するならば、音符は
	休符のデュレーションのために無音化されるか、短くされるか、まとめて
	削除されるだろう。</para>

      <sect2 id="nv-insertion-keyboard">
	<title>PCキーボードによる音符と休符の入力</title>

	<sect3>
	  <title>デュレーション</title>

	  <para>最初に、挿入したい音符（か休符）のデュレーション内を指し示すように
		音符ツールが選択されることを確実にすること。
		以下の数字キーを使うことによって色々な音符のタイプを選択できる:</para>

	  <itemizedlist>
	    <listitem><para><keycap>5</keycap> &ndash; Breve</para></listitem>
	    <listitem><para><keycap>1</keycap> &ndash; Whole note (semibreve)</para></listitem>
	    <listitem><para><keycap>2</keycap> &ndash; Half note (minim)</para></listitem>
	    <listitem><para><keycap>4</keycap> &ndash; Quarter note (crotchet)</para></listitem>
	    <listitem><para><keycap>8</keycap> &ndash; Eighth note (quaver)</para></listitem>
	    <listitem><para><keycap>6</keycap> &ndash; Sixteenth note (semiquaver)</para></listitem>
	    <listitem><para><keycap>3</keycap> &ndash; Thirty-second note (demisemiquaver)</para></listitem>
	    <listitem><para><keycap>0</keycap> &ndash; Sixty-fourth note (hemidemisemiquaver)</para></listitem>
	  </itemizedlist>
	  
	    <para>
             <keycap>G</keycap>キーを押すことで、三連符バージョンの
              音符のデュレーションに切り替えることができる。もう一回押すと、
              通常のデュレーションに切り替わる。ウィンドウの下部のステータス
              バーは三連符デュレーションが有効の時にそれを通知する。</para>
	</sect3>

	<sect3>
	  <title>ピッチ</title>

	    <para>音符ツールが選択されると、以下のピッチキーのどれかを
              押すことによって<link linkend="nv-rulers">カーソルの挿入
              </link> で現在の位置に音符を挿入することができる。</para>

	  <itemizedlist>
	    <listitem><para><keycap>A</keycap> &ndash; ド (the tonic of the current key in the current clef)</para></listitem>
	    <listitem><para><keycap>S</keycap> &ndash; レ</para></listitem>
	    <listitem><para><keycap>D</keycap> &ndash; ミ</para></listitem>
	    <listitem><para><keycap>F</keycap> &ndash; ファ</para></listitem>
	    <listitem><para><keycap>J</keycap> &ndash; ソ</para></listitem>
	    <listitem><para><keycap>K</keycap> &ndash; ラ</para></listitem>
	    <listitem><para><keycap>L</keycap> &ndash; シ</para></listitem>
	  </itemizedlist>

	  <para>Press the <keycap>.</keycap>key to toggle between dotted and
	  undotted durations.</para>

	    <para>キーを押している間<keycap>Shift</keycap>キーを押すと、
	      半音高くなり(＃が定義されていないミとシを除く)
	      <keycap>Shift</keycap>と<keycap>Ctrl</keycap>キーを一緒に押すと、
              半音低くなる(ファとドを除く)
	    </para>

	  <para>一オクターブ高い音符を入力するためには、以下にあるキーを使う:
		<keycap>Q</keycap>、
	    <keycap>W</keycap>、<keycap>E</keycap>、<keycap>R</keycap>、
	    <keycap>U</keycap>、<keycap>I</keycap>と
	    <keycap>O</keycap>。同様に、オクターブ下の音符を入力するためには、
		<keycap>Z</keycap>、<keycap>X</keycap>、
	    <keycap>C</keycap>、<keycap>V</keycap>、<keycap>B</keycap>,
	    <keycap>N</keycap>と<keycap>M</keycap>を使う。</para>

	</sect3>

	<sect3>
	  <title>休符</title>
	  
	    <para>音符の代わりに休符を挿入するためには、
	      <keycap>P</keycap>を使う。その代わりに、現在のツールを
              切り替えて休符ツールに、また、音符ツールに再度戻すために、
	      <keycap>T</keycap> と <keycap>Y</keycap>を使うことができる。
	</para>

	</sect3>

	  <sect3 id="chord-insert">
	  <title>コード（和音）</title>

	  <para>既定値の譜面エディタの動作は、音符の挿入後に挿入
              カーソルを次に進め、メロディ中でその後に別の音符を
              挿入できるようになる。これは、最後のものと同じ時間に、その後の
		挿入を行う、
	  <menuchoice><shortcut><keycap>H</keycap></shortcut><guimenu
	  lang="en">ツール</guimenu><guimenuitem>コード挿入モード</guimenuitem>
	</menuchoice>コードモードに切り替えるために使うことによって変更する
	ことができる。再度<keycap>H</keycap>キーを押すと、メロディ挿入動作に戻る。</para>
	  </sect3>
	
	<sect3>
	  <title>Changing note durations</title>

	  <para>You can use the keyboard to change the durations of
	  notes that you've already entered.  Make sure the notes you
	  want to change are selected, and then press
	  <keycap>Ctrl</keycap> plus the number key for the note you
	  want.  You can also add or remove dots, by pressing
	  <keycombo><keycap>Ctrl</keycap><keycap>.</keycap></keycombo>&mdash; use this repeatedly to
	  cycle between one dot, two dots and no dots.</para>

	  <para>If you also hold <keycap>Alt</keycap> as well as
	  <keycap>Ctrl</keycap>, you will change the durations of the
	  notes as displayed in the notation editor without changing
	  their performed durations.  This can be very useful for
	  tidying up a score: see also <link
	  linkend="nv-quantization">notation from performance
	  data</link>.
	  </para>
	</sect3>

	<sect3>
	  <title>その他の注意点</title>

	  <para>全ての挿入コマンドは、<guimenu lang="en">ツール</guimenu>
		メニューのサブメニューで有効である。1つの音符を挿入するためにメニューを
		操作することは、ありそうもないことであるが、メニューはショートカットを表示し、
              それゆえ、どのキーがどの機能か忘れた場合に有効なリファレンスを提供する。</para>

	  <para>
            キーボードショートカットはQWERTYレイアウトキーボード用に
            現在デザインされている。その他のレイアウトにキーをリマップ
            する方法はまだなく、設定メニュー上の"ショートカットの構成"
            オプションを使うことによって各々のキーの再定義を個別に行なう??。
	There is not yet any way to remap the keys for another layout, short
	  of reassigning each key individually using <menuchoice><guimenu
	  lang="en">設定</guimenu><guimenuitem>ショートカットの設定</guimenuitem>
	</menuchoice>. </para>

	  <para>Holding the <keycap>Ctrl</keycap> key while pressing a
	    number will select the corresponding dotted-note
	    tool.</para>

	</sect3>

      </sect2>

      <sect2 id="nv-insertion-midi">
	  <title>&MIDI;キーボードを使った音符の挿入</title>

	  <para>
            &MIDI;キーボード又はその他の&MIDI;制御デバイス&mdash;を使うことで
            マトリクスエディタ中に音符を入力することができる。
		これは"ステップ録音"として知られている。譜面エディタはキーボード上で
		演奏したピッチを使うが、デュレーションはエディタそれ自身でのグリッドの
		設定中で選択したものを使う。
	  </para>

	<para>
            &MIDI;キーボードからノートを入力するために、最初に既定値の
            &MIDI;デバイスにキーボードを構成することを確実にする必要が
            ある。次に、音符ツールがデュレーションをセットするために選択
            されることを確実にする。次に、Then press the
	  <inlinemediaobject><imageobject><imagedata fileref="rg-steprecord.png"
	  format="PNG" /></imageobject></inlinemediaobject>譜面エディタのツールバー
            上のステップ録音ボタンか<menuchoice><guimenu
	  lang="en">Tools</guimenu><guimenuitem>ステップ録音</guimenuitem>
		</menuchoice>を選択する。
		&MIDI;キーボード上で押されたすべてのノート上のその点
            は、ウィンドウがクローズするか、別のウィンドウが有効になるか、再度ステップ録音が
		offにされるまでそのウィンドウ中に現在の挿入時間で挿入される。
	</para>

	<para>
            異なったデュレーションの音符を挿入するために、ステップ録音実行
            中の間別の音符ツールに変更することができ、また、コード
            を挿入するために、<link
	  linkend="chord-insert">コードモード</link><keycap>H</keycap>で切り替えることができる。
	</para>
      </sect2>
      
    </sect1>

    <!-- Keys, Clefs and Time Signatures -->

    <sect1 id="nv-signatures">
      <title>音部記号とキー</title>

<!-- !!! rework -->      
      <para>The first thing to know about the way &rosegarden;の操作について最初に知ることは、 
	時間に関連した変更(テンポとタイムシグネチャ)が音部記号とキーから全体にわたって
	異なるように扱われるということである。音符と同じように録音と再生の操作を簡単化する
	ために、&rosegarden; はテンポかタイムシグネチャが変更したとき、全ての五線中について
	それを行うことを要求する。１つの五線譜が2/4で、もう1つが同時に6/8か、1つの五線譜が
	ビート120で、他が90であるようなことはできない。これは時間にのみ適用される。
	音部記号とキーについてはこのような制限はない。
	 <link linkend="tempo">Tempo in Rosegarden</link>も参照のこと。</para>

      <para>音部記号、キー、テンポまたはタイムシグネチャを譜面エディタ内で変更したい場合、
	変更したい場所に <link linkend="nv-rulers">挿入カーソル</link>を位置づけ、編集メニュー
	<menuchoice><guimenu
      lang="en">セグメント</guimenu><guimenuitem>音部記号の追加.</guimenuitem>
	</menuchoice>、<guimenuitem>キーチェンジの追加.</guimenuitem>、
	<guimenuitem>Add Tempo Change...</guimenuitem>か
	<guimenuitem>Add Time Signature Change...</guimenuitem>を使う。
	すると以下のように、変更したい固有の音部記号、キー、テンポまたはタイムシグネチャを
	変更できる所にダイアログボックスが表示される。</para>

      <sect2 id="nv-signatures-clef">
	<title>音部記号</title>
	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-clefdialog.png" format="PNG" />
	</imageobject>
	  <textobject>
	    <phrase>&rosegarden;の音部記号ダイアログ</phrase>
	  </textobject>
	</mediaobject>
	</screenshot>
	</para>

	<para>The dialog allows you to choose a clef, but also
	  to choose how you want the clef to be applied, in
	  cases where there are already some notes following
	  the point where the clef is to be inserted.  You
	  must choose one of the following:

	  <variablelist>

	    <varlistentry>
	      <term>Maintain current pitches</term>
	      <listitem>
		<para>
		  Any notes following the clef will keep their current performance
		  pitches.
		</para>
		<para>
		  For example, inserting a tenor clef in the middle of a previously
		  treble-clef section will cause the notes following the clef to be moved
		  an octave higher up the staff, because they will still have their
		  treble-clef pitches.
		</para>
	      </listitem>
	    </varlistentry>
	    
	    <varlistentry>
	      <term>Transpose into appropriate octave</term>
	      <listitem>
		<para>
		  Any notes following the clef will retain their pitch within the octave,
		  but may be moved into a different octave to match the new clef, and
		  therefore will play at a new pitch.
		</para>
		<para>
		  For example, inserting a tenor clef in the middle of a previously
		  treble-clef section will cause the notes following the clef to move by
		  one staff line only to adjust to the new clef, but to play an octave
		  lower than before.
		</para>
	      </listitem>
	    </varlistentry>
	    
	  </variablelist>
	  
	</para>
      </sect2>
      
      <sect2 id="nv-signatures-key">
	<title>キー</title>
	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-keysigdialog.png" format="PNG" />
	</imageobject>
	  <textobject>
	    <phrase>&rosegarden;'s key signature dialog</phrase>
	  </textobject>
	</mediaobject>
	</screenshot>
	</para>
	<para>The dialog allows you to choose a key signature, but also
	  to choose how you want the key signature to be applied.  You
	  must choose among the following:
	</para>

	  <variablelist>

	    <varlistentry>
	      <term>Key signature</term>
	      <listitem>
		<para>
		  Used to dial up the actual key signature.  The dialog will
		  attempt to analyze the tonality of the piece, and guess at
		  the key signature if no key is already in effect at that
		  point in the notation.
		</para>
	      </listitem>
	    </varlistentry>
	    
	    <varlistentry>
	      <term>Key transposition</term>
	      <listitem>
		<para>You must choose whether to transpose the key according
		    to segment transposition, or to use the key exactly as
		    specified.
		</para>
		<para>
		  For example, if you are inserting a key of Bb major into a
		  transposed Bb trumpet part that's sounding at a
		  transposition of -2, you use this option to tell
		  &rosegarden; whether the key of Bb you have entered should
		  be written as a Bb (concert Ab), or should be transposed
		  against the segment to result in the trumpet key of C major
		  (concert Bb).
		</para>
	      </listitem>
            </varlistentry>

	    <varlistentry>
		<term>Scope</term>
		<listitem>
		    <para>
			You must choose whether to apply this key signature to
			the current segment only, or to all segments, on all
			tracks, at this time.
		    </para>
		    <para>
			If you elect to apply the change to all segments at
			this time, the previous key transposition choice will
			govern whether all segments receive the specified key,
			or a key appropriately transposed segment by segment.
			This is a convenient way to deal with notation for
			transposing instruments, because it frees you to think
			of all keys in concert pitch, and allow &rosegarden;
			to work out what key is used for what transposition.
		    </para>
		</listitem>
	    </varlistentry>

	    <varlistentry>
		<term>Existing notes following key change</term>
		<listitem>
		    <para>
			You must choose whether any existing notes following this key
			change will maintain their current pitches, maintain their current
			accidentals in the key, or whether &rosegarden; should make an
			attempt to transpose the part into the new key.
		    </para>
		</listitem>
	    </varlistentry>
	    
	  </variablelist>
      </sect2>
      
    </sect1>

    <!-- Text -->

    <sect1 id="nv-text">
      <title>テキスト、歌詞とLilyPondディレクティブ</title>
      
      <para>テキストイベント中で、五線はたくさんの種類のテキストを含む
        ことが可能である。テキストイベントには３つの基本的なクラスがある:
	注記等を指し示す1つのテキストアイテムと歌詞、さらにLilyPondエクスポート
	の微調整のために特に使われる3番目のタイプである。ユーザが編集可能なタイプは
	ツールバー中の
      <inlinemediaobject><imageobject><imagedata fileref="rg-text-cursor.png" format="PNG"
      /></imageobject></inlinemediaobject>ボタン上で有効なテキストツールを使うことで
	(五線の特定の時間に関連付けられる)作成できる。
        歌詞は、これと同じ方法で作成できるが、
        <link linkend="nv-text-lyrics">歌詞エディタ</link>
        を使うことによってより簡単に作成できる。</para>

      <para>小さなテキストを追加するために、追加したい点でテキストツールを
         選択してクリックする。
	If you want the text associated with a particular note or rest, it
      may be helpful to click the <guiicon>T</guiicon> cursor directly on that note, so as to
      ensure proper placement in time. ダイアログボックスが表示され、その中に
         テキストを入力することができ、 A dialog box will appear, into which you can type
      the text and choose its intended purpose from the drop down
      <guilabel>Style</guilabel> box.  &rosegarden; prefers to store what the text is
      for, rather than how it should look; this is so that in future we may be able to
      configure how the various sorts of text are presented.

	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-textdialog.png" format="PNG" />
	</imageobject>
	  <textobject>
	    <phrase>&rosegarden;のテキストダイアログ</phrase>
	  </textobject>
	</mediaobject>
	</screenshot>
	
	有効なpurposes(又はスタイル)は以下の通りである:</para>

    <variablelist>

	<!-- NOTE: I have removed the <quote>by default</quote>in the following
	descriptions.  There is no <quote>by default</quote>to this.  It does
	what it does, and there is no changing it without editing
	source code. (dmm) -->

	<varlistentry><term>Dynamic</term><listitem><para> Used for
	      minor local indications such as the dynamic marks <quote>p</quote>, <quote>mf</quote>
	      etc. Shown below the staff in small italic
	      type.  </para></listitem></varlistentry>

	<varlistentry><term>Direction</term><listitem><para> Used
	      when indicating significant changes in style or mood.  Shown
	      above the staff in large roman type.
	    </para></listitem></varlistentry>

	<varlistentry><term>Local Direction</term><listitem><para>
	      Used to indicate less significant changes in style or mood.
	      Shown below the staff in a smaller bold-italic roman
	      type. </para></listitem></varlistentry>

	<varlistentry><term>Tempo</term><listitem><para> Used to
	      indicate significant changes in tempo.  Shown above the
	      staff in large bold roman type.
	    </para></listitem></varlistentry>

	<varlistentry><term>Local Tempo</term><listitem><para> Used
	      to indicate more minor or local changes in tempo.  Shown
	      above the staff in a small bold roman type.
        </para></listitem></varlistentry>

	<varlistentry id="chord-text"><term>Chord</term><listitem><para> Used to indicate
	chord changes for guitarists, etc.  Shown above the staff in a small bold roman
	type. You can also create chord shapes, see <link linkend="lead-sheets">Lead Sheets.</link>
	</para></listitem></varlistentry>

	<varlistentry><term>歌詞</term><listitem><para>
	<link linkend="nv-text-lyrics">歌詞エディタ</link>
          を使うことで通常歌詞は作成できるが、このスタイルを使うことで
          1語1語入力することもできる。このスタイルは既定値では
          小さなroman type でテキストの下に表示される。
	      <important><para>注意:もしもこの方法で歌詞を入力し、五線譜の歌詞を
           あとで編集する場合、この方法で入力した任意の歌詞は、その位置が、もしも、
	歌詞エディタによって期待される所と適合していなければ、変更又は移動される。
	</para></important>  </para></listitem></varlistentry>

	<varlistentry><term>Annotation</term><listitem><para> Used
	      for helpful text that is not strictly considered part of the
	      score.  Shown below the staff, boxed-out in a yellow
	      sticky-label-style box.  These may not be visible
	      initially, and can be turned on via
	      <menuchoice><guimenu lang="en">Settings</guimenu>
	      <guimenuitem>Show Annotations</guimenuitem></menuchoice>
	    </para></listitem></varlistentry>

	<varlistentry><term>LilyPond Directive</term><listitem><para> Used
	      as the mechanism for exporting special tags that are
	      only understood by the LilyPond exporter.  These
	      provide a means to extend &rosegarden;'s capabilities
	      beyond what it can do within its own native interface.
	      Shown above the staff, in a green box.  These may not be visible
	      initially, and can be turned on via <menuchoice><guimenu lang="en">Settings</guimenu>
	      <guimenuitem>Show LilyPond Directives</guimenuitem></menuchoice>
	    </para></listitem></varlistentry>
	</variablelist>

      <para>For many of the styles, a new combo box will appear that allows
	  you to select from a variety of commonly-used texts appropriate for
	  that style, such as <quote>Allegro</quote> and <quote>ritardando</quote>. Selecting one of
	  these texts saves typing, but in no way impedes your ability to type
	  your own text by hand, should you so desire.
      </para>

      <para>テキストツールで存在するテキスト上でクリックすることで、
         作成した後にテキストを編集することもできる。</para>
      
      <sect2 id="nv-text-lyrics">
	<title>歌詞の編集</title>
	
	<para>歌詞エディタは
	  <menuchoice>
	    <guimenu lang="en">表示</guimenu>
            <guimenuitem>歌詞エディタをオープン</guimenuitem>
          </menuchoice>で有効で、これは、一度に1つのstaffの
          ためにすべての歌詞イベントを編集することができるようになり、
          これは基本の本文編集システムを使う。これを使うために、メニュー
          オプションを有効にし、残りのダイアログ中で歌詞を編集し、
          <guibutton>OK</guibutton>をクリックする。</para>

	<para>The lyrics you enter should follow a particular
	  format.  Bar lines are vital to avoid the editor getting
	  confused, and are represented with a slash <quote>/</quote>.  Within
	  each bar the individual syllables are separated by at least one space (the editor doesn't care about any extra
	  whitespace). Each syllable in turn will be attached to the
	  next subsequent note or chord within that bar. <note><para>although at
	  the moment the editor can get quite confused by chords that
	  are not exact, i.e. that require smoothing or
	  quantizing</para></note>.</para>

	<para>If you want a note to have no syllable attached to it,
	  you need to provide a dot <quote>.</quote> as the syllable for that
	  note.  <footnote><para>This is why the default lyric text for a segment is
	  usually full of dots.</para></footnote>  Remember to separate the dots with
	  spaces, so that they are clearly separate syllables.</para>
	
	<para>If you want more than one syllable on the same note,
	  with a space between them, use a tilde <quote>~</quote> instead of the
	  space.  It will be shown as a space on the score.</para>

	<para>If you want to split a syllable across two notes, with
	  a hyphen, you need to enter a space following the hyphen so
	  the editor knows to treat it as two syllables.  Hyphens get
	  no special treatment within syllables.</para>

	<para>Syllables consisting only of numbers surrounded by
	  square brackets like <quote>[29]</quote> will be ignored; this is the
	  format used for the automatically-generated bar numbers
	  shown in the editor.</para>

	<para>You should also be aware that the textual format of lyrics is only used for
	editing: the lyrics are actually stored as distinct text events (one per
	syllable).  This means that the text format may potentially change in the future
	to accommodate more advanced editing capabilities, although the event format
	should not change and so your saved files should continue to be compatible.</para>

	<para>&rosegarden; supports also multiple lines of lyrics.  You may always attach
	one more verse into a single staff by clicking <guibutton>Add Verse</guibutton> in
	the lyrics editor.  All the verses are entered with the same syntax.  If you leave
	the last verse without syllables, or make it empty, it is removed from the list of
	verses next time you open the lyrics editor.
	  </para>
           </sect2>
 <sect2 id="lead-sheets"> 
 <!-- seems sensible to put it here. Any thoughts? SOM -->
 <title>Lead Sheets</title>
 <para> 
   Lead sheets are simple music sheets with a single staff for melody, often with lyrics,
   and with chord names over the staff. You can have the Ignatzek jazz style
   of chords that LilyPond uses or the simple text chord names that are native to &rosegarden;.
 </para>
 <para>
   Choose <menuchoice><shortcut><keycap>F8</keycap></shortcut><guimenu
   lang="en">Tools</guimenu><guimenuitem>Text</guimenuitem></menuchoice>. The cursor
   changes to a cross icon and any note that you select causes the <guibutton>insert text dialog</guibutton> to
   automatically appear. Make sure that the <guibutton>Chord</guibutton> is selected and
   enter the chord name that you want in the text box.
 </para>
 <para> If you wish to use the LilyPond style chord names you need to use a special
 syntax. First the name of the chord (for example <userinput>c</userinput>) followed by it's
 pitch-change (for example <userinput>cis</userinput>, meaning
 <userinput>is</userinput> = sharp).

<note><para>LilyPond uses the Dutch notation for sharps and flats by default, and thus, so does the
&rosegarden; exporter. <userinput>is</userinput> sharpens a note and
<userinput>es</userinput> flattens a note. Write them twice to give you a double sharp
or double flat. </para></note>  This might be enough for your needs but if you want modifiers such as
<userinput>m</userinput> (minor), <userinput>dim</userinput>,
<userinput>sus</userinput>, or <userinput>aug</userinput> you need
to insert a <userinput>:</userinput> followed by your modifier (for example;
<userinput>g:m7</userinput> or <userinput>gis:sus4</userinput>). For a fuller description of the syntax go to <ulink
url="http://www.rosegardenmusic.com/tutorials/supplemental/chordnames/index.html">this
explanation.</ulink> 
 </para>
<para>There is one final step to do. Before you print or preview the LilyPond export
<menuchoice><guimenu lang="en">File</guimenu><guisubmenu>Print with
LilyPond</guisubmenu></menuchoice> or <guimenuitem>Preview with LilyPond</guimenuitem>, a
<link linkend="lilypond-options">dialog</link> will appear that allows you to change some
options. Go to the <guimenuitem>Advanced options</guimenuitem> and tick
<guilabel>Interprete chord texts as lead sheets chord names</guilabel>. Then you can print
or preview the glory that is LilyPond chord names.</para>
 </sect2>
      <sect2 id="nv-lilypond-directives">
	  <!-- text has a link here because the reading chain is:
	  intro -> lilypond directives, which puts you at a point well away
	  from any explanation of the whole text dialog and whatnot -->
	  <title>Using LilyPond directives</title>
	  <para>LilyPond directives are a special kind of <link
	  linkend="nv-text">text</link> that you can use to export .ly files that take
	  advantage of functionality not yet available directly through &rosegarden;'s own
	  native interface.
	  </para>
	  <para>Some of these are a bit fiddly with respect to how their
	      placement in time affects their function.  It is not always
	      immediately apparent at a glance just where they are, or what notes
	      or barlines they will affect, so I have made placement suggestions
	      to help ease the process of getting them in the right spot.
	  </para>
	  <para>
	  	These directives are:
	  </para>

	  <variablelist>
	      <varlistentry>
		  <term>Segno</term><listitem><para>used to export a 
		    <inlinemediaobject><imageobject><imagedata fileref="rg-segno.png" 
		    format="PNG" /></imageobject></inlinemediaobject>
		  </para></listitem>
	      </varlistentry>

	      <varlistentry>
		  <term>Coda</term><listitem><para>used to export a
		    <inlinemediaobject><imageobject><imagedata fileref="rg-coda.png"
		    format="PNG" /></imageobject></inlinemediaobject>
		  </para></listitem>
	       </varlistentry>

	      <varlistentry>
		  <term>Alt1</term><listitem><para>Placed anywhere in a measure,
		  designates that the measure(s) that follow this one should be exported
		  as the first alternate ending (see file lilypond-alternative-endings.rg
		  for example) </para></listitem>
	      </varlistentry>

	      <varlistentry>
		  <term>Alt2</term><listitem><para>Placed anywhere in a
			  measure, designates that the measure(s)
			  that follow this one should be exported as the
			  second alternate ending (see file 
			  lilypond-alternative-endings.rg for example)
		   </para></listitem>
	       </varlistentry>

	      <varlistentry>
		  <term>|| -></term><listitem><para>Placed anywhere in a
			  measure, designates that the next calculated barline will be
			  rendered as a double barline (see file
			  lilypond-directives.rg for example)
		   </para></listitem>
	       </varlistentry>

	      <varlistentry>
		  <term>|. -></term><listitem><para>Placed anywhere in a
			  measure, designates that the next calculated barline will be
			  rendered as a terminating barline (see file
			  lilypond-directives.rg for example)
		   </para></listitem>
	      </varlistentry>

	      <varlistentry>
		  <term>: -></term><listitem><para>Placed anywhere in a
			  measure, designates that the next calculated barline will be
			  rendered as a dashed barline (see file
			  lilypond-directives.rg for example)
		   </para></listitem>
	       </varlistentry>

	      <varlistentry>
		  <term>Gliss.</term><listitem><para>Placed by clicking
			  directly on a notehead, draws a glissando between
			  the target note and the note immediately following (see file
			  lilypond-directives.rg for example)
		   </para></listitem>
	       </varlistentry>

	      <varlistentry>
		  <term>Arp.</term><listitem><para>Placed by clicking
			  directly on a chord, draws a wavy line arpeggio
			  symbol immediately to the left of the affected chord (see file
			  lilypond-directives.rg for example)
		   </para></listitem>
	       </varlistentry>

	      <varlistentry>
		  <term>Tiny ->.</term><listitem><para>Placed anywhere,
			  designates that notation immediately following this
			  directive should be rendered at the <quote>tiny</quote> size (see file
			  lilypond-directives.rg for example)
		   </para></listitem>
	       </varlistentry>

	      <varlistentry>
		  <term>Small ->.</term><listitem><para>Placed anywhere,
			  designates that notation immediately following this
			  directive should be rendered at the <quote>small</quote> size (see file
			  lilypond-directives.rg for example)
		   </para></listitem>
	       </varlistentry>

	      <varlistentry>
		  <term>Norm. ->.</term><listitem><para>Placed anywhere,
			  designates that notation immediately following this
			  directive should be rendered at the normal size;
			  usually used to cancel a Tiny -> or Small ->. (see file
			  lilypond-directives.rg for example)
		   </para></listitem>
	       </varlistentry>
	   </variablelist>
      </sect2>
    </sect1>

    <!-- Indications -->

    <sect1 id="nv-guitarchords">
      <title>Guitar Chords</title>

      <para>
      	You can add guitar chord diagrams to a notation track (or edit previously added
      	ones). You can do this by toggling the <inlinemediaobject><imageobject><imagedata
      	fileref="rg-guitarchord.png" format="PNG" /></imageobject></inlinemediaobject>
      	<guibutton>guitar chord</guibutton> button, and then clicking on a note or
      	barline.  This will open the guitar chord dialog. With it you can select which
      	guitar chord diagram you want to add from a chord dictionary which comprises most
      	of the common chord fingerings by specifying a chord's root and its extension. For
      	convenience, the fingerings are sorted in three different categories :
      	<guibutton>beginner</guibutton>, <guibutton>common</guibutton>, and
      	<guibutton>all</guibutton>.  These categories are actually based on the chord
      	extension (A7 is a beginner chord, while A13 isn't), not on the fingering itself,
      	so you can still see <quote>advanced</quote> chord fingerings listed, even in
      	beginner mode.
      </para>


      <para>
      	<screenshot>
      		<mediaobject>
      			<imageobject>
      				<imagedata fileref="rg-guitarchorddialog.png"
      					format="PNG" />
      			</imageobject>
      			<textobject>
      				<phrase>&rosegarden;'s chord selector dialog
      				</phrase>
      			</textobject>
      		</mediaobject>
      	</screenshot>
      </para>

      <para>
      	You may add your own fingerings if needed. To do this, click on the
      	<guibutton>New</guibutton> button. This will pop up a chord editor, where you can
      	<quote>draw</quote> which fingering you want to add, and specify its root, chord
      	extension, and starting fret number.
      	<screenshot>
      		<mediaobject>
      			<imageobject>
      				<imagedata
      					fileref="rg-guitarchordeditordialog.png" format="PNG" />
      			</imageobject>
      			<textobject>
      				<phrase>&rosegarden;'s chord editor dialog
      				</phrase>
      			</textobject>
      		</mediaobject>
      	</screenshot>

      	Note that while you can choose the extension from a list of predefined values, you
      	can also type whatever value you want.  However, in that case, the new fingering
      	will only be available in the <quote>all</quote> list. You can only delete and
      	edit your own chords. Those from the predefined dictionary cannot be changed. If
      	you spot a mistake in one of them, please report it to the development team.
      </para>

    </sect1>

    <!-- Indications -->

    <sect1 id="nv-indication">
      <title>スラーとhairpins</title>

      <para>スラーとhairpin (クレッシェンド/デクレッシェンド) dynamic markingsは、イベントとして
	音符や休符と同じように保存される。これらを生成するために、カバーしたい範囲（一続きの
	音符かその他)を選択し、次に、
      <menuchoice><shortcut><keycap>)</keycap></shortcut><guimenu
      lang="en">フレーズ</guimenu><guimenuitem>スラーの追加</guimenuitem></menuchoice>、
      <menuchoice><shortcut><keycap>Ctrl</keycap><keycap>)</keycap>
	</shortcut><guimenu lang="en">フレーズ</guimenu>
	<guimenuitem>フレージングスラーの追加</guimenuitem></menuchoice>、
      <menuchoice><shortcut><keycap>&lt;</keycap></shortcut><guimenu
      lang="en">フレーズ</guimenu>
	<guimenuitem>クレッシェンドの追加</guimenuitem></menuchoice>か
      <menuchoice><shortcut><keycap>&gt;</keycap></shortcut>
	<guimenu lang="en">
	フレーズ</guimenu><guimenuitem>デクレッシェンドの追加</guimenuitem>
	</menuchoice>オプションを選択する。.</para>

     <para>Placement of hairpins can be somewhat tricky, and this is
	 especially so with haripins that run in line with dynamic markings.
	 It is commonly the case that a hairpin that doesn't quite look right
	 in &rosegarden;'s own notation editor will nevertheless come out just
	 fine once exported to LilyPond.  &rosegarden;'s slurs generally come
	 out best when all the stems are running in the same direction, and
	 occasionally need to be <link
	     linkend="nv-microposition">repositioned</link> by hand to achieve
	 better placement.  Slurs also tend to fare slightly better once
	 exported to LilyPond.
     </para>

      <para>その他のイベントと同じように、スラー又はhairpin を取り除く
        ことができる。選択ツールを使って選択し、<keycap>F2</keycap>を押し、次に
	<keycap>Delete</keycap>キーを押すか、<keycap>F4</keycap>
	で削除ツールを有効にして、それをクリックする。</para>

    </sect1>

    <!-- Stem direction, slashes etc -->

    <sect1 id="nv-note-qualities">
      <title>Note stems and slashes</title>

      <para>You can set the stem direction of any selected notes (provided they are a sort
      that have stems) using the three stem direction options on the <guimenu
      lang="en">Notes</guimenu> menu.  The options allow you to either fix the stems up
      <keycombo><keycap>Ctrl</keycap><keycap>Page Up</keycap></keycombo> or down
      <keycombo><keycap>Ctrl</keycap><keycap>Page Down</keycap></keycombo> , or revert to
      the stem direction that &rosegarden; would otherwise have chosen.  See also <link
      linkend="nv-beamed-groups">Beams</link>.</para>

      <para>The <menuchoice><guimenu lang="en">Note</guimenu><guisubmenu>Marks</guisubmenu></menuchoice>
      menu also contains a selection of options for adding marks to annotate notes, such as slashes
	across note stems, for example to indicate short repeated
	notes or drum rolls.  These are currently purely notational;
	&rosegarden; will not take them into account when playing the
	staff or generating &MIDI;.</para>
    </sect1>
    
    <!-- Beamed groups, including overlapping and nesting them -->

    <sect1 id="nv-beamed-groups">
      <title>Beams</title>
      
      <para>Adding beams to notes is considered a grouping operation in the &rosegarden;
      notation editor.  Select the notes you want to beam, and use
      the <menuchoice><shortcut><keycombo><keycap>Ctrl</keycap><keycap>B</keycap></keycombo>
      </shortcut><guimenu
      lang="en">Phrase</guimenu><guimenuitem>Beam Group</guimenuitem></menuchoice> menu
      option.  To remove a beam, select the notes and use
      <menuchoice><shortcut><keycombo><keycap>Ctrl</keycap><keycap>U</keycap></keycombo>
      </shortcut><guimenu
      lang="en">Phrase</guimenu><guimenuitem>Unbeam</guimenuitem></menuchoice>.</para>

      <para>It is possible to have more than one beamed group
	happening at the same time &mdash; you just select and beam the
	separate groups one at a time &mdash; but &rosegarden; is usually not
	clever enough to work out which notes should have stems up
	and which should have stems down for simultaneous beamed
	groups, so you will probably have to set the <link linkend="nv-note-qualities">stem directions</link> 
	of the notes in the groups explicitly as well as beaming them.</para>

      <para>&rosegarden; can attempt to guess a sensible beaming for a piece of music,
      provided it's not too complicated.  To invoke this, select the notes you want to
      calculate the beaming for (for example by triple-clicking to select a whole staff)
      and then use <menuchoice><guimenu
      lang="en">Phrase</guimenu><guimenuitem>Auto-Beam</guimenuitem></menuchoice>.
      Auto-beaming is also done automatically when loading a &MIDI; file, for example, and
      the editor also does some automatic beaming as you enter notes.</para> <note><para>This can be disabled
      by changing the <guilabel>Auto-Beam on insert when appropriate</guilabel> setting on
      the <menuchoice><guimenu lang="en">Settings</guimenu><guisubmenu>Configure
      &rosegarden;...</guisubmenu></menuchoice> configuration dialog on the
      <guilabel>Edit</guilabel> tab or the insertion tool's
      <mousebutton>right</mousebutton>-mouse menu.</para></note>

    </sect1>

    <!-- Tuplets -->

    <sect1 id="nv-tuplets">
      <title>三連符とその他の連符</title>

      <para>A triplet group consists of three notes or chords played
	in the time of two.  (More precisely, it consists of notes
	with a total duration of three arbitrary units played in the
	time of two of those units.)</para>

      <para>We use the word <quote>tuplet</quote> to describe the general
	situation in which notes with a total duration of any given
	number of units are played in the time of a different number
	of those units: nine notes in the time of eight, or six in the
	time of four, or a crotchet and a quaver in the time of a
	single crotchet, or even two notes in the time of three.  (At
	present &rosegarden; does not support the last example &mdash; tuplet
	groups must always be played with a shorter duration than
	written.)</para>

	<para>You can make a triplet by first selecting the notes and going to
	<menuchoice><shortcut><keycombo><keycap>Ctrl</keycap><keycap>R</keycap></keycombo>
	</shortcut><guimenu
	lang="en">Phrase</guimenu><guimenuitem>Triplet</guimenuitem></menuchoice>. To make
	a tuplet, select the notes and go to
	<menuchoice><shortcut><keycombo><keycap>Ctrl</keycap><keycap>T</keycap></keycombo>
	</shortcut><guimenu
	lang="en">Phrase</guimenu><guisubmenu>Tuplet</guisubmenu></menuchoice>to get to the tuplet dialog.
	The triplet and tuplet menu work by taking an existing series of notes or rests and squashing them
	so they play quicker, filling in the left-over space at the end of the series with
	a final rest and drawing the whole as a tuplet group.  You can therefore create a
	new series of triplets by entering the first two notes of the series (in their
	normal form), making them into triplets, and then filling in the rest left over by
	the triplet operation with the final note of the triplet.  Or you can apply the
	triplet operation before you enter any notes, thus turning the original rest
	itself into triplet form, and then insert the notes of the triplet on top of it.
	Some examples may help:</para>

      <!-- Need examples and screenshots -->
      
      <!-- Then discuss general tuplet dialog...-->

      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-tupletdialog.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s general tuplet dialog</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

      <para>To specify a general tuplet group, we need to know what
	the base note is (for example, if we play three crotchets in
	the time of two then the base is a crotchet) and the ratio of
	the number of base notes written to the number played.</para>

      <!-- Then discuss "tuplet mode": with a subtitle? -->

    </sect1>

    <!-- Grace notes -->

    <!-- Paste -->

    <sect1 id="nv-paste-types">
      <title>Paste types</title>

      <para>
	The meaning of <quote>cut and paste</quote> is less obvious for a music editing
	program than it is for something like a word processor in which the letters and
	words go in a simple linear order.  Accordingly, &rosegarden;'s notation editor
	offers several different types of paste operation, as well as separate
	<menuchoice><shortcut><keycombo><keycap>Ctrl</keycap><keycap>X</keycap></keycombo>
	</shortcut><guimenu
	lang="en">Edit</guimenu><guimenuitem>Cut</guimenuitem></menuchoice> and
	<menuchoice><shortcut><keycombo><keycap>Ctrl</keycap><keycap>Shift</keycap><keycap>X</keycap></keycombo>
	</shortcut><guimenu
	lang="en">Edit</guimenu><guimenuitem>Cut and Copy</guimenuitem></menuchoice>
	functions. Cut and close means that when you <quote>cut</quote> a segment the
	space left by the segment disappears from the track by moving forward all the
	events later in the track.
      </para>

      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-pastedialog.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s paste-type dialog</phrase>
	</textobject>
      </mediaobject>
      </screenshot>

	The types of paste operation are:</para>

      <variablelist>

	<varlistentry>
	  <term>Restricted</term>
	  <listitem>
	    <para>Requires an existing gap (containing nothing but
	      rests) of enough duration to completely contain the
	      clipboard's contents.  The contents are pasted into
	      the gap.  If there is no gap long enough, the paste
	      is not carried out.
	    </para>
	    <para>
	      This is the default paste type. The shortcut for this operation is
	      <keycombo><keycap>Ctrl</keycap><keycap>V</keycap></keycombo> .
	    </para>
	  </listitem>
	</varlistentry>

	    <varlistentry>
	  <term>Simple</term>
	  <listitem>
	    <para>Erases enough events to make a gap long enough to
	      paste into, and then pastes into that.  The pasted 
	      events therefore completely replace any existing ones 
	      in the time covered by the paste.
	    </para>
	  </listitem>
	    </varlistentry>

	<varlistentry>
	  <term>Open and Paste</term>
	  <listitem>
	    <para>The opposite of Cut and
		Close. Makes room for the paste by moving all of the
	      subsequent events further towards the end of the
	      composition.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>Note Overlay</term>
	  <listitem>
	    <para>Carries out a paste in the way that it would
	      happen if you entered each of the notes in the clipboard
	      yourself using the notation editor: if there are other
	      notes overlapping with them, the new or existing notes
	      will be split into ties appropriately.
	    </para>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>Matrix Overlay</term>
	  <listitem>
	    <para>Carries out a paste in the way that it would
	      happen if you entered each of the notes in the clipboard
	      yourself using the matrix editor: the notes presently
	      in the way of the paste will be ignored, allowing the new 
	      notes to overlap arbitrarily with them.
	    </para>
	  </listitem>
	</varlistentry>

      </variablelist>

      <para>All of these take effect at the current position of the 
	insert cursor on the current staff.   You can choose all the paste varieties <!-- clag, superglue, tarzan's grip -->
	 through
	 <menuchoice>
	   <shortcut>
	     <keycombo><keycap>Ctrl</keycap>
	     <keycap>Shift</keycap>
	     <keycap>V</keycap></keycombo>
	   </shortcut>
	   <guimenu lang="en">Edit</guimenu>
	   <guimenuitem>Paste...</guimenuitem>
	   </menuchoice>. You can also change the default paste type in this dialog.
	 
      </para>

    </sect1>

    <sect1 id="nv-adjustments">
      <title>Adjusting Notation</title>


      <sect2 id="nv-adjustments-note-rest-durations">
	<title>Adjusting note and rest durations</title>
	
	<sect3 id="nv-normalize-rests">
	  <title>Normalizing rests</title>

	  <para>Sometimes as a result of editing or quantization operations, a piece of
	  notation can end up with incorrect rest durations for the current time
	  signature.  You can use 
	  <menuchoice>
	    <shortcut>
	      <keycombo><keycap>Ctrl</keycap><keycap>N</keycap></keycombo>
	    </shortcut>
	    <guimenu lang="en">Adjust</guimenu>
	    <guisubmenu>Rests</guisubmenu>
	    <guimenuitem>Normalize Rests</guimenuitem>
	    </menuchoice> to fix these.  This examines each sequence of
	  consecutive rests found in the selection, and adjusts, splits and merges rests
	  as necessary to ensure that the rests have theoretically correct durations and
	  fall on the correct boundaries.
	  </para>
	  
	  <para>For example, a 4/4 bar containing a crotchet
	    (quarter-note), then a minim (half-note) rest and a
	    crotchet rest will be rearranged to place the crotchet
	    rest first, as the minim rest should not cross the
	    central beat boundary of the bar.
	  </para>
	</sect3>

	<sect3 id="nv-make-viable">
	  <title>Splitting very long notes</title> <para>The
	  <menuchoice> <guimenu lang="en">Adjust</guimenu>
	  <guimenuitem>Notes</guimenuitem> <guimenuitem>Tie Notes at
	  Barlines</guimenuitem> </menuchoice> is intended to deal
	  with notes that have excessively long durations, and
	  therefore overflow barlines or are too long to be
	  displayed as a single note.  It takes any such notes and
	  splits them into shorter, tied notes.
	  </para>
	</sect3>

	<sect3 id="nv-de-counterpoint">
	  <title>Splitting overlapping notes</title>
	  <para>
	    <menuchoice> <guimenu lang="en">Adjust</guimenu>
	  <guimenuitem>Notes</guimenuitem> <guimenuitem>Split-and-Tie Overlapping
	  Chords</guimenuitem> </menuchoice> can be used to turn <quote>counterpoint</quote> notes into
	  a series of split-and-tied notes and chords.</para>

	  <para>It can be applied to a selection that contains
	  overlapping notes.  It will split overlapping notes at the
	  point where they overlap, and tie together the resulting
	  split notes, ensuring that the music takes the form of a
	  series of chords and/or single notes starting and ending in
	  neat blocks, with some notes possibly tied.
	  </para>
	</sect3>

	<sect3 id="nv-rescale">
	  <title>Rescaling note durations</title>
	  <para>You can use 
	  <menuchoice><shortcut><keycombo><keycap>Ctrl</keycap><keycap>H</keycap></keycombo>
	  </shortcut> <guimenu lang="en">Adjust</guimenu>
	  <guimenuitem>Rescale</guimenuitem> <guimenuitem>Halve Durations</guimenuitem>
	  </menuchoice> and <menuchoice>
	  <shortcut><keycombo><keycap>Ctrl</keycap><keycap>Shift</keycap><keycap>H</keycap></keycombo>
	  </shortcut>
	  <guimenu lang="en">Adjust</guimenu>
	  <guimenuitem>Rescale</guimenuitem> <guimenuitem>Double
	  Durations</guimenuitem> </menuchoice> to perform the most simple rescaling.
	  </para>

	  <para>For more elaborate rescalings, use 
	  <menuchoice> <guimenu lang="en">Adjust</guimenu>
	  <guimenuitem>Rescale</guimenuitem> <guimenuitem>Stretch
	  or Squash...</guimenuitem> </menuchoice> with
	  which you scale the total length of the selection. <!-- Id like to see a more expansive explanation SOM -->
	  </para>
	</sect3>

<!-- need a proper section for this and diatonic transpose
	    <varlistentry id="nv-transpose">
	    <title>Transpose</title>
		<para><action>Alters the pitch of the selected
		    notes.</action> This submenu contains basic
		  transposition functions which move the selected notes
		  up or down a semitone or a whole octave in pitch, as
		  well as a general transpose function that allows you
		  to choose how far up or down you want to transpose the
		  selection.
		</para>
SOM - why has this section been commented out? It looks like it's obsolete? Can we get rid of it?
		<para>These functions simply change the stored pitches
		of the notes in the selection, so that they both play
		and appear at the new pitches.  They do not deal with
		performance transposition (displaying one pitch and
		playing another), for which see the main window's
		segment parameter box; nor do they help you with
		transposing from one key into another, for which see
		<link linkend="nv-signatures-key">Key
		Signatures</link>.
		</para>
	    </varlistentry>
-->
      </sect2>

      <sect2>
	  <title id="nv-microposition">Repositioning notation elements</title>
	  <para>
	      You may occasionally wish to to nudge the positioning of some element of
	      notation that &rosegarden;'s layout algorithm has not placed in an optimal
	      location.  Use <keycap>Ctrl</keycap>-click and drag or <keycap>Alt</keycap>
	      right or left arrow to move slurs, hairpins, text events, and several other
	      sorts of events.  You may not reposition notes in this fashion.
	  </para>
      </sect2>



    </sect1>

    <sect1 id="nv-interpret">
      <title>Interpreting Performance Cues in Notation</title>
      <!-- !!! -->
      <para>
	  You can use <menuchoice>
	      <guimenu lang="en">Adjust</guimenu><guisubmenu>Interpret...</guisubmenu>
	  </menuchoice>
	  to modify the velocities and timings of notes according to any
	  written or indicated dynamics found. The selection of
	  interpretations available is as follows:
	
	<variablelist>
	  <varlistentry>
	    <term>Apply text dynamics (p, mf, ff etc)
	    </term>
	    <listitem><para> Sets a velocity to each note based on the last piece of text
	    of <quote>Dynamic</quote> type seen on the same staff (only texts of the form
	    pp, p, mp, mf, f, ff, fff, etc., are matched; these are the texts that are
	    available by default when entering text events of this style).
	    </para></listitem>
	  </varlistentry>
	  
	  <varlistentry>
	    <term>Apply hairpin dynamics
	    </term>
	    <listitem><para> Makes the notes gradually
		increase or decrease in velocity during a
		crescendo or decrescendo hairpin.
	      </para></listitem>
	  </varlistentry>
	  
	  <varlistentry>
	    <term>
	      Stress beats
	    </term>
	    <listitem><para> Makes notes that land on bar or
		beat boundaries slightly louder (greater
		velocity) than the surrounding notes.
	      </para></listitem>
	  </varlistentry>
	  
	  <varlistentry>
	    <term>
	      Articulate slurs, staccato, tenuto etc
	    </term>
	    <listitem><para> Shortens unslurred notes,
		shortens staccato notes more, and gives notes
		inside slurs and tenuto notes their full length.
	      </para></listitem>
	  </varlistentry>
	</variablelist>
	
      </para>
      
    </sect1>

    <!-- Quantization, smoothing, and display of quantized notes -->

    <sect1 id="nv-quantization">
      <title>Notation from performance data</title>

	<para>
	  &rosegarden; は多用途のプログラムである。これは譜面
          エディタであるが、第一次的にはシーケンサと音楽を演奏する
          ためのプログラムである。さらに、演奏中、もちろん、時間と
          音符のデュレーションは印刷された楽譜上ほど明確ではない。
        </para>

        <para>
          これは、譜面エディタ中で意味のある音符を表示させるために
          大量の基本的な音符の時間とデュレーションを試みることを&rosegarden;
          が行なうためにそれはたびたび望ましいことを意味する。これは
          quantizationの一種であるが、大量の、驚くべき、あてずっぽうで
         うまく行なうことを要求する種類のものである。&rosegarden;は、
         平面のグリッドquantizerよりもわずかによい仕事を行なうために
         デザインされたquantizerを含む。</para>

      <para>Applying
	quantization strictly for notation is rather unimaginatively
	referred to as <quote>notation quantization</quote>: it only
	applies to the notes you see and edit in notation, and
	doesn't affect the notes that play, or that you edit in
	other views such as the matrix.  This quantization is
	automatically applied to music imported or recorded from
	&MIDI;, although not all of its possible capabilities are
	enabled by default.
      </para>

      <para>
	There are two ways to see which notes have been quantized for notation.  By
	default, each notation view contains a <link linkend="nv-raw-note-ruler">raw note
	ruler</link> (in the group of rulers above the score) showing a rectangular block
	for each note.  This block is positioned so as to represent the time and duration
	of the note as performed, but with the top and bottom edges of the rectangle
	extended or shortened to represent the time after notation quantization.  If this
	is too much information for you, you can choose in <menuchoice><guimenu
	lang="en">Settings</guimenu><guisubmenu>Configure
	&rosegarden;...</guisubmenu></menuchoice> and choose the
	<guilabel>Notation</guilabel><guilabel>Layout</guilabel> dialog to show in a
	green colour all note heads in the score that have had their timings altered by
	notation quantization.
      </para>

      <para>

	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-notationquantizer.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s notation quantize dialog</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
	</para><para>
	If the quantization &rosegarden; has used is not suitable,
	either for the entire score or for a selection of notes, you
	can choose to use a different level of quantization or none
	at all.  To apply a different quantization to some notes,
	select the notes and use the<guibutton>Q</guibutton> button and
	tick the box labelled <guilabel>Quantize for
	  notation only</guilabel> on that dialog.  The quantization level or type used
	by default can be changed in the configuration dialog as follows.
	      </para>

      <sect2 id="nv-quantization-parameters">
	<title>Configurable parameters for the heuristic notation quantizer</title>

	<sect3 id="nv-quantization-parameters-during">
	  <title>Parameters for quantization itself</title>
	  
	  <variablelist>

	    <varlistentry>
	      <term>Complexity</term>
	      <listitem>
		<para>The <quote>complexity</quote> of a notation quantizer is its
		  most fundamental parameter.  A <quote>complex</quote> quantizer
		  will be more prepared to accept that complex-looking
		  music is in fact intended to be complex, whereas a
		  <quote>simple</quote> quantizer is more likely to assume that
		  complex-looking music results from an imprecise
		  performance of simple music.
		</para>
		<para>The default setting is intended to produce
		  reasonable results for a fairly wide range of music.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Base grid unit</term>
	      <listitem>
		<para>The base grid unit (set to a note duration
		  value) specifies the absolute minimum unit of note
		  that will be permitted to remain in the score after
		  quantization.  For example, if set to a semiquaver,
		  all notes will be placed on boundaries of a multiple
		  of a semiquaver, with durations also a multiple of a
		  semiquaver.
		</para>
		<para>The setting of the base grid unit is not quite
		  as significant for a notation quantizer as it is for a
		  plain grid quantizer, because all it does is impose an
		  absolute limit on the level of precision permitted by
		  the complexity parameter.  Mostly, when you find a
		  case in which increasing the grid unit produces better
		  results, you've actually found a case in which the
		  quantizer simply didn't do as good a job as it should
		  have been able to with the smaller unit.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Tuplet level</term>
	      <listitem>
		<para>The notation quantizer is capable of identifying
		  tuplets (triplets and other time-squashed groups),
		  within reasonable limits.  This parameter controls how
		  ambitious it will attempt to be when looking for
		  tuplets, by setting a limit on how many notes per
		  tuplet group it will attempt to identify.  If it is
		  set to <quote>None</quote>, the quantizer will not
		  attempt to identify tuplets at all.
		</para>
	      </listitem>
	    </varlistentry>
	    <!-- allow counterpoint? SOM  -->
	  </variablelist>

	</sect3>

	<sect3 id="nv-quantization-parameters-after">
	  <title>Parameters that control tidying up after quantization</title>

	  <variablelist>

	    <varlistentry>
	      <term>Re-beam</term>
	      <listitem>
		<para>
		  Causes the notes to be re-beamed into groups
		  appropriately after quantization.  This is usually
		  desirable.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Add articulations (staccato, tenuto,
		slurs)</term>
	      <listitem>
		<para>
		  Causes the quantizer to attempt to identify, based
		  on the durations of individual and consecutive
		  notes, which notes should be notated with staccato
		  marks (for notes that fall significantly short of
		  the following note, but not apparently short
		  enough to merit a rest), tenuto (for notes that
		  almost or just overlap the following note) and
		  slurs (for series of notes that meet or overlap).
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Tie notes at barlines etc</term>
	      <listitem>
		<para>Causes any notes that are still found after quantization to overlap
		barlines or to have durations not exactly expressible with single note
		heads to be split into multiple notes appropriately, and tied.  This has
		the same effect as applying <link linkend="nv-make-viable">
		<guimenuitem>Tie Notes at Barlines</guimenuitem></link> in the notation
		view.
		</para>
		<para>
		  This parameter is not set by default because it changes the number of
		  note events, which is undesirable when using &rosegarden; partly or
		  principally as a &MIDI; sequencer.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>Split-and-tie overlapping chords</term>
	      <listitem>
		<para>
		  Causes overlapping notes to be split and tied, so
		  as to make strict chords with individual noteheads
		  tied as necessary.  This has the same effect as
		  applying <link linkend="nv-de-counterpoint"><guimenuitem>Split-and-Tie
		  Overlapping Chords</guimenuitem></link> in the notation view.
		</para>
		<para>
		  This parameter is not set by default partly because
		  it changes the number of note events, which is
		  undesirable when using &rosegarden; partly or
		  principally as a &MIDI; sequencer.
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</sect3>
      </sect2>
    </sect1>

    <sect1 id="nv-ornaments">

      <title>Playing ornaments</title>

      <para>&rosegarden; supports playback of ornaments using its <link
      linkend="triggered-segments">triggered segments</link>
      mechanism.  You can create triggered segments containing any of
      the various types of trill or ornament you might want, and
      associate them with the notes that want to play them.</para>
 
      <para>To create a new type of ornament, first write out the
      notes <quote>in longhand</quote> that you want the ornament to play, and then
      select the notes and use <menuchoice>
      <guimenu lang="en">Note</guimenu><guimenuitem>Ornaments</guimenuitem><guimenuitem>Make
      Ornament...</guimenuitem></menuchoice>.  This cuts the notes to
      the clipboard, pastes them into a new triggered segment, and
      replaces them with a single note of the same duration that
      triggers this segment.</para>
 
      <para>To make a note play an existing ornament, select it and
      use <menuchoice>
      <guimenu lang="en">Note</guimenu><guimenuitem>Ornaments</guimenuitem><guimenuitem>Trigger
      Ornament...</guimenuitem></menuchoice>.</para>

      <para>
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-useornament.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s Trigger Ornament dialog</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>

      <para>To edit the notes played in a triggered ornament, you can
      double-click on the note that triggers it.  This will
      change all uses of that ornament, not just the one that you
      double-clicked on.</para>

      <para>Note that while &rosegarden; can shift triggered segments up
      and down in pitch to match their triggering notes, it is not
      clever enough to perform transposition into a different
      key or scale position.</para>

      <para>See <link linkend="triggered-segments">triggered
      segments</link> for more details about ornaments and other uses
      of triggered segments.</para>
    </sect1>

    <sect1 id="nv-note-styles">
      <title>音符のスタイル</title>

      <para>
          &rosegarden;は、たとえば、符頭の選択、符尾の数を、音符が
          埋まっているか埋まっていないかにかかわらず、描画された音符の
          色々なタイプの色々な描画方法を変更することができる。
      </para>

      <para>
	標準のスタイル(クラシック、クロス、三角とMensual)が提供され、
	A set of standard styles (Classical, Cross, Triangle and Mensural) is provided,
	and you can change the style used for individual notes by selecting them and then
	using <menuchoice><guimenu lang="en">音符</guimenu>
	<guisubmenu>音符の表現形式</guisubmenu></menuchoice>を使って
	選択した個別の音符のためにスタイルを変更することができる。
	それぞれの音符はそれに対してどのスタイルが選択されたかを憶えていて、
	この情報は楽曲情報の中に格納される。
	<guimenu lang="en">設定</guimenu>中の<guimenuitem>Rosegardenの構成</guimenuitem>
	オプションを使うことによって、新しい音符の既定値のスタイルを変更することができる。
      </para>

      <para>
	<acronym>XML</acronym>ファイル中に音符のスタイルを記述する
          ことによって固有の音符スタイルを作成することもできる。(Even the
	standard styles are defined this way: the only reason the
	editor knows that a Classical semiquaver has a tilted oval
	filled head, a stem, two flags, etc., is that the description
	in Classical.xml says so.)  See <link
	linkend="developers-note-styles">Customising Rosegarden</link>
	for more information.
      </para>
    </sect1>

    <sect1 id="nv-note-fonts">
      <title>音符フォント</title>
	<para>
	  &rosegarden; は、Lilypondプロジェクトによって開発された、
          Fetaフォントという1つのスケーラブルな音符フォントを提供
          している。Fetaはほとんどすべての古典的な仕事のために適合して
          いるとても高品質のフォントである。
	</para>

	<para>&rosegarden; は、数多くの、その他の音符フォントを
        標準のサポートを含む。それらは、TrueType(.ttf)またはPostScript
        Type-1(.pfb,.pfa)形式のフォントで提供されることを必要とし、
        &rosegarden;がインストールされた場所にそれらをインストール
        するために、関連したパーミッションを必要とする。サポートされて
        いる音符フォントをインストールするために、&rosegarden;
        のインストールのためにshareディレクトリに位置づける(通常
        /opt/kde/share/apps/rosegardenのようなKDEデスクトップの
        インストールツリーである)。これは、<quote>fonts</quote>と呼ばれる
        サブディレクトリで見付かる。そこにフォントファイルをコピーし、
         &rosegarden;を再起動する。もしも、そのフォントがサポートされて
        いるならば、それは、notationエディタのフォントメニューに
        現われる</para>

      <para>完全又は部分的なサポートは以下のフォントで提供されて
        いる:Blake HodgettsによるFughetta; <quote>オリジナル</quote>Finale
        フォントのPetrucci;<quote>新しい</quote>Finale"フォントのMaestro;
        SibeliusフォントのOpus;Sibelius ジャズフォントのInkpen;
        AdobeからのSonata;CubaseシーケンサからのSteinberg;と
        Xinfonia(上記のフォントのほとんどは、各社の登録商標で
        ある)。 THE ROSEGARDEN TEAM
	MAKES NO REPRESENTATION AS TO THE LEGAL STATUS OF ANY USE OF
	THESE FONTS WITH ROSEGARDEN.  It is your responsibility to
	ensure you are in compliance with the licence (if any) under
	which a font was provided to you, before attempting to use it.
	If you are not sure whether you have the right to use a font,
	don't: apart from anything else, the standard Feta font is
	better than most of these anyway.</para>

      <para>It is also possible to provide new mapping files so as
	to use new fonts.  For some fonts that have similar mappings
	or metrics to fonts in the above list, this may be as simple
	as editing the name of the font in the mapping file.  See
	<link linkend="developers-note-fonts">Customising Rosegarden</link>
	for more information.

      </para>
  </sect1>
  </chapter>

  <chapter id="event-view">
    <title>The Event List Editor</title>
    <sect1 id="ev-introduction">
      <title>Introduction</title>

      <para> The &rosegarden; Event List editor shows the events in a single segment in a
      raw form, and enables you to edit the precise properties of those events
      individually. It can be accessed in the track editor or main window through
      <menuchoice><shortcut><keycap>E</keycap></shortcut><guimenu
      lang="en">Segments</guimenu><guisubmenu>Edit With</guisubmenu><guimenuitem>Open in
      Event List Editor</guimenuitem></menuchoice>.
	<screenshot>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="rg-eventlisteditor.png" format="PNG" />
      </imageobject>
	<textobject>
	  <phrase>&rosegarden;'s event list editor</phrase>
	</textobject>
      </mediaobject>
      </screenshot>
      </para>
   


      <sect2 id="ev-functions">
        <title>Things to do with the Event List Editor</title>
        <para>
  	There are a number of things that you can do in this editor, where you can fine
  	tune your midi tracks. There are three views of the event editor which can be
  	accessed using icons on the menu bar or by accessing
  	the <menuchoice><guimenu lang="en">View</guimenu></menuchoice> menu. They show the
  	times of each event. 
<variablelist>
<varlistentry>
  	<term>Metronome icon</term>
<listitem><para>
  	 <inlinemediaobject>
  	      <imageobject>
  		<imagedata fileref="time-musical.png" format="PNG" />
  		</imageobject>
  	      </inlinemediaobject>
  	     lists the time in beats and subbeats</para></listitem>
</varlistentry>
<varlistentry><term>Clock icon</term>
<listitem>
<para>
  	 <inlinemediaobject>
  	      <imageobject>
  		<imagedata fileref="time-real.png" format="PNG" />
  		</imageobject>
  	      </inlinemediaobject>
  	     lists the time in seconds
	     </para></listitem>
	     </varlistentry>
<varlistentry><term>List icon</term>
<listitem><para>
 <inlinemediaobject>
  	      <imageobject>
  		<imagedata fileref="time-raw.png" format="PNG" />
  		</imageobject>
  	      </inlinemediaobject>
  	    lists the time in &rosegarden;'s
  	  internal time format.
	</para></listitem>
</varlistentry>
</variablelist>
  
        </para>
     

        <para>The other icons represent easy access to the various functions the &rosegarden;
  	event list editor provides.</para>
  
  <variablelist> 
  <varlistentry> 
  <term><inlinemediaobject><imageobject><imagedata fileref="event-insert.png"
	format="PNG" /></imageobject></inlinemediaobject> </term> 
  <listitem>
  	<para>
	inserts an event. It brings up a dialog with a drop-down selection of <guibutton>event
	types</guibutton>. Each event type has its own set of parameters to fill out.
	</para> 
	</listitem> 
  </varlistentry>
 
  
    <varlistentry>
      <term><inlinemediaobject>
        <imageobject>
  	<imagedata fileref="event-delete.png" format="PNG" />
        </imageobject>
      </inlinemediaobject></term>
      <listitem><para>delete the selected event.</para></listitem>
    </varlistentry>
  
    
    <varlistentry><term><inlinemediaobject>
      <imageobject>
        <imagedata fileref="event-edit.png" format="PNG" />
      </imageobject>
    </inlinemediaobject></term>
    <listitem><para>edit selected event.</para></listitem>
    </varlistentry>
  
    <varlistentry><term><inlinemediaobject>
      <imageobject>
        <imagedata fileref="event-edit-advanced.png" format="PNG" />
      </imageobject>
    </inlinemediaobject></term>
    <listitem><para>advance edit selected event, for those who
    live on the edge or at least know what they are
    doing.</para></listitem></varlistentry>
    
    <varlistentry><term><inlinemediaobject>
      <imageobject>
        <imagedata fileref="rg-eventfilter.png" format="PNG" />
      </imageobject>
    </inlinemediaobject></term>
    <listitem><para>is the the <link linkend="matrix-selectionfilter">note event
    filter</link> &ndash; it's the same event filter that's available for the other
    editors.</para>
    </listitem>
    </varlistentry>
  </variablelist>

  
  <para>The event filters down the side can be ticked to show/hide types of events. It
  makes it easier to find a particular event without the distraction of other event
  types. Each of the tick boxes can be quickly toggled using <keycap>Alt</keycap> and
  the accelerator key (underlined letter in the label). </para>
        </sect2>
         </sect1>

  
</chapter>
  
 <!-- layout, icons, property filters, url for tutorial on using event list editor SOM-->

<!-- Also I want to introduce a new configuration section, one that is for non-developers,
just a run-down on the Settings configure rosegarden dialogs. What should it be called? -->
  <!--
  **********************************
  
  PART III:
  Technical material

  **********************************
  -->

  <chapter id="developers">
    <title>Customising Rosegarden</title>

    <sect1 id="developers-note-fonts">
      <title>Configuring custom notation fonts</title>

      <para>If you have a notation font installed on your system in a
	scalable format (TrueType or Type-1) but it is not currently
	supported by &rosegarden;, you can create your own mapping <acronym>XML</acronym>
	file to describe the font's character map and metrics in a way
	&rosegarden; can use.  These files are installed in the
	fonts/mappings subdirectory of the &rosegarden; installation
	directory, and a number of samples are included with the
	distribution.</para>

      <para>You can also use these mapping files to define new
	pixmap-based fonts, in which every shape in a particular size is
	loaded from a separate pixmap file.  The two standard notation
	fonts supplied with &rosegarden; are pixmap fonts defined in
	exactly this way.
      </para>

      <para>It is even possible to define a notation font as using one
	or more scalable system fonts, augmented with pixmaps for
	particular sizes or for characters not found in the scalable
	fonts.  This is because most of the mapping file format is the
	same for scalable and pixmap fonts, and where there are
	different elements for the different sorts of fonts, it is
	usually possible to include both of them.  &rosegarden; will
	usually use pixmaps where available and scalable fonts
	otherwise.
      </para>

      <para>You may also wish to edit the mapping files supplied with
	&rosegarden; if you find their measurements for alignment or
	sizing are not to your liking.  (If you believe that any of the
	supplied files are actually wrong, please let us know.)
      </para>

      <sect2 id="developers-note-fonts-codes-glyphs">
        <title>Codes and Glyphs</title>

        <para></para>
      </sect2>

      <sect2 id="developers-note-fonts-mapping-format">
	<title>Notation font mapping <acronym>XML</acronym> format</title>

	<para>Here is a summary of the <acronym>XML</acronym> elements that may be used
	  in the font mapping file.</para>

	<sect3 id="developers-note-fonts-mapping-format-font-encoding">
	  <title>rosegarden-font-encoding</title>

	  <para>This element must exist in every mapping file, and
	    should contain all the other elements.  The only attribute
	    is <quote>name</quote>, which contains the font's name as shown in the
	    font selection dropdown.  Although the file format will
	    permit any name to be used here, &rosegarden; will only pick
	    up the font corectly if the <acronym>XML</acronym> file has the same name as
	    the contents of this attribute (except that the <acronym>XML</acronym> file
	    should be named in lower-case and should end in <quote>.xml</quote>).
	  </para>
	</sect3>

	<sect3 id="developers-note-fonts-mapping-format-font-information">
	  <title>font-information</title>

	  <para>This should normally be the first child element of
	    <quote>rosegarden-font-encoding</quote>.  It may have any of the
	    following attributes, all of which are optional:

	    <variablelist>
	      <varlistentry>
		<term>origin</term>
		<listitem>
		  <para>A textual description of the likely origin of
		    the mapped font (not the origin of the mapping
		    file).</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>copyright</term>
		<listitem>
		  <para>A textual description of the likely copyright
		    status of the mapped font (not the copyright status
		    of the mapping file).  Note that because the mapping
		    file contains information such as origin and
		    copyright of the font itself, it is usually
		    advisable to make separate mapping files for
		    separate fonts where practical, even if the fonts
		    share other mapping data.</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>mapped-by</term>
		<listitem>
		  <para>The name of the creator of the mapping file
		    (i.e. you, presumably).</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>type</term>
		<listitem>
		  <para>The type of the font.  This attribute should
		    contain one of the values <quote>pixmap</quote> or <quote>scalable</quote>.
		    Fonts that are loaded into the windowing system and
		    are available to &rosegarden; as standard system fonts
		    have type <quote>scalable</quote>; fonts that need to be loaded
		    from pixmap files corresponding to individual sizes
		    of pixmap (such as the feta and rg21 fonts included
		    with &rosegarden;) have type <quote>pixmap</quote>.</para>

		  <para>This information is only intended for the user
		    reference; it isn't actually used by &rosegarden;.  It is
		    legitimate in practice for a font to be a mixture of the
		    two, but in general we will assume in this documentation
		    that a font is either scalable or pixmap.</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>smooth</term>
		<listitem>
		  <para>A boolean attribute indicating whether the
		    font is antialiased (smooth) or not.  Should have
		    the value <quote>true</quote> or <quote>false</quote>.  If the font is smooth,
		    other display elements such as beams and slurs that
		    are not generated from the font will also be
		    antialiased.</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>autocrop</term>
		<listitem>
		  <para>Only relevant for scalable (system) fonts.
		    &rosegarden; usually expects the metrics for a font to
		    contain the vertically smallest bounding boxes for
		    elements such as note heads and accents, rather than
		    including empty space above or below these elements
		    for alignment purposes.  Most fonts do not do what
		    &rosegarden; expects.  Therefore for these fonts you
		    should set the autocrop attribute to <quote>true</quote>; then
		    &rosegarden; will crop any unnecessary space from the
		    top and bottom of these elements when rendering
		    them.</para>
		</listitem>
	      </varlistentry>

	    </variablelist>

	  </para>
	</sect3>

	<sect3 id="developers-note-fonts-mapping-format-font-requirements">
	  <title>font-requirements</title>
	  <para>
	    This element is only relevant for scalable fonts.  It is
	    used to specify that this font should only be offered if
	    certain system fonts are available, as well as to
	    associate IDs with those system fonts to refer to in the
	    <link
	      linkend="developers-note-fonts-mapping-format-font-symbol-map">font-symbol-map</link>
	    element.  This scheme is used to decide which notation
	    fonts should be offered to the user, and also allows you
	    to compose a &rosegarden; notation font from more than one
	    system font if desired.
	  </para>
	  <para>The <quote>font-requirements</quote> element should contain a list
	    of <quote>font-requirement</quote> child elements.  Each of these has two
	    attributes: <quote>font-id</quote>, containing a numerical ID of your
	    choice for reference elsewhere in the file, and either a
	    <quote>name</quote> or a <quote>names</quote> attribute.  If <quote>name</quote> is provided, it
	    will be used as the name of a single system font to be
	    associated with the font id; if <quote>names</quote> is provided, it will
	    be treated as a comma-separated list of system fonts and the
	    first one found will be associated with the font id.
	  </para>
	</sect3>

	<sect3 id="developers-note-fonts-mapping-format-font-sizes">
	  <title>font-sizes</title>

	  <para>The <quote>font-sizes</quote> element specifies which notation font
	    sizes are available, and how the nominal font size relates
	    to the dimensions of non-font elements such as stems, staff
	    lines and beams.  The <quote>size</quote> of a notation font is assumed
	    to be the distance in pixels between staff lines, or more
	    precisely, the height of a conventional note head that
	    completely fills the space between lines: the size therefore
	    does not include the thickness of either of the neighbouring
	    staff lines.
	  </para>

	  <para>
	    <!-- !!! TODO throughout this section: how to mark up XML element/attribute names? equiv of <code> in HTML would do -->
	    There are two possible child elements of <quote>font-sizes</quote>:
	    <quote>font-scale</quote> and <quote>font-size</quote>.  Their use depends on the
	    type of font being described.</para>

	  <para>
	    For pixmap (non-scalable) fonts, the <quote>font-sizes</quote> element
	    should contain a list of <quote>font-size</quote> elements, one for
	    each size of pixmaps available.  The pixmaps themselves
	    must be installed in the
	    fonts/&lt;font-name&gt;/&lt;font-size&gt; subdirectory of
	    the &rosegarden; installation directory, where
	    &lt;font-name&gt; is the name of the font (as specified in
	    the <quote>rosegarden-font-encoding</quote> element at the start of the
	    mapping file), or a lower-case version of the name, and
	    &lt;font-size&gt; is the pixel size of the font.  A font
	    size will only be made available to the user if it has an
	    entry in the <quote>font-sizes</quote> list and the pixmap directory is
	    found.
	  </para>
	  
	  <para>
	    For scalable fonts, the <quote>font-sizes</quote> element should
	    contain one <quote>font-scale</quote> element that defines the
	    relationships between font and non-font elements in a
	    general way, and also defines the relationship between
	    &rosegarden;'s nominal font size and the size of the
	    corresponding system font.  If this <quote>font-scale</quote> element
	    is found, then &rosegarden; will assume the font is
	    available in any size.  You can however still include one
	    or more <quote>font-size</quote> elements to define precise proportions
	    for any particular size for which the general proportions
	    do not quite work correctly, for example because of
	    rounding error.
	  </para>

	  <para>
	    The attributes of <quote>font-scale</quote> and <quote>font-size</quote> are very
	    similar.  The main difference is that all attributes of
	    <quote>font-scale</quote> are floating-point values relative to the
	    font size, where 1.0 is the base font size (i.e. the
	    distance between staff lines), whereas attributes of
	    <quote>font-size</quote> are integer pixel values.  The attributes
	    available are as follows.  (Those marked <quote>optional</quote> have
	    vaguely sensible defaults, so it's a good idea to try not
	    setting them first.)
	  </para>
	  
	  <variablelist>

	    <varlistentry>
	      <term>note-height</term>
	      <listitem>
		<para>This attribute is only available for the
		  <quote>font-size</quote> element, and it is mandatory in that
		  element.  It defines the base size of font to which the
		  other attributes in this element apply, and a size that
		  will be offered to the user and used when looking up
		  pixmaps for this font.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>font-height</term>
	      <listitem>
		<para>May be used in either <quote>font-size</quote> or <quote>font-scale</quote>.
		  This is only relevant for scalable fonts, but is
		  mandatory for them if used in the <quote>font-scale</quote> element.
		  This defines the size of the system font used to draw a
		  given size of notation font.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>beam-thickness</term>
	      <listitem>
		<para>Optional.  Defines the thickness of a beam.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>staff-line-thickness</term>
	      <listitem>
		<para>Optional.  Defines the thickness of a staff line.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>stem-thickness</term>
	      <listitem>
		<para>Optional.  Defines the thickness of a note stem.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>flag-spacing</term>
	      <listitem>
		<para>Optional.  Defines the gap between note flags in
		  cases where multiple flags are drawn by drawing a single
		  flag several times.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>border-x</term>
	      <listitem>
		<para>Optional.  Specifies that the note head pixmaps
		  have a fixed area to left and right that should not be
		  considered part of the note head.  This attribute gives
		  the thickness of that area.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>border-y</term>
	      <listitem>
		<para>Optional.  Specifies that the note head pixmaps
		  have a fixed area to top and bottom that should not be
		  considered part of the note head.  This attribute gives
		  the thickness of that area.</para>
	      </listitem>
	    </varlistentry>

	  </variablelist>
	</sect3>

	<sect3 id="developers-note-fonts-mapping-format-font-symbol-map">
	  <title>font-symbol-map</title>
	  <para>
	    This element lists the symbols available in this notation
	    font, and which pixmap files or system font code points
	    they should be drawn from.</para>

	  <para>It should contain a list of <quote>symbol</quote> elements.  These
	    have several possible attributes, the choice of which will
	    normally depend on whether the font is based on pixmaps or
	    system fonts:
	  </para>

	  <variablelist>
	    <varlistentry>
	      <term>name</term>
	      <listitem>
		<para>Mandatory.  This attribute should contain the
		  name of the notation symbol.  If the symbol exists in
		  the <ulink
		    url="http://www.unicode.org/charts/PDF/U1D100.pdf">Unicode
		    3.2 standard</ulink>, the name should be that used to
		  identify the symbol in the standard.</para>

		<para>Most of the symbols &rosegarden; expects to find
		  are in the standard; one exception is that many fonts
		  have a special version of the flag symbol that is
		  intended to be used when composing multiple flags from
		  individual single flags.  &rosegarden; refers to this as
		  <quote>MUSICAL SYMBOL COMBINING FLAG-0</quote>, a name not used in
		  the Unicode standard (which has flags 1-5 only).</para>

		<para>For a definitive set of the symbol names
		  &rosegarden; knows about, see the file
		  <quote>gui/notecharname.cpp</quote> in the &rosegarden; source
		  distribution.  Note however that it is possible to use
		  additional symbol names by introducing them in a <link
		    linkend="developers-note-styles">notation
		    style</link>.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>src</term>
	      <listitem>
		<para>The name of the pixmap file from which this
		  symbol should be loaded, without a directory or
		  extension.  This is the usual way of describing a
		  symbol in a pixmap font.  The file itself should be
		  installed to
		  fonts/&lt;font-name&gt;/&lt;font-size&gt;/&lt;src&gt;.xpm
		  under the &rosegarden; installation directory.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>inversion-src</term>
	      <listitem>
		<para>The name of a pixmap file from which an inverted
		  version of this symbol may be loaded, without a
		  directory or extension.  If this attribute is absent
		  and an inverted version of the symbol is required, it
		  will be generated simply by loading the normal version
		  and reflecting it in a central x-axis.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>code</term>
	      <listitem>
		<para>The code point at which this symbol may be found
		  in the relevant system font, as a decimal integer.
		  This is a way of describing a symbol in a scalable
		  font.  This attribute will only be referred to if no
		  pixmap file is supplied, or if the pixmap file fails
		  to load.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>inversion-code</term>
	      <listitem>
		<para>The code point at which an inverted version of
		  this symbol may be found in the relevant system font.
		  If this attribute is absent and an inverted version of
		  the symbol is required, it will be generated simply by
		  loading the normal version and reflecting it in a
		  central x-axis.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>glyph</term>
	      <listitem>
		<para>The raw glyph index at which this symbol may be found
		  in the relevant system font, as a decimal integer.
		  This is a way of describing a symbol in a scalable
		  font.  This attribute will only be referred to if no
		  pixmap file is supplied, or if the pixmap file fails
		  to load.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>inversion-glyph</term>
	      <listitem>
		<para>The raw glyph index at which an inverted version of
		  this symbol may be found in the relevant system font.
		  If this attribute is absent and an inverted version of
		  the symbol is required, it will be generated simply by
		  loading the normal version and reflecting it in a
		  central x-axis.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>font-id</term>
	      <listitem>
		<para>The id of the system font from which this symbol
		  should be loaded, as defined in the <link
		    linkend="developers-note-fonts-mapping-format-font-requirements">font-requirements</link>
		  element.  The default is 0.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>codebase</term>
	      <listitem>
		<para>This (decimal integer) attribute may be of use
		  if many of the symbols in a scalable font cover a
		  short range of code points starting at a relatively
		  high code page.  If supplied, the codebase value will
		  be added to each of the subsequent code and
		  inversion-code values when looking up a symbol.
		</para>
	      </listitem>
	    </varlistentry>

	  </variablelist>

	  <para>
	    Although none of these attributes is mandatory except for
	    the name, a symbol obviously needs to supply at least one
	    of <quote>src</quote>, <quote>inversion-src</quote>, <quote>code</quote>, <quote>inversion-code</quote>,
	    <quote>glyph</quote>, or <quote>inversion-glyph</quote> to stand any chance of being
	    rendered at all.  It is of course perfectly legitimate to
	    supply several or all of these attributes.
	  </para>

	</sect3>

	<sect3 id="developers-note-fonts-mapping-format-font-hotspots">
	  <title>font-hotspots</title>
	  <para>&nbsp;
	  </para>
	</sect3>

      </sect2>
      
    </sect1>
    
    <sect1 id="developers-note-styles">
      <title>Creating new notation styles</title>

      <para>
	&rosegarden;'s notation editor has the ability to display and
	edit notes in various standard styles: classical, diamond
	heads and so on.  These styles are all defined in <acronym>XML</acronym> style
	definition files installed along with the application, and
	it's possible to create a new one by writing a simple <acronym>XML</acronym>
	file.  &rosegarden; simply looks at the set of installed files
	to determine which styles to offer the user.  You can refer to
	the default set of files in the styles subdirectory of the
	&rosegarden; installation directory for examples.
      </para>

      <para>
	The file format is not yet especially comprehensive; at the
	moment it has been designed to be powerful enough to describe
	the standard styles that come with &rosegarden;, but not much
	more.  If you should try to create new styles this way, we'd
	be very interested in your feedback on the &rosegarden;
	mailing-lists.
      </para>
      
      <sect2 id="developers-note-styles-format">
	<title>Notation style <acronym>XML</acronym> format</title>

	<para>
	  Here is a summary of the <acronym>XML</acronym> elements that may be used in
	  a style definition file.
	</para>

	<sect3 id="developers-note-styles-note-style">
	  <title>rosegarden-note-style</title>

	  <para>This element must exist in every style file, and
	    should contain all the other elements.  It has one optional
	    attribute, <quote>base-style</quote>, which may be used to name a style
	    from which this style takes the default values for any
	    parameters not specified elsewhere in the present file.
	    It's often good practice to define a style in terms of the
	    minimal difference from a given base style: see the supplied
	    Cross.xml for a particularly simple example.
	  </para>

	  <para>Note that the <quote>rosegarden-note-style</quote> element does not
	    give the name of the style being defined, which is instead
	    currently drawn from the name of the file.  At some point in
	    the future we may add internationalizable style name
	    attributes to this element.</para>
	</sect3>

	<sect3 id="developers-note-styles-global-note">
	  <title>global, note</title>
	  
	  <para>Within the <quote>rosegarden-note-style</quote> element, there may
	    be one <quote>global</quote> element and any number of <quote>note</quote> elements.
	    We describe these together, as they have almost identical
	    sets of attributes.  The <quote>global</quote> element simply provides
	    default values for those parameters not specified for a
	    particular note type in any following <quote>note</quote> element.
	  </para>

	  <para>The attributes for these elements are as follows.  All
	    of these are optional except as described:</para>

	  <variablelist>

	    <varlistentry>
	      <term>type</term>
	      <listitem>
		<para>Only relevant to the <quote>note</quote> element, and
		  mandatory for that element.  This attribute specifies
		  which sort of note is being styled.  Legal values are
		  textual American or British note names (from <quote>64th</quote>,
		  <quote>sixth-fourth note</quote>, <quote>hemidemisemiquaver</quote> etc to
		  <quote>double whole note</quote>).
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>shape</term>
	      <listitem>
		<para>Defines a note head shape for this style.  Any
		  string is a legal value, but the only values
		  implemented so far are <quote>angled oval</quote>, <quote>level oval</quote>,
		  <quote>breve</quote>, <quote>cross</quote>, <quote>triangle up</quote>, <quote>triangle down</quote>,
		  <quote>diamond</quote> and <quote>rectangle</quote>.  The value <quote>number</quote> is also
		  recognised but not yet implemented.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>charname</term>
	      <listitem>
		<para>Defines a note font character name to be used as
		  the note head for this style.  An element may supply a
		  <quote>shape</quote> or <quote>charname</quote> attribute, but not both.  The
		  name should be one of those defined in the current
		  notation font's <link
		    linkend="developers-note-fonts-mapping-format-font-symbol-map">symbol
		    map</link> (in a <quote>name</quote> attribute).
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>filled</term>
	      <listitem>
		<para>Specifies whether this note should have a filled
		  head (where applicable, i.e. where the shape attribute
		  supplies a shape that is available both filled and
		  unfilled).  Must be <quote>true</quote> or <quote>false</quote>.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>stem</term>
	      <listitem>
		<para>Specifies whether this note should have a stem.
		  Must be <quote>true</quote> or <quote>false</quote>.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>flags</term>
	      <listitem>
		<para>Defines how many flags or beams this note should
		  have.  The valid range is 0 to 4.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>slashes</term>
	      <listitem>
		<para>Defines how many slashes this note should have
		  across its stem.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>hfixpoint</term>
	      <listitem>
		<para>Specifies in which x position the stem fixes to
		  the note head.  Acceptable values are <quote>normal</quote> (the
		  right side when the stem points up, the left when it
		  points down), <quote>central</quote>, and <quote>reversed</quote> (left side
		  when the stem points up, right when it points down).
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>vfixpoint</term>
	      <listitem>
		<para>Specifies in which y position the stem fixes to
		  the note head.  Acceptable values are <quote>near</quote> (the stem
		  fixes to the top when pointing up, the bottom when
		  pointing down), <quote>middle</quote>, or <quote>far</quote>.
		</para>
	      </listitem>
	    </varlistentry>

	  </variablelist>
	</sect3>
      </sect2>
    </sect1>
    

    <!-- (OPTIONAL) A Programming/Scripting reference chapter should be
    used for apps that use plugins or that provide their own scripting hooks
    and/or development libraries. -->

    <!-- cc: I think we should document the DCOP API here, but I don't
    think we should include extensive developer docs, although we should
    point to where they can be found in the source tree or online. -->
    <!--
    <para>
    Programming <application>Rosegarden</application> plugins is 
    a joy to behold. Just read through the next
    66 pages of <acronym>API</acronym>'s to learn how!
  </para>
    -->
    <!-- Use refentries to describe APIs.  Refentries are fairly
    complicated and you should consult the docbook reference for
    further details. The example below was taken from that reference
    and shortened a bit for readability. -->
    <!--
    <refentry id="re-1007-unmanagechildren-1">
    <refmeta>
    <refentrytitle>XtUnmanageChildren</refentrytitle>
    <refmiscinfo>Xt &ndash; Geometry Management</refmiscinfo>
  </refmeta>
    <refnamediv>
    <refname>XtUnmanageChildren
  </refname>
    <refpurpose>remove a list of children from a parent widget's managed list.
  </refpurpose>
  </refnamediv>
    <refsynopsisdiv>
    <refsynopsisdivinfo>
    <date>4 March 1996</date>
  </refsynopsisdivinfo>
    <synopsis>
    void XtUnmanageChildren(<replaceable>children</replaceable>, <replaceable>num_children</replaceable>)
    WidgetList <replaceable>children</replaceable>;
    Cardinal <replaceable>num_children</replaceable>;
  </synopsis>

    <refsect2 id="r2-1007-unmanagechildren-1">
    <title>Inputs</title>
    <variablelist>
    <varlistentry>
    <term><replaceable>children</replaceable>
  </term>
    <listitem>
    <para>
    Specifies an array of child widgets. Each child must be of
    class RectObj or any subclass thereof.
  </para>
  </listitem>
  </varlistentry>
    <varlistentry>
    <term><replaceable>num_children</replaceable>
  </term>
    <listitem>
    <para>Specifies the number of elements in <replaceable>children</replaceable>.
  </para>
  </listitem>
  </varlistentry>
  </variablelist>
  </refsect2></refsynopsisdiv>

    <refsect1 id="r1-1007-unmanagechildren-1">
    <title>Description
  </title>
    <para>
    <function>XtUnmanageChildren()</function> unmaps the specified widgets
    and removes them from their parent's geometry management.
    The widgets will disappear from the screen, and (depending
    on its parent) may no longer have screen space allocated for
    them.
  </para>
    <para>Each of the widgets in the <replaceable>children</replaceable> array must have
    the same parent.
  </para>
    <para>See the &ldquo;Algorithm&rdquo; section below for full details of the
    widget unmanagement procedure.
  </para>
  </refsect1>

    <refsect1 id="r1-1007-unmanagechildren-2">
    <title>Usage</title>
    <para>
    Unmanaging widgets is the usual method for temporarily
    making them invisible.  They can be re-managed with
    <function>XtManageChildren()</function>.
  </para>
    <para>
    You can unmap a widget, but leave it under geometry
    management by calling <function>XtUnmapWidget()</function>.  You can
    destroy a widget's window without destroying the widget by
    calling <function>XtUnrealizeWidget()</function>.  You can destroy a
    widget completely with <function>XtDestroyWidget()</function>.
  </para>
    <para>
    If you are only going to unmanage a single widget, it is
    more convenient to call <function>XtUnmanageChild()</function>.  It is
    often more convenient to call <function>XtUnmanageChild()</function>
    several times than it is to declare and initialize an array
    of widgets to pass to <function>XtUnmanageChildren()</function>.  Calling
    <function>XtUnmanageChildren()</function> is more efficient, however,
    because it only calls the parent's <function>change_managed()</function>
    method once.
  </para>
  </refsect1>

    <refsect1 id="r1-1007-unmanagechildren-3">
    <title>Algorithm
  </title>
    <para><function>XtUnmanageChildren()</function> performs the following:
  </para>
    <variablelist>
    <varlistentry>
    <term>-
  </term>
    <listitem>
    <para>Ignores the child if it already is unmanaged or is being
    destroyed.
  </para>
  </listitem>
  </varlistentry>
    <varlistentry>
    <term>-
  </term>
    <listitem>
    <para>Otherwise, if the child is realized, it makes it nonvisible
    by unmapping it.
  </para>
  </listitem>
  </varlistentry>
  </variablelist>
    <para>
  </para>
  </refsect1>

    <refsect1 id="r1-1007-unmanagechildren-4">
    <title>Structures</title>
    <para>
    The <type>WidgetList</type> type is simply an array of widgets:
  </para>
    <screen id="sc-1007-unmanagechildren-1">
    typedef Widget *WidgetList;
  </screen>
  </refsect1>
  </refentry>
    -->
  </chapter>


  <chapter id="credits">

    <title>Credits and License</title>

    <para>
      <application>Rosegarden</application>
    </para>
    <para>
      <itemizedlist>
	<listitem>
	  <para>

	    &rosegarden; is Copyright 2000-2008 Guillaume Laurent,
	    Chris Cannam and Richard Bown.  The moral rights of
	    Guillaume Laurent, Chris Cannam and Richard Bown to be
	    identified as the authors of this work have been asserted.

	  </para>
	</listitem>

	<listitem>
	  <para>

	    Parts of &rosegarden; are derived from X11 Rosegarden 2.1,
	    which is Copyright 1994 &ndash; 2001 Chris Cannam, Andrew Green,
	    Richard Bown and Guillaume Laurent.

	  </para>
	</listitem>

	<listitem>
	  <para>

	    For musical notation display &rosegarden; uses pixmaps
	    derived from the Feta font, part of the <ulink
	      url="http://lilypond.org/">LilyPond</ulink> software,
	    which is Copyright 1997 &ndash; 2001 Jan Nieuwenhuizen and
	    Han-Wen Nienhuys.

	  </para>
	</listitem>

	<listitem>
	  <para>

	    Other major contributors include Randall Farmer, Ron
	    Kuris, Hans Kieserman, Michael McIntyre, and Pedro
            Lopez-Cabanillas.

	  </para>
	</listitem>

	<listitem>
	  <para>

  The &rosegarden; splash-screen image is Copyright 2006 Carolyn H. McIntyre,
  used by permission.

	  </para>
	</listitem>

      </itemizedlist>
    </para>

    <para>
      Documentation copyright 2002-2006 Chris Cannam, Richard Bown, Guillaume Laurent
    </para>
    <!--
    <para>
    Translations done by:
    <itemizedlist>
    <listitem>
    <para>Babel D. Fish <email>babelfish@kde.org</email> (Sanskrit)</para>
  </listitem>
  </itemizedlist>
  </para>
    -->
    <!-- For URL links to common stuff like the one below,
    always use paths like "common/gpl-licence".
    In this path, "common" will be a symbolic link built at "make install" time.
    This link will normally point to $KDEDIR/share/doc/HTML/en/common,
    where "en" should be replaced with the current language. -->

    <para>
      This program is licensed under the terms of the
      <ulink url="common/gpl-license.html">GNU General Public License</ulink>.
    </para>
  </chapter>

    <!-- Note that the revhistory tags apply to the documentation
    version and not to the app version. That is why we use an
    ItemizedList instead for this list of revisions to the app. -->

    <chapter id="rosegarden-revhistory">
      <title>Rosegardenの変更記録</title>
      <para>
        <itemizedlist>
          <listitem><para>
              1.7.0 &ndash; May 2008: notation track headers, nested brackets in
              LilyPond export, grace notes finally functional, quick playback
              position marker, ties can be flipped, variable-height tracks allow
              access to all previously overlapping segments, take track
              transpose into account while recording, convert existing segments
              when loading an instrument preset, etc., bug fixes galore
          </para></listitem>
	  <listitem><para>
	      1.6.0 &ndash; November 2007: fretboards, diatonic transpose, multiple lines
	            of lyrics, marker ruler improvements, overlapping notes visibility,
	            LilyPond export enhancements and new dialog, better infrared remote
	            control support, better configuration dialog, fixes
	  </para></listitem>
	  <listitem><para>
	      1.5.1 &ndash; March 2007: bug fixes
	  </para></listitem>
	  <listitem><para>
	      1.5 &ndash; February 2007: audio timestretching and input format conversion,
	          matrix usability improvements, tempo tapping, context help, some
	          features, code reorganisation and new build system (again)
	  </para></listitem>
	  <listitem><para>
              1.4 &ndash; September 2006: LilyPond export vastly improved,
	      exportable LilyPond directives, cut/copy/paste by ranges that
	      include tempo and time data, tempo entry and manipulation vastly
	      improved, multi-track &MIDI; recording, &MIDI; recording filters,
	      track paramter box, create segments using preset parameters from
	      a database of over 300 real-world instruments, texts like
	      <quote>Allegro</quote> offered as a parallel alternative to typing, LilyPond
	      preview, assorted smaller features, many bug fixes
          </para></listitem>
	  <listitem><para>
	      1.2.4 &ndash; July 2006: bug fixes
	  </para></listitem>
	  <listitem><para>
	      1.2.3 &ndash; February 2006: new segment canvas, percussion matrix,
	            multi-track audio recording, project packager, external &MIDI;
	            controllers, MTC sync, proper ALSA &MIDI; ports, new icons, new build
	            system
	  </para></listitem>
	  <listitem><para>
	      1.0 &ndash; February 2005: many fixes, DSSI effects, latency compensation
	  </para></listitem>
	  <listitem><para>
	      0.9.9 &ndash; July 2004: plugin synths, triggered segments, notation improvements
	  </para></listitem>
	  <listitem><para>
	      0.9.8 &ndash; May 2004: better audio subsystem
	  </para></listitem>
	  <listitem><para>
	      0.9.7 &ndash; February 2004: 
	  </para></listitem>
	  <listitem><para>
	      0.9.6 &ndash; December 2003: bug fixes
	  </para></listitem>
	  <listitem><para>
	      0.9.5 &ndash; November 2003: a great lot of stuff
	  </para></listitem>
	  <listitem><para>
	      0.9.1 &ndash; May 2003: step recording, Mup export, many many bug fixes
	  </para></listitem>
	  <listitem><para>
	      0.9 &ndash; April 2003: many notation improvements, improved bank editor, audio enhancements and refinements, translations
	  </para></listitem>
	  <listitem><para>
	      0.8.5 &ndash; December 2002: bank editor, &MIDI; filters, panic button
	  </para></listitem>
	  <listitem><para>
	      0.8 &ndash; October 2002: printing, LADSPA plugins, improved Matrix View
	  </para></listitem>
	  <listitem><para>
	      0.2.0 &ndash; August 2002: WAV file support, sweep selections, contrapuntal staves
	  </para></listitem>
	  <listitem><para>
	      0.1.6 &ndash; June 2002: configuration dialog, LilyPond support, quantize dialog
	  </para></listitem>
	  <listitem><para>
	      0.1.5 &ndash; May 2002: KDE 3, ALSA support, JACK audio support
	  </para></listitem>
	  <listitem><para>
	      0.1.4 &ndash; March 2002: more undo, segment editing, audio playback
	  </para></listitem>
	  <listitem><para>
	      0.1.3 &ndash; January 2002: piano-roll/matrix view, &MIDI; recording
	  </para></listitem>
	  <listitem><para>
	      0.1.2 &ndash; November 2001: notation undo, transport dialog, position pointer
	  </para></listitem>
	  <listitem><para>
	      0.1.1 &ndash; October 2001: scalable notation
	  </para></listitem>
	  <listitem><para>
	      0.1   &ndash; June 2001: Rosegarden-4の最初の公開リリース
	  </para></listitem>
	</itemizedlist>
      </para>
    </chapter>

  &documentation.index; 
</book>


