/****************************************************************************
** Form implementation generated from reading ui file 'gui/ui/RosegardenTransport.ui'
**
** Created: Sun Oct 15 22:32:16 2006
**      by: The User Interface Compiler ($Id: qt/main.cpp   3.3.6   edited Aug 31 2005 $)
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "gui/ui/RosegardenTransport.moc" // PCH include
#include "gui/ui/RosegardenTransport.h"

#include <qvariant.h>
#include <qpushbutton.h>
#include <qlabel.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qimage.h>
#include <qpixmap.h>

#include "widgets.h"
static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0b,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xa9, 0xac, 0x77, 0x26, 0x00, 0x00, 0x00,
    0x3c, 0x49, 0x44, 0x41, 0x54, 0x18, 0x95, 0x63, 0x60, 0xa0, 0x2f, 0x60,
    0x61, 0xf8, 0x4f, 0xac, 0xd2, 0xff, 0x0c, 0x0c, 0x0c, 0xde, 0x50, 0x9a,
    0x28, 0x85, 0x0c, 0x84, 0x34, 0x20, 0x2b, 0x84, 0x01, 0xac, 0x1a, 0xb0,
    0x29, 0xc4, 0xd0, 0xc0, 0x88, 0xa4, 0x98, 0x10, 0x60, 0x64, 0x44, 0xe2,
    0xe0, 0x32, 0x99, 0x81, 0x81, 0x81, 0x61, 0x2b, 0x11, 0x86, 0x51, 0x00,
    0x00, 0x06, 0xf4, 0x0d, 0x0b, 0xd4, 0x3b, 0x3a, 0x0f, 0x00, 0x00, 0x00,
    0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0xb0, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xe5, 0xd4, 0x4d, 0x0a, 0x41,
    0x51, 0x18, 0x87, 0xf1, 0x1f, 0xca, 0xc4, 0xc4, 0xc8, 0x16, 0x6c, 0xc0,
    0x16, 0x6c, 0xc6, 0x7a, 0x0c, 0x6d, 0xc0, 0xc0, 0xc0, 0xdc, 0x06, 0x94,
    0x89, 0x0c, 0x31, 0x10, 0x29, 0x26, 0x06, 0x94, 0xe2, 0xd6, 0x35, 0xa0,
    0xe4, 0x96, 0xee, 0x47, 0x47, 0x94, 0xa7, 0x4e, 0xa7, 0x7f, 0x9d, 0xf7,
    0xe9, 0xed, 0xf4, 0x9e, 0xc3, 0x8f, 0x50, 0x0a, 0x29, 0x2b, 0xa3, 0x87,
    0x13, 0x62, 0xec, 0xd1, 0x09, 0x25, 0x8f, 0x13, 0xeb, 0x98, 0xa5, 0x9b,
    0x22, 0x54, 0x42, 0x89, 0xe7, 0x89, 0xbc, 0x09, 0x25, 0x5e, 0xa6, 0xe4,
    0xc2, 0xe2, 0x45, 0x4a, 0x2e, 0x2c, 0x5e, 0x7f, 0x4a, 0x3c, 0xce, 0x2b,
    0xce, 0x4a, 0x0d, 0x91, 0xe7, 0xb8, 0x35, 0x43, 0x89, 0x61, 0xf6, 0x90,
    0x46, 0xa8, 0xa6, 0x1d, 0xce, 0x33, 0xc7, 0x93, 0xc7, 0xbe, 0xc5, 0x25,
    0xa4, 0xb8, 0xef, 0xfe, 0xac, 0x07, 0x39, 0x6a, 0xbe, 0x47, 0x03, 0x23,
    0x5c, 0xb1, 0x42, 0x3b, 0x94, 0xb8, 0xeb, 0xf5, 0x13, 0xda, 0xa5, 0x15,
    0x64, 0xbd, 0xe3, 0x28, 0x91, 0xcf, 0xf9, 0xfa, 0x7a, 0x4f, 0x1d, 0x43,
    0x1c, 0x30, 0x45, 0x2b, 0x94, 0xf8, 0x0f, 0xb8, 0x01, 0x7e, 0x53, 0x28,
    0x8b, 0x17, 0x6e, 0x48, 0x27, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image2_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x02,
    0x6d, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xd5, 0x94, 0xb1, 0x8b, 0x95,
    0x47, 0x14, 0xc5, 0x8f, 0xeb, 0x35, 0x1e, 0x70, 0x90, 0x23, 0x7c, 0xc8,
    0xac, 0x04, 0xf3, 0x0a, 0x45, 0x10, 0xed, 0x42, 0x1a, 0x0b, 0x0b, 0x0b,
    0x5d, 0x6c, 0x74, 0x15, 0x4c, 0x6c, 0xd2, 0x44, 0xc9, 0x3f, 0x10, 0xb0,
    0xb6, 0xb1, 0x88, 0xff, 0x41, 0xc0, 0x26, 0x45, 0x20, 0xe8, 0xbe, 0x52,
    0x51, 0x0b, 0xc1, 0x46, 0x11, 0x0b, 0x51, 0xc1, 0xa8, 0x6d, 0x40, 0x63,
    0x12, 0x67, 0xe1, 0x53, 0x8e, 0xeb, 0xf8, 0x3e, 0x9b, 0xb7, 0xfa, 0xbd,
    0x64, 0xdd, 0x7d, 0x65, 0x72, 0x9b, 0x19, 0xee, 0x9c, 0xf9, 0xdd, 0x33,
    0x97, 0x99, 0x01, 0xfe, 0x6f, 0xb1, 0x6e, 0x2d, 0x81, 0x1a, 0x1d, 0x25,
    0xb8, 0xe0, 0x6a, 0x30, 0x08, 0x00, 0x70, 0xf5, 0x7c, 0x29, 0x65, 0x38,
    0x75, 0x15, 0x25, 0x6d, 0x93, 0x74, 0x92, 0x89, 0xb3, 0x00, 0xc0, 0xe0,
    0x26, 0x35, 0x5a, 0x1c, 0x0c, 0x06, 0x1d, 0xc9, 0x87, 0x4c, 0xbc, 0xcf,
    0xc4, 0x4e, 0x8d, 0x5e, 0x21, 0x90, 0xa6, 0x83, 0x4a, 0x3b, 0x99, 0xf8,
    0xb7, 0xa4, 0x2e, 0x37, 0xf9, 0x05, 0xc9, 0xad, 0x92, 0x4e, 0x48, 0xea,
    0x98, 0xb8, 0x48, 0x32, 0x21, 0x10, 0x24, 0x9f, 0x2b, 0xa9, 0x53, 0xa3,
    0xa3, 0xab, 0xf1, 0x66, 0x3e, 0xcc, 0x02, 0x73, 0x00, 0xb6, 0x20, 0xf0,
    0x53, 0x69, 0x4b, 0x43, 0x72, 0x1f, 0x80, 0xe3, 0xa8, 0x00, 0x80, 0xa1,
    0xed, 0x16, 0x15, 0x15, 0x81, 0xa1, 0xab, 0xe1, 0xd6, 0x27, 0xa6, 0x03,
    0x1b, 0x97, 0x19, 0x7c, 0x05, 0xe3, 0xd4, 0x38, 0xb3, 0x15, 0x81, 0x39,
    0x35, 0x02, 0x83, 0x0b, 0xcb, 0x32, 0x06, 0x87, 0x24, 0x01, 0x60, 0x8e,
    0xc1, 0x8d, 0xd3, 0xb5, 0x23, 0x69, 0x07, 0x13, 0xaf, 0x93, 0xec, 0x06,
    0x3b, 0x06, 0xef, 0x24, 0x75, 0x08, 0xbc, 0x60, 0xf0, 0xb3, 0x9e, 0x6c,
    0x03, 0xc9, 0x32, 0xf8, 0x7c, 0xd0, 0x49, 0x3a, 0xb8, 0xb6, 0x63, 0x00,
    0xa5, 0x2d, 0x4f, 0x09, 0x7e, 0xab, 0xa4, 0x45, 0xb7, 0x9e, 0x61, 0x10,
    0xa2, 0x2e, 0xb9, 0x7a, 0xa9, 0x27, 0x7b, 0x0b, 0xe0, 0x6a, 0x29, 0x05,
    0x00, 0x0e, 0x4f, 0x05, 0x1e, 0xc3, 0x7f, 0x77, 0xf5, 0x59, 0xdb, 0x30,
    0x0c, 0x04, 0x6e, 0xfe, 0x53, 0x43, 0xf2, 0x57, 0x10, 0xb0, 0x7d, 0x0c,
    0x81, 0xf5, 0x53, 0x81, 0x01, 0x80, 0x89, 0x95, 0x41, 0xcc, 0x6a, 0x16,
    0xa8, 0xf8, 0x1e, 0x31, 0xa9, 0x73, 0xeb, 0xeb, 0x0c, 0x2e, 0x29, 0x69,
    0x9b, 0x92, 0xbe, 0x5c, 0x89, 0xb1, 0x62, 0xb5, 0x98, 0x89, 0x1f, 0xeb,
    0xa8, 0x7e, 0xd1, 0xbe, 0x6e, 0xe1, 0x91, 0xb7, 0xa7, 0x94, 0xfe, 0xf0,
    0x6b, 0xdf, 0x59, 0x5e, 0xaf, 0xa3, 0xea, 0x60, 0x7c, 0x55, 0x5d, 0x77,
    0x79, 0xe4, 0x97, 0x75, 0xa9, 0x5e, 0x5b, 0xd3, 0xb1, 0x92, 0x06, 0xe3,
    0xab, 0x06, 0x00, 0x57, 0x08, 0x02, 0xc6, 0x39, 0x25, 0x6d, 0x9f, 0xd0,
    0x51, 0x97, 0x25, 0x81, 0xe0, 0xa1, 0x95, 0xcc, 0xfd, 0x0b, 0xcc, 0xc4,
    0xaf, 0x49, 0xce, 0xb8, 0xfa, 0x37, 0xb7, 0x3e, 0x62, 0xf8, 0x11, 0x02,
    0x9b, 0x0d, 0x5f, 0x50, 0xd2, 0x9e, 0x65, 0xdd, 0xb3, 0x3f, 0x9f, 0x2d,
    0x18, 0x7e, 0xab, 0xac, 0xbd, 0xfd, 0xfc, 0x27, 0xc1, 0x08, 0x7c, 0x53,
    0x4a, 0x01, 0x83, 0x17, 0x5d, 0xfd, 0x86, 0xc1, 0xd3, 0x00, 0xc0, 0xe0,
    0x01, 0x57, 0xdf, 0x53, 0xd2, 0x77, 0x00, 0x60, 0xfb, 0xb9, 0x5b, 0xdf,
    0x76, 0x6b, 0x80, 0x38, 0xb2, 0x92, 0xeb, 0x7e, 0x1b, 0xf6, 0x32, 0xb1,
    0x23, 0xf9, 0x8e, 0xe4, 0xee, 0x71, 0xa1, 0x75, 0x39, 0xe7, 0x2e, 0xe7,
    0xfc, 0x8b, 0xa4, 0x27, 0x08, 0xdc, 0xf8, 0xa0, 0x6f, 0xf4, 0x03, 0xc9,
    0x8e, 0x89, 0xb7, 0x56, 0x07, 0x37, 0x3a, 0x9b, 0x9b, 0xdc, 0x31, 0xf1,
    0xee, 0x44, 0x7b, 0xc8, 0xf3, 0x92, 0x46, 0x0c, 0x76, 0x24, 0xcf, 0xf7,
    0xf2, 0xbb, 0x73, 0x93, 0x3b, 0x49, 0x95, 0x64, 0xfe, 0x34, 0x58, 0x7a,
    0x2c, 0xa9, 0x93, 0x74, 0x66, 0x02, 0x9c, 0x7a, 0x9b, 0x02, 0x13, 0xcf,
    0x58, 0x49, 0x0f, 0xc6, 0x7b, 0x4e, 0xf7, 0xf3, 0x13, 0xff, 0x71, 0xce,
    0xb9, 0x73, 0x6b, 0x20, 0xf0, 0x80, 0xe4, 0x5f, 0xab, 0x1e, 0xaf, 0x17,
    0xa5, 0x94, 0xfd, 0x0c, 0x0e, 0x4b, 0x5b, 0xe6, 0x3f, 0xd6, 0xef, 0x85,
    0xed, 0x79, 0x04, 0x16, 0x6c, 0xef, 0x71, 0x35, 0x08, 0xc2, 0x98, 0x62,
    0x0c, 0x02, 0x81, 0x9f, 0xa7, 0x35, 0xf2, 0xdf, 0x8c, 0xf7, 0xe8, 0x09,
    0xf1, 0x98, 0x8a, 0x2b, 0x67, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image3_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xa8, 0xb2, 0x3e, 0x3e, 0x00, 0x00, 0x01,
    0x57, 0x49, 0x44, 0x41, 0x54, 0x48, 0x89, 0xed, 0xd6, 0xb1, 0x4a, 0x1c,
    0x41, 0x18, 0x07, 0xf0, 0xdf, 0x49, 0xf0, 0x0a, 0x89, 0x9c, 0xa0, 0x56,
    0x57, 0x5d, 0xa1, 0x41, 0x08, 0x42, 0x84, 0x80, 0x65, 0xea, 0x60, 0xef,
    0x9b, 0x58, 0xf8, 0x00, 0x96, 0x01, 0xdf, 0x20, 0x7d, 0x02, 0x11, 0xf2,
    0x0a, 0x36, 0x81, 0x90, 0x26, 0xa0, 0x85, 0x85, 0x29, 0x14, 0xe1, 0xe2,
    0xe5, 0x50, 0x39, 0xf4, 0x92, 0xdc, 0x97, 0x62, 0x47, 0x10, 0x49, 0x60,
    0xc6, 0xbb, 0x0b, 0x08, 0xf7, 0x87, 0x69, 0x66, 0xe7, 0x63, 0x7f, 0xec,
    0xce, 0x7e, 0xb3, 0x4c, 0xf2, 0xc8, 0x52, 0x1b, 0xa6, 0x38, 0x98, 0xc5,
    0x3c, 0x66, 0xd2, 0x54, 0x1f, 0x9d, 0x1a, 0xed, 0xff, 0x0a, 0x4a, 0x90,
    0x97, 0x78, 0x8d, 0x35, 0x2c, 0xe0, 0x09, 0x2e, 0xf0, 0x09, 0x7b, 0xf8,
    0x3c, 0x0c, 0xac, 0x04, 0xd3, 0x0c, 0xb6, 0x82, 0xc3, 0xe0, 0x57, 0x10,
    0xf7, 0xc6, 0xef, 0xe0, 0x28, 0xd8, 0x09, 0x96, 0xc7, 0x8d, 0x59, 0x08,
    0xb6, 0x83, 0xef, 0x7f, 0x81, 0xdc, 0x1f, 0x57, 0xc1, 0x6e, 0xd0, 0x1a,
    0x17, 0xa6, 0x1e, 0x6c, 0x06, 0xdf, 0x32, 0x30, 0xb7, 0xa3, 0x9b, 0x9e,
    0xe6, 0xec, 0x38, 0x40, 0xad, 0x60, 0x2f, 0x18, 0x14, 0x80, 0x22, 0xf8,
    0x12, 0xd5, 0x3e, 0xcb, 0xca, 0x54, 0x81, 0x69, 0x09, 0x2f, 0x94, 0x7f,
    0x08, 0x2d, 0xac, 0x06, 0xf5, 0x51, 0x83, 0x56, 0xb1, 0x58, 0x88, 0xa1,
    0x6a, 0x09, 0xcf, 0x64, 0xbe, 0xb6, 0x12, 0x50, 0xa3, 0x70, 0xfd, 0xdd,
    0x7b, 0x34, 0x4a, 0x16, 0xe7, 0xa6, 0x8b, 0x41, 0x31, 0x87, 0x48, 0xb5,
    0x59, 0x29, 0x01, 0x1d, 0xa0, 0x53, 0xcc, 0xa1, 0x87, 0x43, 0x55, 0xd3,
    0x1c, 0x29, 0xe8, 0x6b, 0x42, 0x95, 0xe6, 0x18, 0x07, 0x35, 0x6e, 0x46,
    0x0d, 0x3a, 0xc1, 0x7b, 0x9c, 0x17, 0xd4, 0x5c, 0xe3, 0x23, 0x8e, 0x0a,
    0x6a, 0xf2, 0x93, 0x8e, 0x8d, 0xdd, 0xa0, 0x97, 0xd1, 0x7f, 0x7e, 0x06,
    0xef, 0x82, 0xe7, 0x63, 0xc1, 0xdc, 0x41, 0x2d, 0x07, 0x6f, 0x82, 0x93,
    0x7f, 0x34, 0xc9, 0x41, 0x70, 0x16, 0xbc, 0x0d, 0xd6, 0x73, 0xfb, 0xcf,
    0x6d, 0x1e, 0x7a, 0xda, 0x37, 0xf1, 0x0a, 0x1b, 0x58, 0xc1, 0xd3, 0x74,
    0xe9, 0x52, 0xb5, 0x81, 0x3f, 0x60, 0x1f, 0xa7, 0xb9, 0x7b, 0x67, 0x28,
    0x50, 0x42, 0xd5, 0x55, 0xbf, 0x1d, 0x73, 0x98, 0x4e, 0xd3, 0x7d, 0xfc,
    0x40, 0xbb, 0x14, 0x32, 0x49, 0x6e, 0xfe, 0x00, 0xbc, 0x33, 0xc2, 0x22,
    0x5c, 0x68, 0x92, 0x30, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

static const unsigned char image4_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xd7, 0x63, 0x2c, 0xcf, 0x00, 0x00, 0x05,
    0x17, 0x49, 0x44, 0x41, 0x54, 0x48, 0x89, 0xc5, 0x95, 0xdf, 0x4f, 0x13,
    0x59, 0x14, 0xc7, 0xbf, 0x73, 0x77, 0x66, 0x3a, 0xd3, 0x62, 0x5b, 0x18,
    0x5a, 0x42, 0x63, 0x42, 0x9c, 0xb2, 0xac, 0x8b, 0x49, 0x9b, 0xa5, 0xb8,
    0x18, 0x8d, 0x4e, 0x23, 0x61, 0x37, 0x11, 0xb2, 0x21, 0x5a, 0xf5, 0x61,
    0xf7, 0xc9, 0x97, 0xf5, 0xc1, 0xc8, 0x7f, 0xb2, 0xcf, 0x3c, 0x9b, 0x65,
    0x63, 0x02, 0x1a, 0xdd, 0x07, 0x75, 0xd7, 0x04, 0x3a, 0x86, 0x17, 0x05,
    0x44, 0x41, 0x9b, 0x95, 0x20, 0xf1, 0x27, 0x05, 0x0a, 0xf6, 0xc7, 0x30,
    0x3f, 0xee, 0x4c, 0x3b, 0xdd, 0x97, 0x2d, 0x01, 0xa4, 0x46, 0x7c, 0xd9,
    0x4f, 0x72, 0x9f, 0x6e, 0x72, 0x3f, 0xe7, 0xdc, 0x7b, 0xce, 0xb9, 0xc0,
    0xff, 0x04, 0x53, 0x6f, 0x43, 0x51, 0x14, 0xb6, 0x50, 0x28, 0x34, 0x54,
    0x2a, 0x95, 0xe8, 0xa5, 0x4b, 0x97, 0xa6, 0x1f, 0x3d, 0x7a, 0x84, 0x77,
    0xef, 0xde, 0x61, 0x6d, 0x6d, 0x0d, 0xf9, 0x7c, 0x1e, 0xa6, 0x69, 0x02,
    0x00, 0x44, 0x51, 0x84, 0x24, 0x49, 0x08, 0x85, 0x42, 0x88, 0x44, 0x22,
    0x48, 0x24, 0x12, 0x18, 0x19, 0x19, 0x39, 0xee, 0x38, 0xce, 0x0b, 0x51,
    0x14, 0xb5, 0x99, 0x99, 0x19, 0xe7, 0xb3, 0xc4, 0x8a, 0xa2, 0xb0, 0x9a,
    0xa6, 0xf9, 0x00, 0x44, 0x4f, 0x9d, 0x3a, 0x35, 0x73, 0xff, 0xfe, 0x7d,
    0xac, 0xad, 0xad, 0xc1, 0xb6, 0x6d, 0x54, 0xab, 0x55, 0x94, 0xcb, 0x65,
    0x50, 0x4a, 0xe1, 0xba, 0x2e, 0x18, 0x86, 0x01, 0x21, 0x04, 0x3c, 0xcf,
    0x83, 0x65, 0x59, 0x10, 0x42, 0xc0, 0x71, 0x1c, 0xc2, 0xe1, 0x30, 0x92,
    0xc9, 0x24, 0x26, 0x27, 0x27, 0x8f, 0x3b, 0x8e, 0xf3, 0x22, 0x14, 0x0a,
    0x95, 0x54, 0x55, 0x2d, 0xd7, 0x15, 0x77, 0x76, 0x76, 0xf2, 0x3e, 0x9f,
    0xef, 0xeb, 0x0b, 0x17, 0x2e, 0x3c, 0xbb, 0x76, 0xed, 0xda, 0x0e, 0x61,
    0x8d, 0x6a, 0xb5, 0xba, 0xb5, 0x00, 0x80, 0x61, 0x98, 0xad, 0xb5, 0x1d,
    0x9e, 0xe7, 0x11, 0x0a, 0x85, 0x70, 0xf1, 0xe2, 0x45, 0x5c, 0xbf, 0x7e,
    0xfd, 0x3b, 0x5d, 0xd7, 0xff, 0x79, 0xfd, 0xfa, 0xb5, 0xf5, 0x91, 0x58,
    0x51, 0x14, 0xd6, 0x30, 0x8c, 0x6f, 0x8e, 0x1c, 0x39, 0xf2, 0xec, 0xee,
    0xdd, 0xbb, 0xa0, 0x94, 0x82, 0x61, 0x18, 0x08, 0x82, 0x80, 0xa6, 0xa6,
    0x26, 0x44, 0xa3, 0x51, 0x44, 0x22, 0x11, 0x0c, 0x0f, 0x0f, 0xef, 0xf9,
    0x3c, 0x97, 0x2f, 0x5f, 0xae, 0x66, 0xb3, 0x59, 0x2c, 0x2e, 0x2e, 0xe2,
    0xc3, 0x87, 0x0f, 0xb0, 0x2c, 0x0b, 0xae, 0xeb, 0x82, 0xe3, 0x38, 0xf4,
    0xf6, 0xf6, 0x62, 0x61, 0x61, 0xa1, 0x9b, 0x52, 0x3a, 0x9f, 0xc9, 0x64,
    0x6c, 0x00, 0x20, 0xdb, 0x22, 0x6c, 0x3a, 0x7d, 0xfa, 0xf4, 0xb3, 0x7b,
    0xf7, 0xee, 0x41, 0xd3, 0x34, 0xb0, 0x2c, 0x8b, 0x68, 0x34, 0x8a, 0xab,
    0x57, 0xaf, 0xa2, 0xad, 0xad, 0xed, 0x47, 0x8e, 0xe3, 0x0e, 0xd5, 0x93,
    0x02, 0xc0, 0xf0, 0xf0, 0x30, 0xc3, 0xb2, 0xec, 0x21, 0x59, 0x96, 0xfb,
    0x86, 0x86, 0x86, 0xd0, 0xde, 0xde, 0x0e, 0x9e, 0xe7, 0xa1, 0xeb, 0x3a,
    0xc6, 0xc7, 0xc7, 0x91, 0x4c, 0x26, 0xa7, 0xfd, 0x7e, 0xbf, 0x54, 0x4b,
    0x96, 0x01, 0x80, 0xae, 0xae, 0x2e, 0xce, 0xe7, 0xf3, 0x9d, 0x58, 0x59,
    0x59, 0x99, 0xc8, 0xe5, 0x72, 0x60, 0x59, 0x16, 0x8a, 0xa2, 0xc0, 0x30,
    0x8c, 0x41, 0xaf, 0xd7, 0x3b, 0x75, 0xe3, 0xc6, 0x8d, 0xe5, 0x7a, 0xc2,
    0xbd, 0x38, 0x7b, 0xf6, 0x6c, 0x0b, 0xa5, 0xb4, 0x47, 0x10, 0x84, 0xdb,
    0xaa, 0xaa, 0xc2, 0xb6, 0x6d, 0x84, 0xc3, 0x61, 0xb4, 0xb6, 0xb6, 0xfe,
    0xb0, 0xb1, 0xb1, 0xa1, 0x66, 0x32, 0x19, 0x9b, 0x00, 0x40, 0x30, 0x18,
    0xf4, 0xcb, 0xb2, 0x3c, 0x51, 0x2a, 0x95, 0x50, 0xad, 0x56, 0x11, 0x8b,
    0xc5, 0x60, 0x18, 0xc6, 0xa0, 0xcf, 0xe7, 0x4b, 0xef, 0x57, 0x0a, 0x00,
    0x37, 0x6f, 0xde, 0x5c, 0x15, 0x45, 0x71, 0xdc, 0x30, 0x8c, 0xc1, 0x58,
    0x2c, 0x06, 0x86, 0x61, 0xa0, 0x69, 0x1a, 0x64, 0x59, 0xfe, 0x5b, 0x96,
    0x65, 0x3f, 0x00, 0x10, 0x45, 0x51, 0x58, 0x86, 0x61, 0xda, 0x67, 0x67,
    0x67, 0xa1, 0xeb, 0x3a, 0x00, 0xc0, 0x34, 0xcd, 0xdf, 0xbd, 0x5e, 0xef,
    0xd3, 0xb1, 0xb1, 0xb1, 0xe2, 0x7e, 0xa5, 0x35, 0xc6, 0xc6, 0xc6, 0x36,
    0xbd, 0x5e, 0xef, 0x53, 0xcb, 0xb2, 0x46, 0x00, 0xc0, 0x30, 0x0c, 0xcc,
    0xcd, 0xcd, 0xa1, 0x52, 0xa9, 0x74, 0x9c, 0x3f, 0x7f, 0x9e, 0x27, 0x00,
    0x04, 0x4a, 0xe9, 0xf7, 0xeb, 0xeb, 0xeb, 0x5b, 0x05, 0x51, 0x8f, 0x54,
    0x2a, 0xc5, 0x7f, 0x49, 0x10, 0xae, 0xeb, 0xc2, 0x34, 0x4d, 0xac, 0xaf,
    0xaf, 0xc3, 0x71, 0x9c, 0x2e, 0x00, 0x3c, 0x71, 0x1c, 0x87, 0x71, 0x5d,
    0x97, 0xd4, 0x5a, 0xc4, 0x71, 0x1c, 0xf0, 0x3c, 0xff, 0x8b, 0x61, 0x18,
    0xf1, 0x54, 0x2a, 0x15, 0xd8, 0x2e, 0x35, 0x4d, 0xf3, 0xdb, 0xcf, 0x95,
    0xa5, 0x52, 0xa9, 0x06, 0xc3, 0x30, 0xe2, 0x3c, 0xcf, 0xff, 0x5c, 0x2e,
    0x97, 0xb7, 0x5a, 0x90, 0x10, 0xc2, 0x50, 0x4a, 0x19, 0x96, 0xe3, 0x38,
    0xd3, 0x75, 0xdd, 0x69, 0x49, 0x92, 0x50, 0x2c, 0x16, 0x61, 0x59, 0x16,
    0xe6, 0xe7, 0xe7, 0x91, 0x4c, 0x26, 0x6f, 0xe9, 0xba, 0x3e, 0x78, 0xee,
    0xdc, 0xb9, 0x29, 0x86, 0x61, 0xd6, 0x01, 0x04, 0x2c, 0xcb, 0xea, 0x95,
    0x65, 0xf9, 0xc9, 0xd2, 0xd2, 0x52, 0xdd, 0xea, 0x4e, 0xa5, 0x52, 0xbc,
    0xeb, 0xba, 0x8d, 0xa6, 0x69, 0xf6, 0x88, 0xa2, 0x78, 0xeb, 0xe1, 0xc3,
    0x87, 0xa0, 0x94, 0x42, 0x10, 0x04, 0x84, 0x42, 0x21, 0x70, 0x1c, 0x37,
    0xeb, 0xf1, 0x78, 0x28, 0x51, 0x55, 0xb5, 0xcc, 0x71, 0xdc, 0x62, 0x2c,
    0x16, 0x83, 0xd7, 0xeb, 0x05, 0x00, 0x14, 0x8b, 0x45, 0xa4, 0xd3, 0x69,
    0xe4, 0x72, 0xb9, 0x5b, 0xdd, 0xdd, 0xdd, 0xef, 0x0d, 0xc3, 0x48, 0x5a,
    0x96, 0x25, 0x1b, 0x86, 0x11, 0xdb, 0xdc, 0xdc, 0x44, 0x38, 0x1c, 0xae,
    0xd6, 0x13, 0x1b, 0x86, 0x71, 0xec, 0xe8, 0xd1, 0xa3, 0x2b, 0xab, 0xab,
    0xab, 0xb7, 0xd3, 0xe9, 0x34, 0x8a, 0xc5, 0x22, 0x18, 0x86, 0x41, 0x43,
    0x43, 0x03, 0xe2, 0xf1, 0x38, 0x38, 0x8e, 0x5b, 0x18, 0x1d, 0x1d, 0xb5,
    0x59, 0x00, 0xa8, 0x54, 0x2a, 0xc5, 0x37, 0x6f, 0xde, 0xfc, 0x14, 0x0c,
    0x06, 0xff, 0xdc, 0xdc, 0xdc, 0x84, 0x65, 0x59, 0x28, 0x14, 0x0a, 0x78,
    0xfe, 0xfc, 0x39, 0xde, 0xbe, 0x7d, 0x8b, 0xe6, 0xe6, 0xe6, 0xbf, 0xda,
    0xda, 0xda, 0x40, 0x08, 0x81, 0xa6, 0x69, 0xb0, 0x6d, 0x1b, 0x92, 0x24,
    0x55, 0x37, 0x36, 0x36, 0x76, 0x67, 0x5e, 0xbd, 0x73, 0xe7, 0x0e, 0x1e,
    0x3f, 0x7e, 0x8c, 0x62, 0xb1, 0xb8, 0x35, 0x5a, 0x6b, 0x43, 0x28, 0x97,
    0xcb, 0xf5, 0x57, 0x2a, 0x95, 0x22, 0xf0, 0xdf, 0x00, 0x51, 0x55, 0xd5,
    0x22, 0x84, 0xcc, 0x9d, 0x39, 0x73, 0x06, 0x7e, 0xbf, 0x1f, 0x84, 0x90,
    0xad, 0x82, 0xc8, 0xe5, 0x72, 0x78, 0xf9, 0xf2, 0x25, 0x54, 0x55, 0xc5,
    0xf4, 0xf4, 0x34, 0x2c, 0xcb, 0x42, 0xa5, 0x52, 0x41, 0x3e, 0x9f, 0x87,
    0x24, 0x49, 0x1f, 0x65, 0xde, 0xda, 0xda, 0x8a, 0x5c, 0x2e, 0x07, 0xd3,
    0x34, 0xe1, 0xba, 0x2e, 0x08, 0x21, 0x68, 0x6c, 0x6c, 0xc4, 0xc0, 0xc0,
    0x00, 0x3c, 0x1e, 0xcf, 0x7c, 0x4f, 0x4f, 0x8f, 0x03, 0xec, 0x1c, 0x99,
    0x82, 0xe3, 0x38, 0x89, 0x83, 0x07, 0x0f, 0x4e, 0xa6, 0xd3, 0x69, 0x94,
    0x4a, 0x25, 0xd8, 0xb6, 0xfd, 0xc9, 0x2a, 0x27, 0x84, 0xa0, 0xa5, 0xa5,
    0x05, 0xd9, 0x6c, 0xb6, 0x76, 0x4e, 0x35, 0x10, 0x08, 0xa0, 0x54, 0x2a,
    0x81, 0x61, 0x18, 0x78, 0x3c, 0x1e, 0x04, 0x02, 0x01, 0xf4, 0xf5, 0xf5,
    0xa1, 0x50, 0x28, 0x1c, 0x17, 0x04, 0x61, 0x66, 0x74, 0x74, 0x74, 0xe7,
    0xc8, 0x54, 0x55, 0xd5, 0xa2, 0x94, 0xce, 0x2e, 0x2f, 0x2f, 0x9f, 0xb8,
    0x72, 0xe5, 0x0a, 0x3a, 0x3a, 0x3a, 0xd0, 0xdc, 0xdc, 0x0c, 0x51, 0x14,
    0x41, 0x08, 0xd9, 0x53, 0xbc, 0x17, 0x3c, 0xcf, 0xc3, 0xe7, 0xf3, 0x21,
    0x1c, 0x0e, 0xe3, 0xf0, 0xe1, 0xc3, 0x18, 0x1a, 0x1a, 0x42, 0x3e, 0x9f,
    0x3f, 0x26, 0x08, 0xc2, 0x93, 0x9a, 0x74, 0x47, 0xc6, 0x35, 0x12, 0x89,
    0x04, 0x27, 0x8a, 0x62, 0x90, 0x10, 0xd2, 0x19, 0x8f, 0xc7, 0xd3, 0x0f,
    0x1e, 0x3c, 0xc0, 0xca, 0xca, 0x0a, 0x4c, 0xd3, 0x04, 0xa5, 0x74, 0xeb,
    0xb7, 0xaa, 0x5d, 0xe1, 0xae, 0x77, 0xae, 0x46, 0xa3, 0x51, 0x04, 0x83,
    0x41, 0x9c, 0x3c, 0x79, 0x12, 0x0b, 0x0b, 0x0b, 0x0a, 0x21, 0x24, 0xa3,
    0x69, 0x5a, 0xe1, 0x93, 0xdf, 0xe2, 0xee, 0x00, 0x9a, 0x9a, 0x9a, 0x1a,
    0x1d, 0xc7, 0xe9, 0xec, 0xef, 0xef, 0x9f, 0x98, 0x9a, 0x9a, 0x42, 0x26,
    0x93, 0xc1, 0xe2, 0xe2, 0x22, 0x1c, 0xc7, 0x41, 0x30, 0x18, 0xdc, 0x2d,
    0xdd, 0x17, 0x5f, 0xd5, 0xdb, 0xc8, 0x66, 0xb3, 0xee, 0xd2, 0xd2, 0x92,
    0x2e, 0x49, 0xd2, 0xfb, 0x57, 0xaf, 0x5e, 0xfd, 0x66, 0xdb, 0xf6, 0x1f,
    0xe5, 0x72, 0x99, 0xd5, 0x75, 0x3d, 0x21, 0x8a, 0x62, 0x5d, 0xe9, 0xc0,
    0xc0, 0x80, 0xf7, 0xc0, 0x81, 0x03, 0xc8, 0x66, 0xb3, 0xf5, 0x8b, 0x63,
    0x3f, 0x24, 0x12, 0x89, 0x40, 0x22, 0x91, 0xf8, 0x35, 0x12, 0x89, 0xd4,
    0xed, 0xe1, 0xfd, 0xf0, 0xf9, 0x55, 0x03, 0x18, 0x94, 0xd2, 0x89, 0xe5,
    0xe5, 0xe5, 0x2f, 0xbe, 0xde, 0xed, 0xfc, 0x0b, 0xff, 0x3e, 0x8d, 0x2e,
    0x6a, 0x3a, 0x39, 0x85, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

static const unsigned char image5_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x01,
    0x33, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xed, 0xd4, 0xbf, 0x4a, 0x03,
    0x41, 0x10, 0xc7, 0xf1, 0x8f, 0x21, 0x41, 0xfc, 0x53, 0x09, 0x2a, 0x88,
    0x4d, 0x6a, 0x3b, 0x5b, 0x0b, 0x7b, 0x5f, 0x20, 0x8d, 0x4f, 0xa0, 0xd8,
    0x8a, 0x0f, 0xa0, 0x58, 0x58, 0x6a, 0x69, 0x61, 0x61, 0x61, 0xed, 0x1b,
    0x08, 0x82, 0x85, 0x01, 0x45, 0x2c, 0xc4, 0x3f, 0x85, 0x85, 0x85, 0x46,
    0x10, 0x0d, 0xe2, 0x1f, 0x14, 0x2d, 0xee, 0x84, 0x73, 0xd9, 0xe4, 0x2e,
    0x0a, 0x56, 0xfe, 0x60, 0xe0, 0x66, 0x98, 0xf9, 0xee, 0xec, 0xce, 0xde,
    0xf2, 0xaf, 0x02, 0xaa, 0x62, 0x05, 0x87, 0x68, 0xe2, 0x0d, 0x77, 0xb8,
    0xc2, 0x05, 0x4e, 0x71, 0x8d, 0x06, 0x36, 0x8a, 0x42, 0x67, 0xf0, 0x82,
    0x8f, 0x36, 0xf6, 0x8e, 0x7b, 0xd4, 0x8b, 0x42, 0xa7, 0x72, 0x80, 0x59,
    0x7b, 0x68, 0x05, 0x29, 0x47, 0x62, 0xf3, 0x81, 0x5f, 0xc7, 0x26, 0x6e,
    0x31, 0x82, 0xd1, 0xf4, 0xfb, 0x0c, 0x5b, 0x45, 0xbb, 0x25, 0x39, 0xcf,
    0x6c, 0x57, 0xd5, 0x4e, 0x8a, 0xbf, 0x54, 0x8a, 0xc4, 0x2a, 0x81, 0x3f,
    0x8b, 0xa1, 0x9f, 0xc0, 0x43, 0xed, 0x8a, 0x0f, 0x6a, 0x1f, 0x4b, 0x98,
    0x8c, 0x2c, 0x5e, 0x48, 0x13, 0x78, 0x8c, 0xc0, 0xb3, 0xd6, 0xc4, 0x36,
    0xa6, 0xc5, 0xe7, 0xd4, 0x52, 0x55, 0xac, 0x4a, 0xee, 0x69, 0xde, 0xcd,
    0xd8, 0xc7, 0x40, 0xa7, 0xdd, 0x97, 0xd2, 0x1d, 0x2c, 0xe3, 0xb8, 0x0d,
    0x7c, 0xbd, 0x53, 0x70, 0xa8, 0x2a, 0xe6, 0x70, 0x12, 0x80, 0x1b, 0xbf,
    0x05, 0x67, 0x17, 0xc8, 0x82, 0x9f, 0xc3, 0x84, 0xd8, 0x75, 0xcb, 0x53,
    0x59, 0x32, 0xb4, 0xac, 0x2e, 0xf2, 0x8a, 0xfa, 0x30, 0x86, 0x73, 0xdf,
    0x07, 0xf7, 0x2a, 0xf9, 0x7d, 0x2f, 0xd3, 0xee, 0xc2, 0x33, 0x5e, 0xc8,
    0x03, 0xd7, 0x24, 0xaf, 0x58, 0xac, 0xb8, 0x95, 0xed, 0xa0, 0x3b, 0x04,
    0x75, 0x05, 0xfe, 0x41, 0xda, 0xf5, 0x8d, 0xe4, 0x75, 0xeb, 0xc7, 0x30,
    0x7a, 0x83, 0xbc, 0xc1, 0x74, 0x07, 0x6b, 0x58, 0xc4, 0x53, 0x1e, 0xb8,
    0x86, 0xf1, 0x48, 0x3c, 0x9b, 0x7f, 0x85, 0x23, 0xec, 0xc5, 0x80, 0xed,
    0x54, 0x41, 0x4f, 0x27, 0x05, 0x7f, 0xaa, 0x4f, 0x01, 0xea, 0x7b, 0xd4,
    0xf9, 0x78, 0x14, 0xab, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

static const unsigned char image6_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x26, 0x94, 0x4e, 0x3a, 0x00, 0x00, 0x00,
    0x49, 0x49, 0x44, 0x41, 0x54, 0x28, 0x91, 0x63, 0x60, 0x18, 0x68, 0xf0,
    0x1f, 0x8a, 0x09, 0x02, 0x26, 0x12, 0x0c, 0x24, 0x59, 0x23, 0x56, 0x17,
    0x10, 0xd2, 0x08, 0xd3, 0xc4, 0x48, 0x8a, 0x46, 0x9c, 0x9a, 0xb0, 0x09,
    0x12, 0x15, 0x30, 0x0c, 0x0c, 0x0c, 0x8c, 0xc4, 0x06, 0x0e, 0x06, 0x60,
    0xc1, 0x65, 0x22, 0x03, 0x01, 0xa7, 0xe2, 0xb3, 0x11, 0xa6, 0x81, 0xac,
    0x50, 0xc5, 0xa9, 0x99, 0x18, 0x3f, 0x92, 0xec, 0x54, 0x82, 0x9a, 0xe9,
    0x0b, 0x00, 0x7d, 0x45, 0x0a, 0x17, 0x2e, 0x17, 0xe6, 0x88, 0x00, 0x00,
    0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image7_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x26, 0x94, 0x4e, 0x3a, 0x00, 0x00, 0x00,
    0x49, 0x49, 0x44, 0x41, 0x54, 0x28, 0x91, 0x63, 0x60, 0x18, 0xac, 0xe0,
    0x3f, 0x14, 0xc3, 0x01, 0x13, 0x0e, 0x45, 0x04, 0x01, 0x36, 0x8d, 0x44,
    0x69, 0xc6, 0xa6, 0x91, 0x91, 0x18, 0xcd, 0xb8, 0x6c, 0x24, 0xa8, 0x99,
    0x28, 0xd3, 0xb1, 0xa8, 0xc7, 0x69, 0x23, 0x45, 0x00, 0x39, 0x0a, 0x88,
    0x8a, 0x0e, 0x06, 0x24, 0x45, 0x8c, 0x38, 0xe4, 0xf1, 0xc6, 0x23, 0x4e,
    0x4d, 0xf8, 0x6c, 0xc4, 0xab, 0x09, 0x97, 0x46, 0x82, 0x9a, 0x06, 0x06,
    0x00, 0x00, 0xc1, 0x5a, 0x0d, 0x0e, 0xf2, 0xdf, 0x0b, 0x87, 0x00, 0x00,
    0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const char* const image8_data[] = { 
"20 34 4 1",
". c #000000",
"# c #414c83",
"b c #838dc5",
"a c #c5daff",
"....................",
"....................",
".....#aaaaaaaaaaaab#",
".....baaaaaaaaaab#..",
"....#.#...........b.",
"...#a#...........#ab",
"...#aab..........#ab",
"...#aab.........#aab",
"...baa#.........baa#",
"...baa#.........baa#",
"...baa#.........baa#",
"..#aab.........#aab.",
"..#aab.........#aab.",
"..#aab.........#aab.",
"..baa#.........baa#.",
"..ba#..........#ba#.",
"..b#............#b#.",
"....................",
".#b#............#b..",
".#ab#..........#ab..",
".#aab.........#aab..",
".baa#.........baa#..",
".baa#.........baa#..",
".baa#.........baa#..",
"#aab.........#aab...",
"#aab.........#aab...",
"#aab.........#aab...",
"baa#.........baa#...",
"ba#..........baa#...",
"ba#...........#a#...",
".b...........#.#....",
"..#baaaaaaaaaab.....",
"#baaaaaaaaaaaab#....",
"...................."};

static const char* const image9_data[] = { 
"5 34 4 1",
". c #000000",
"# c #414c83",
"b c #838dc5",
"a c #c5daff",
".....",
".....",
".....",
".....",
".....",
".....",
".....",
".....",
".....",
".....",
".....",
".....",
".#aab",
".baa#",
".....",
".....",
".....",
".....",
".....",
".....",
".....",
"#aab.",
"baa#.",
".....",
".....",
".....",
".....",
".....",
".....",
".....",
".....",
".....",
".....",
"....."};

static const char* const image10_data[] = { 
"20 34 4 1",
". c #000000",
"# c #414c83",
"a c #838dc5",
"b c #c5daff",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"......##aaaaa#......",
".....bbbbbbbbbb.....",
"......#aaaaa##......",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"....................",
"...................."};

static const unsigned char image11_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0b,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xa9, 0xac, 0x77, 0x26, 0x00, 0x00, 0x00,
    0x1a, 0x49, 0x44, 0x41, 0x54, 0x18, 0x95, 0x63, 0x60, 0x20, 0x13, 0xfc,
    0x87, 0x62, 0x9c, 0x62, 0x4c, 0xa4, 0x98, 0x36, 0xaa, 0x98, 0x6c, 0xc5,
    0x24, 0x01, 0x00, 0xb3, 0x19, 0x04, 0x0d, 0xb6, 0x5c, 0xea, 0x05, 0x00,
    0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image12_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0b,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xa9, 0xac, 0x77, 0x26, 0x00, 0x00, 0x00,
    0x38, 0x49, 0x44, 0x41, 0x54, 0x18, 0x95, 0x63, 0x60, 0xa0, 0x15, 0x60,
    0x84, 0xd2, 0xff, 0x89, 0x51, 0xcb, 0x82, 0xc4, 0xf1, 0xc1, 0xa3, 0x70,
    0x0b, 0x32, 0xc7, 0x1b, 0x8f, 0xe9, 0xff, 0xa1, 0xf2, 0x28, 0x00, 0x9b,
    0x06, 0xac, 0x0a, 0xb1, 0x69, 0xc0, 0xab, 0x10, 0xae, 0x81, 0x83, 0x85,
    0x83, 0x28, 0x85, 0xc8, 0x36, 0xd0, 0x11, 0x00, 0x00, 0x71, 0x46, 0x0b,
    0xb6, 0x4f, 0x8d, 0x4c, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image13_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0xbf, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xed, 0xd3, 0xb1, 0x6a, 0x42,
    0x31, 0x18, 0x40, 0xe1, 0x8f, 0xe2, 0xe0, 0x50, 0xe8, 0x2c, 0x38, 0xf7,
    0x11, 0x0a, 0x6e, 0xb6, 0x60, 0x1d, 0xdc, 0xfa, 0x76, 0x7d, 0x81, 0xce,
    0x5d, 0xba, 0x74, 0xea, 0x26, 0x14, 0x3a, 0x17, 0xba, 0xb9, 0x58, 0x57,
    0x27, 0x47, 0x1d, 0x22, 0x22, 0x36, 0xf9, 0xd3, 0xe8, 0xe2, 0xe0, 0x81,
    0x4b, 0x86, 0x73, 0x73, 0x12, 0xfe, 0xcb, 0xe5, 0xc2, 0x39, 0x70, 0x8b,
    0xa7, 0x23, 0x5c, 0x35, 0x3a, 0xc7, 0x73, 0xa3, 0x73, 0x15, 0x44, 0xef,
    0x30, 0x45, 0xaf, 0xd1, 0x81, 0x4e, 0x10, 0x7d, 0xc7, 0x4d, 0xa3, 0xdb,
    0x91, 0xbb, 0xf1, 0xc9, 0xd1, 0x5c, 0xf8, 0x21, 0xd8, 0x18, 0xb9, 0x3f,
    0xec, 0x8f, 0x62, 0x8c, 0x57, 0x74, 0x33, 0xef, 0xf5, 0xf1, 0x56, 0x70,
    0x55, 0x16, 0x58, 0x17, 0x9e, 0x55, 0xe0, 0x5e, 0x72, 0xb1, 0xfd, 0x51,
    0x4c, 0xf0, 0x5b, 0x38, 0xf4, 0x33, 0x70, 0xd7, 0xb5, 0xf0, 0x17, 0x86,
    0x85, 0xc0, 0x32, 0x70, 0x59, 0x0e, 0x3f, 0xde, 0x0f, 0x06, 0xdb, 0xf5,
    0x90, 0xc8, 0x55, 0xc3, 0x30, 0xc3, 0x3d, 0xbe, 0x1b, 0x5d, 0x35, 0x4c,
    0xfa, 0x55, 0x07, 0xd2, 0x6c, 0x5b, 0x5c, 0x35, 0x4c, 0x9a, 0xeb, 0x23,
    0x3e, 0x1a, 0xdd, 0xbf, 0xe9, 0x62, 0x74, 0x84, 0xbb, 0x90, 0xd8, 0x00,
    0x42, 0xac, 0x34, 0x05, 0xa2, 0xaa, 0x17, 0x21, 0x00, 0x00, 0x00, 0x00,
    0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image14_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0xa9, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xed, 0xd3, 0x21, 0x0a, 0x02,
    0x41, 0x14, 0x06, 0xe0, 0x0f, 0x31, 0x6c, 0x50, 0xbc, 0x85, 0x47, 0x10,
    0x6c, 0x2a, 0xa8, 0xc1, 0xe6, 0xdd, 0x14, 0x8c, 0xde, 0xc0, 0x6c, 0x32,
    0x0b, 0x66, 0xc1, 0x66, 0xd1, 0x64, 0xf0, 0x04, 0x6b, 0x70, 0xc3, 0xb2,
    0xe8, 0x30, 0xbb, 0x2a, 0x88, 0xf8, 0xc3, 0xf0, 0xc2, 0x9b, 0xf9, 0xe6,
    0x31, 0x30, 0xfc, 0xf3, 0xed, 0x69, 0x63, 0x5a, 0xe6, 0xc0, 0x0c, 0x69,
    0x56, 0x43, 0xe8, 0x09, 0x8b, 0x32, 0x70, 0x9a, 0x5b, 0x8f, 0xd2, 0xc1,
    0x25, 0xeb, 0x3f, 0x84, 0xeb, 0x65, 0x6e, 0xcb, 0xa1, 0x6b, 0xb4, 0x42,
    0x9b, 0x6a, 0x9f, 0x40, 0xcb, 0xc2, 0x83, 0x58, 0x94, 0xf8, 0xa7, 0x18,
    0x63, 0x85, 0x24, 0x76, 0x8a, 0xd8, 0x89, 0x97, 0x01, 0xb4, 0xf9, 0x0a,
    0x3c, 0xc1, 0xf9, 0x49, 0xaf, 0xf1, 0x0a, 0xbc, 0x43, 0x2f, 0x80, 0x57,
    0x86, 0xe1, 0x80, 0x6e, 0x56, 0xdf, 0x0a, 0xc3, 0x11, 0x7d, 0xec, 0xdf,
    0x0d, 0x73, 0xff, 0xc6, 0x5d, 0x6c, 0xab, 0xc0, 0xf3, 0x42, 0x2d, 0xe6,
    0x8a, 0x11, 0x36, 0x15, 0x06, 0x8b, 0x4a, 0x82, 0xe1, 0xa7, 0xf0, 0x1f,
    0xc9, 0x0d, 0xab, 0x2a, 0x1b, 0x48, 0x17, 0xa9, 0x2d, 0xca, 0x00, 0x00,
    0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image15_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x14,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xe5, 0x7a, 0x9f, 0x35, 0x00, 0x00, 0x00,
    0xb7, 0x49, 0x44, 0x41, 0x54, 0x48, 0x89, 0xed, 0xd4, 0xb1, 0x09, 0xc2,
    0x40, 0x18, 0x86, 0xe1, 0x07, 0xc5, 0x46, 0xb4, 0xb3, 0x72, 0x03, 0x3b,
    0x47, 0xb0, 0x71, 0x0d, 0x67, 0x71, 0x0d, 0x4b, 0x57, 0x70, 0x09, 0xb1,
    0xb2, 0xb6, 0x13, 0x84, 0x34, 0xe2, 0x02, 0x36, 0xb1, 0x30, 0x01, 0x95,
    0xe4, 0x4c, 0x88, 0x26, 0x29, 0xf2, 0xc2, 0x0f, 0xc7, 0x1d, 0x1f, 0xbc,
    0xf7, 0x1d, 0x1c, 0x1d, 0x61, 0xfa, 0x81, 0xb3, 0x09, 0xa2, 0x64, 0xbd,
    0x47, 0xfc, 0x7f, 0x9d, 0x30, 0xd3, 0x44, 0x22, 0xc6, 0x01, 0xb3, 0x66,
    0x75, 0xde, 0x85, 0x62, 0xdc, 0xb1, 0xc6, 0xa0, 0x40, 0xf6, 0x35, 0x17,
    0x05, 0xf6, 0x2a, 0x09, 0xa5, 0x73, 0xc4, 0xbc, 0x4d, 0x42, 0x45, 0xda,
    0xaa, 0x5d, 0x28, 0x9d, 0x13, 0x96, 0x6d, 0x12, 0x4a, 0x67, 0x83, 0x71,
    0x9b, 0x84, 0x62, 0x5c, 0xb0, 0xa8, 0x2a, 0xd4, 0x0b, 0x08, 0x5d, 0x4b,
    0x5e, 0x60, 0x88, 0x51, 0xc9, 0x4c, 0x69, 0x8a, 0xb6, 0xb3, 0xf3, 0x6c,
    0x34, 0x2b, 0xf7, 0xb3, 0x27, 0x2b, 0x22, 0x74, 0xc3, 0xea, 0x4b, 0xae,
    0x36, 0xa1, 0xcf, 0x56, 0x1a, 0x13, 0xca, 0x6b, 0xa5, 0x11, 0xa1, 0xad,
    0xfc, 0x56, 0x6a, 0x15, 0x3a, 0xcb, 0xfe, 0x00, 0x6b, 0x27, 0xeb, 0xd3,
    0xeb, 0x68, 0x94, 0x07, 0x2e, 0x56, 0xba, 0x37, 0x45, 0xbe, 0xfe, 0x0b,
    0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image16_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x14,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xe5, 0x7a, 0x9f, 0x35, 0x00, 0x00, 0x00,
    0x30, 0x49, 0x44, 0x41, 0x54, 0x48, 0x89, 0xed, 0xce, 0xb1, 0x0d, 0x00,
    0x00, 0x08, 0x02, 0x41, 0x75, 0xff, 0x9d, 0x75, 0x04, 0x12, 0x09, 0xdd,
    0x5f, 0x4f, 0xf8, 0x2a, 0xc0, 0xd3, 0xc6, 0x76, 0x13, 0x1f, 0xf3, 0x08,
    0x89, 0x22, 0x48, 0x21, 0x48, 0x21, 0x48, 0x21, 0x48, 0x21, 0x08, 0x48,
    0x3b, 0x65, 0x5f, 0x01, 0x18, 0xdc, 0xa7, 0xdb, 0x05, 0x00, 0x00, 0x00,
    0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image17_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0xc0, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xed, 0xd3, 0x3d, 0x6a, 0x42,
    0x41, 0x14, 0x40, 0xe1, 0x8f, 0x68, 0x91, 0x42, 0x10, 0xec, 0xdc, 0x80,
    0x4b, 0x10, 0xd2, 0x49, 0x30, 0x5a, 0xa4, 0x73, 0x77, 0x6e, 0x20, 0x3b,
    0xb0, 0xb1, 0xb2, 0x0b, 0x08, 0xa9, 0x03, 0x59, 0x80, 0xa6, 0xb1, 0xb0,
    0xb2, 0x12, 0x53, 0xf8, 0x43, 0xc0, 0x37, 0x77, 0xde, 0x08, 0x76, 0x1e,
    0x18, 0x06, 0xe6, 0x30, 0x87, 0xcb, 0xc0, 0xf0, 0xe0, 0xde, 0x34, 0x12,
    0xe7, 0x13, 0xec, 0xb1, 0x29, 0x74, 0x59, 0xa6, 0x58, 0xa1, 0x57, 0xe8,
    0x2e, 0x3c, 0x05, 0xae, 0x8b, 0x4f, 0xf4, 0x0b, 0x5d, 0x36, 0x0c, 0x1d,
    0xcc, 0x13, 0x81, 0xc8, 0x65, 0xc3, 0xd0, 0x0e, 0x02, 0x49, 0x57, 0x27,
    0xfc, 0x3f, 0xf0, 0x5a, 0xe8, 0xae, 0x98, 0xe2, 0x50, 0xb1, 0x76, 0x98,
    0x05, 0x6e, 0x9c, 0x0b, 0x7f, 0x24, 0x2e, 0x9f, 0x03, 0x29, 0xf7, 0x7b,
    0x0e, 0xa4, 0x9e, 0xa2, 0x95, 0x38, 0x5f, 0x63, 0x19, 0xb8, 0xf7, 0x5c,
    0x38, 0x75, 0x71, 0x80, 0x6d, 0xe0, 0xbe, 0x4a, 0xc3, 0x3f, 0x78, 0x39,
    0xed, 0xb5, 0x5c, 0xb3, 0x46, 0xf4, 0x1b, 0x43, 0xc7, 0xdf, 0x56, 0xdb,
    0xe5, 0x26, 0x5e, 0x9e, 0xa6, 0xa9, 0x8a, 0x46, 0x2e, 0x0c, 0x2f, 0x30,
    0x52, 0xfd, 0xa6, 0x91, 0x0b, 0x79, 0xc3, 0xf3, 0x0d, 0xee, 0xc1, 0x35,
    0x7f, 0x84, 0x47, 0x43, 0x43, 0xc1, 0xd3, 0x03, 0x12, 0x00, 0x00, 0x00,
    0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image18_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0xba, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xed, 0xd3, 0x31, 0x6a, 0x02,
    0x41, 0x14, 0x87, 0xf1, 0x1f, 0x89, 0x45, 0x8a, 0x84, 0x80, 0x87, 0xf0,
    0x08, 0x82, 0x9d, 0x48, 0xd4, 0xc2, 0xce, 0xbb, 0x29, 0x58, 0xe6, 0x10,
    0x69, 0xac, 0xac, 0x73, 0x81, 0xc0, 0x1e, 0x40, 0x2b, 0x0b, 0x0f, 0x20,
    0x9b, 0x62, 0x15, 0x16, 0x65, 0xdc, 0xb7, 0xd9, 0x4d, 0xb7, 0x1f, 0x0c,
    0x03, 0x6f, 0x1e, 0xdf, 0xfb, 0x33, 0xcc, 0xd0, 0xf1, 0xdf, 0x3c, 0x27,
    0xea, 0x4b, 0x9c, 0x71, 0x6c, 0x7b, 0xe0, 0x06, 0x7b, 0x0c, 0x1e, 0xf4,
    0xac, 0x90, 0x5f, 0xf6, 0x5a, 0xe2, 0x5c, 0x91, 0x78, 0x98, 0xe8, 0xc9,
    0x4b, 0xeb, 0x8e, 0xa7, 0x8a, 0x01, 0x7d, 0x6c, 0x1f, 0xc8, 0x93, 0x54,
    0x89, 0xe1, 0xfd, 0x2f, 0xf2, 0x88, 0xb8, 0x2c, 0x9f, 0xb4, 0x2d, 0xbe,
    0xca, 0xbf, 0x30, 0x6f, 0x22, 0x7e, 0x4b, 0xd4, 0x5f, 0xf0, 0xd9, 0x44,
    0xfc, 0x9a, 0xa8, 0x1f, 0xb0, 0x88, 0x88, 0x7b, 0x91, 0xa6, 0x92, 0x74,
    0x8c, 0x2c, 0xd2, 0x1c, 0xbd, 0xe3, 0x0c, 0xa3, 0xa8, 0x94, 0x58, 0xe2,
    0x1f, 0x7c, 0x28, 0x7e, 0x62, 0x98, 0xaa, 0xc4, 0xdf, 0x8a, 0xa4, 0xb5,
    0xa4, 0x55, 0xe2, 0x1d, 0x66, 0x38, 0x25, 0xce, 0xd7, 0x37, 0x7b, 0x88,
    0xa9, 0xe2, 0x69, 0x75, 0x34, 0xe7, 0x17, 0x60, 0x2c, 0x1d, 0x33, 0xe8,
    0xc5, 0x9c, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    0x42, 0x60, 0x82
};

static const unsigned char image19_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0b,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xa9, 0xac, 0x77, 0x26, 0x00, 0x00, 0x00,
    0x62, 0x49, 0x44, 0x41, 0x54, 0x18, 0x95, 0xa5, 0xd0, 0xcb, 0x09, 0x80,
    0x40, 0x0c, 0x45, 0xd1, 0xa3, 0xb8, 0x74, 0x65, 0x93, 0xb6, 0x62, 0x3d,
    0xd6, 0x61, 0x1f, 0x82, 0x68, 0x09, 0x3a, 0x6e, 0x14, 0x46, 0x99, 0x51,
    0xc4, 0x07, 0x81, 0x7c, 0x6e, 0x42, 0x12, 0x7e, 0x2a, 0x24, 0xe2, 0x00,
    0xe5, 0x0b, 0x78, 0x51, 0x0c, 0x9f, 0x60, 0x91, 0x83, 0x8b, 0x1b, 0xd8,
    0x62, 0xc5, 0x86, 0x05, 0xfd, 0x7d, 0x48, 0x88, 0x6c, 0xc4, 0x1c, 0xef,
    0x19, 0xfb, 0xd5, 0xd1, 0x71, 0x16, 0x3a, 0x0c, 0xa8, 0xd1, 0x3c, 0xed,
    0x1f, 0x30, 0x65, 0xf2, 0xc9, 0xc3, 0x53, 0x85, 0xec, 0xeb, 0xb2, 0x9f,
    0xf8, 0xac, 0x1d, 0x37, 0xbc, 0x1e, 0x2a, 0x16, 0x24, 0x52, 0xd8, 0x00,
    0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};


/*
 *  Constructs a RosegardenTransport which is a child of 'parent', with the
 *  name 'name'.' 
 */
RosegardenTransport::RosegardenTransport( QWidget* parent,  const char* name )
    : QFrame( parent, name ),
      image8( (const char **) image8_data ),
      image9( (const char **) image9_data ),
      image10( (const char **) image10_data )
{
    QImage img;
    img.loadFromData( image0_data, sizeof( image0_data ), "PNG" );
    image0 = img;
    img.loadFromData( image1_data, sizeof( image1_data ), "PNG" );
    image1 = img;
    img.loadFromData( image2_data, sizeof( image2_data ), "PNG" );
    image2 = img;
    img.loadFromData( image3_data, sizeof( image3_data ), "PNG" );
    image3 = img;
    img.loadFromData( image4_data, sizeof( image4_data ), "PNG" );
    image4 = img;
    img.loadFromData( image5_data, sizeof( image5_data ), "PNG" );
    image5 = img;
    img.loadFromData( image6_data, sizeof( image6_data ), "PNG" );
    image6 = img;
    img.loadFromData( image7_data, sizeof( image7_data ), "PNG" );
    image7 = img;
    img.loadFromData( image11_data, sizeof( image11_data ), "PNG" );
    image11 = img;
    img.loadFromData( image12_data, sizeof( image12_data ), "PNG" );
    image12 = img;
    img.loadFromData( image13_data, sizeof( image13_data ), "PNG" );
    image13 = img;
    img.loadFromData( image14_data, sizeof( image14_data ), "PNG" );
    image14 = img;
    img.loadFromData( image15_data, sizeof( image15_data ), "PNG" );
    image15 = img;
    img.loadFromData( image16_data, sizeof( image16_data ), "PNG" );
    image16 = img;
    img.loadFromData( image17_data, sizeof( image17_data ), "PNG" );
    image17 = img;
    img.loadFromData( image18_data, sizeof( image18_data ), "PNG" );
    image18 = img;
    img.loadFromData( image19_data, sizeof( image19_data ), "PNG" );
    image19 = img;
    if ( !name )
	setName( "RosegardenTransport" );
    setFrameShape( QFrame::NoFrame );
    setFrameShadow( QFrame::Plain );

    RecordingFrame = new QFrame( this, "RecordingFrame" );
    RecordingFrame->setGeometry( QRect( 0, 87, 416, 47 ) );
    RecordingFrame->setFrameShape( QFrame::StyledPanel );
    RecordingFrame->setFrameShadow( QFrame::Raised );

    PanelCloseButton = new QPushButton( RecordingFrame, "PanelCloseButton" );
    PanelCloseButton->setGeometry( QRect( 3, 4, 25, 23 ) );
    QFont PanelCloseButton_font(  PanelCloseButton->font() );
    PanelCloseButton_font.setFamily( "lucida" );
    PanelCloseButton_font.setBold( TRUE );
    PanelCloseButton->setFont( PanelCloseButton_font ); 
    PanelCloseButton->setPixmap( image0 );
    PanelCloseButton->setFlat( TRUE );

    PanicButton = new QPushButton( RecordingFrame, "PanicButton" );
    PanicButton->setGeometry( QRect( 174, 4, 42, 38 ) );
    QFont PanicButton_font(  PanicButton->font() );
    PanicButton_font.setFamily( "lucidatypewriter" );
    PanicButton_font.setPointSize( 8 );
    PanicButton->setFont( PanicButton_font ); 
    PanicButton->setCursor( QCursor( 0 ) );
    PanicButton->setFocusPolicy( QPushButton::NoFocus );
    PanicButton->setPixmap( image1 );
    PanicButton->setToggleButton( FALSE );

    MetronomeButton = new QPushButton( RecordingFrame, "MetronomeButton" );
    MetronomeButton->setGeometry( QRect( 217, 4, 42, 38 ) );
    QFont MetronomeButton_font(  MetronomeButton->font() );
    MetronomeButton_font.setFamily( "lucidatypewriter" );
    MetronomeButton_font.setPointSize( 8 );
    MetronomeButton->setFont( MetronomeButton_font ); 
    MetronomeButton->setCursor( QCursor( 0 ) );
    MetronomeButton->setFocusPolicy( QPushButton::NoFocus );
    MetronomeButton->setPixmap( image2 );
    MetronomeButton->setToggleButton( TRUE );

    MidiEventFrame = new QFrame( RecordingFrame, "MidiEventFrame" );
    MidiEventFrame->setGeometry( QRect( 31, 7, 137, 34 ) );
    QPalette pal;
    QColorGroup cg;
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    MidiEventFrame->setPalette( pal );
    MidiEventFrame->setFrameShape( QFrame::StyledPanel );
    MidiEventFrame->setFrameShadow( QFrame::Sunken );

    InLabel = new QLabel( MidiEventFrame, "InLabel" );
    InLabel->setGeometry( QRect( 18, 1, 25, 16 ) );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    InLabel->setPalette( pal );
    QFont InLabel_font(  InLabel->font() );
    InLabel_font.setFamily( "lucida" );
    InLabel_font.setItalic( TRUE );
    InLabel->setFont( InLabel_font ); 

    OutLabel = new QLabel( MidiEventFrame, "OutLabel" );
    OutLabel->setGeometry( QRect( 8, 15, 25, 16 ) );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    OutLabel->setPalette( pal );
    QFont OutLabel_font(  OutLabel->font() );
    OutLabel_font.setFamily( "lucida" );
    OutLabel_font.setItalic( TRUE );
    OutLabel->setFont( OutLabel_font ); 

    InDisplay = new QLabel( MidiEventFrame, "InDisplay" );
    InDisplay->setGeometry( QRect( 40, 1, 82, 16 ) );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    InDisplay->setPalette( pal );
    QFont InDisplay_font(  InDisplay->font() );
    InDisplay_font.setFamily( "lucida" );
    InDisplay_font.setBold( TRUE );
    InDisplay->setFont( InDisplay_font ); 

    OutDisplay = new QLabel( MidiEventFrame, "OutDisplay" );
    OutDisplay->setGeometry( QRect( 40, 15, 82, 16 ) );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    OutDisplay->setPalette( pal );
    QFont OutDisplay_font(  OutDisplay->font() );
    OutDisplay_font.setFamily( "lucida" );
    OutDisplay_font.setBold( TRUE );
    OutDisplay->setFont( OutDisplay_font ); 

    RecordButton = new QPushButton( RecordingFrame, "RecordButton" );
    RecordButton->setGeometry( QRect( 370, 4, 42, 38 ) );
    RecordButton->setCursor( QCursor( 0 ) );
    RecordButton->setFocusPolicy( QPushButton::NoFocus );
    RecordButton->setPixmap( image3 );
    RecordButton->setToggleButton( TRUE );

    LoopButton = new QPushButton( RecordingFrame, "LoopButton" );
    LoopButton->setGeometry( QRect( 320, 4, 32, 38 ) );
    QFont LoopButton_font(  LoopButton->font() );
    LoopButton_font.setFamily( "lucidatypewriter" );
    LoopButton_font.setPointSize( 8 );
    LoopButton->setFont( LoopButton_font ); 
    LoopButton->setCursor( QCursor( 0 ) );
    LoopButton->setFocusPolicy( QPushButton::NoFocus );
    LoopButton->setPixmap( image4 );
    LoopButton->setToggleButton( TRUE );

    SoloButton = new QPushButton( RecordingFrame, "SoloButton" );
    SoloButton->setGeometry( QRect( 260, 4, 42, 38 ) );
    QFont SoloButton_font(  SoloButton->font() );
    SoloButton_font.setFamily( "lucidatypewriter" );
    SoloButton_font.setPointSize( 8 );
    SoloButton->setFont( SoloButton_font ); 
    SoloButton->setCursor( QCursor( 0 ) );
    SoloButton->setFocusPolicy( QPushButton::NoFocus );
    SoloButton->setPixmap( image5 );
    SoloButton->setToggleButton( TRUE );

    SetStartLPButton = new QPushButton( RecordingFrame, "SetStartLPButton" );
    SetStartLPButton->setGeometry( QRect( 303, 4, 16, 38 ) );
    SetStartLPButton->setPixmap( image6 );

    SetStopLPButton = new QPushButton( RecordingFrame, "SetStopLPButton" );
    SetStopLPButton->setGeometry( QRect( 353, 4, 16, 38 ) );
    SetStopLPButton->setPixmap( image7 );

    MainFrame = new QFrame( this, "MainFrame" );
    MainFrame->setGeometry( QRect( 0, 0, 416, 87 ) );
    MainFrame->setFrameShape( QFrame::StyledPanel );
    MainFrame->setFrameShadow( QFrame::Raised );

    LCDBoxFrame = new QFrame( MainFrame, "LCDBoxFrame" );
    LCDBoxFrame->setGeometry( QRect( 31, 7, 225, 71 ) );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, black );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    LCDBoxFrame->setPalette( pal );
    LCDBoxFrame->setFrameShape( QFrame::StyledPanel );
    LCDBoxFrame->setFrameShadow( QFrame::Sunken );

    UnitHoursPixmap = new QLabel( LCDBoxFrame, "UnitHoursPixmap" );
    UnitHoursPixmap->setGeometry( QRect( 39, 6, 20, 34 ) );
    UnitHoursPixmap->setPixmap( image8 );
    UnitHoursPixmap->setScaledContents( TRUE );

    HourColonPixmap = new QLabel( LCDBoxFrame, "HourColonPixmap" );
    HourColonPixmap->setGeometry( QRect( 59, 6, 5, 34 ) );
    HourColonPixmap->setPixmap( image9 );
    HourColonPixmap->setScaledContents( TRUE );

    TenMinutesPixmap = new QLabel( LCDBoxFrame, "TenMinutesPixmap" );
    TenMinutesPixmap->setGeometry( QRect( 64, 6, 20, 34 ) );
    TenMinutesPixmap->setPixmap( image8 );
    TenMinutesPixmap->setScaledContents( TRUE );

    UnitMinutesPixmap = new QLabel( LCDBoxFrame, "UnitMinutesPixmap" );
    UnitMinutesPixmap->setGeometry( QRect( 84, 6, 20, 34 ) );
    UnitMinutesPixmap->setPixmap( image8 );
    UnitMinutesPixmap->setScaledContents( TRUE );

    TenSecondsPixmap = new QLabel( LCDBoxFrame, "TenSecondsPixmap" );
    TenSecondsPixmap->setGeometry( QRect( 109, 6, 20, 34 ) );
    TenSecondsPixmap->setPixmap( image8 );
    TenSecondsPixmap->setScaledContents( TRUE );

    UnitSecondsPixmap = new QLabel( LCDBoxFrame, "UnitSecondsPixmap" );
    UnitSecondsPixmap->setGeometry( QRect( 129, 6, 20, 34 ) );
    UnitSecondsPixmap->setPixmap( image8 );
    UnitSecondsPixmap->setScaledContents( TRUE );

    HundredthsPixmap = new QLabel( LCDBoxFrame, "HundredthsPixmap" );
    HundredthsPixmap->setGeometry( QRect( 169, 16, 14, 24 ) );
    HundredthsPixmap->setPixmap( image8 );
    HundredthsPixmap->setScaledContents( TRUE );

    NegativePixmap = new QLabel( LCDBoxFrame, "NegativePixmap" );
    NegativePixmap->setGeometry( QRect( 2, 6, 20, 34 ) );
    NegativePixmap->setPixmap( image10 );
    NegativePixmap->setScaledContents( TRUE );

    TenHoursPixmap = new QLabel( LCDBoxFrame, "TenHoursPixmap" );
    TenHoursPixmap->setGeometry( QRect( 19, 6, 20, 34 ) );
    TenHoursPixmap->setPixmap( image8 );
    TenHoursPixmap->setScaledContents( TRUE );

    TimeSigLabel = new QLabel( LCDBoxFrame, "TimeSigLabel" );
    TimeSigLabel->setGeometry( QRect( 6, 51, 28, 16 ) );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    TimeSigLabel->setPalette( pal );
    QFont TimeSigLabel_font(  TimeSigLabel->font() );
    TimeSigLabel_font.setFamily( "lucida" );
    TimeSigLabel_font.setItalic( TRUE );
    TimeSigLabel->setFont( TimeSigLabel_font ); 

    DivisionLabel = new QLabel( LCDBoxFrame, "DivisionLabel" );
    DivisionLabel->setGeometry( QRect( 66, 51, 24, 16 ) );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    DivisionLabel->setPalette( pal );
    QFont DivisionLabel_font(  DivisionLabel->font() );
    DivisionLabel_font.setFamily( "lucida" );
    DivisionLabel_font.setItalic( TRUE );
    DivisionLabel->setFont( DivisionLabel_font ); 

    DivisionDisplay = new QLabel( LCDBoxFrame, "DivisionDisplay" );
    DivisionDisplay->setGeometry( QRect( 86, 51, 27, 16 ) );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    DivisionDisplay->setPalette( pal );
    QFont DivisionDisplay_font(  DivisionDisplay->font() );
    DivisionDisplay_font.setFamily( "lucida" );
    DivisionDisplay_font.setBold( TRUE );
    DivisionDisplay->setFont( DivisionDisplay_font ); 
    DivisionDisplay->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );

    TempoLabel = new QLabel( LCDBoxFrame, "TempoLabel" );
    TempoLabel->setGeometry( QRect( 124, 51, 43, 16 ) );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    TempoLabel->setPalette( pal );
    QFont TempoLabel_font(  TempoLabel->font() );
    TempoLabel_font.setFamily( "lucida" );
    TempoLabel_font.setItalic( TRUE );
    TempoLabel->setFont( TempoLabel_font ); 

    TimeSigDisplay = new Rosegarden::Label( LCDBoxFrame, "TimeSigDisplay" );
    TimeSigDisplay->setGeometry( QRect( 23, 51, 33, 16 ) );

    ToEndLabel = new QLabel( LCDBoxFrame, "ToEndLabel" );
    ToEndLabel->setGeometry( QRect( 192, 1, 28, 16 ) );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    ToEndLabel->setPalette( pal );
    QFont ToEndLabel_font(  ToEndLabel->font() );
    ToEndLabel_font.setFamily( "lucida" );
    ToEndLabel_font.setItalic( TRUE );
    ToEndLabel->setFont( ToEndLabel_font ); 
    ToEndLabel->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );

    TimeDisplayLabel = new QLabel( LCDBoxFrame, "TimeDisplayLabel" );
    TimeDisplayLabel->setGeometry( QRect( 157, 1, 35, 16 ) );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 223, 223, 223) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setActive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 192, 216, 255) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, black );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setInactive( cg );
    cg.setColor( QColorGroup::Foreground, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Button, QColor( 192, 192, 192) );
    cg.setColor( QColorGroup::Light, white );
    cg.setColor( QColorGroup::Midlight, QColor( 220, 220, 220) );
    cg.setColor( QColorGroup::Dark, QColor( 96, 96, 96) );
    cg.setColor( QColorGroup::Mid, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Text, black );
    cg.setColor( QColorGroup::BrightText, white );
    cg.setColor( QColorGroup::ButtonText, QColor( 128, 128, 128) );
    cg.setColor( QColorGroup::Base, white );
    cg.setColor( QColorGroup::Background, black );
    cg.setColor( QColorGroup::Shadow, black );
    cg.setColor( QColorGroup::Highlight, black );
    cg.setColor( QColorGroup::HighlightedText, white );
    cg.setColor( QColorGroup::Link, black );
    cg.setColor( QColorGroup::LinkVisited, black );
    pal.setDisabled( cg );
    TimeDisplayLabel->setPalette( pal );
    QFont TimeDisplayLabel_font(  TimeDisplayLabel->font() );
    TimeDisplayLabel_font.setFamily( "lucida" );
    TimeDisplayLabel_font.setItalic( TRUE );
    TimeDisplayLabel->setFont( TimeDisplayLabel_font ); 
    TimeDisplayLabel->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );

    TenThousandthsPixmap = new QLabel( LCDBoxFrame, "TenThousandthsPixmap" );
    TenThousandthsPixmap->setGeometry( QRect( 201, 16, 14, 24 ) );
    TenThousandthsPixmap->setPixmap( image8 );
    TenThousandthsPixmap->setScaledContents( TRUE );

    MinuteColonPixmap = new QLabel( LCDBoxFrame, "MinuteColonPixmap" );
    MinuteColonPixmap->setGeometry( QRect( 104, 6, 5, 34 ) );
    MinuteColonPixmap->setPixmap( image9 );
    MinuteColonPixmap->setScaledContents( TRUE );

    SecondColonPixmap = new QLabel( LCDBoxFrame, "SecondColonPixmap" );
    SecondColonPixmap->setGeometry( QRect( 183, 14, 4, 27 ) );
    SecondColonPixmap->setPixmap( image9 );
    SecondColonPixmap->setScaledContents( TRUE );

    HundredthColonPixmap = new QLabel( LCDBoxFrame, "HundredthColonPixmap" );
    HundredthColonPixmap->setGeometry( QRect( 151, 14, 4, 27 ) );
    HundredthColonPixmap->setPixmap( image9 );
    HundredthColonPixmap->setScaledContents( TRUE );

    TenthsPixmap = new QLabel( LCDBoxFrame, "TenthsPixmap" );
    TenthsPixmap->setGeometry( QRect( 155, 16, 14, 24 ) );
    TenthsPixmap->setPixmap( image8 );
    TenthsPixmap->setScaledContents( TRUE );

    ThousandthsPixmap = new QLabel( LCDBoxFrame, "ThousandthsPixmap" );
    ThousandthsPixmap->setGeometry( QRect( 187, 16, 14, 24 ) );
    ThousandthsPixmap->setPixmap( image8 );
    ThousandthsPixmap->setScaledContents( TRUE );

    TempoDisplay = new Rosegarden::Label( LCDBoxFrame, "TempoDisplay" );
    TempoDisplay->setGeometry( QRect( 159, 51, 55, 16 ) );

    TimeDisplayButton = new QPushButton( MainFrame, "TimeDisplayButton" );
    TimeDisplayButton->setGeometry( QRect( 3, 4, 25, 25 ) );
    QFont TimeDisplayButton_font(  TimeDisplayButton->font() );
    TimeDisplayButton_font.setFamily( "lucida" );
    TimeDisplayButton_font.setBold( TRUE );
    TimeDisplayButton->setFont( TimeDisplayButton_font ); 
    TimeDisplayButton->setPixmap( image11 );
    TimeDisplayButton->setToggleButton( FALSE );
    TimeDisplayButton->setFlat( TRUE );

    PanelOpenButton = new QPushButton( MainFrame, "PanelOpenButton" );
    PanelOpenButton->setGeometry( QRect( 3, 56, 25, 25 ) );
    QFont PanelOpenButton_font(  PanelOpenButton->font() );
    PanelOpenButton_font.setFamily( "lucida" );
    PanelOpenButton_font.setBold( TRUE );
    PanelOpenButton->setFont( PanelOpenButton_font ); 
    PanelOpenButton->setPixmap( image12 );
    PanelOpenButton->setToggleButton( TRUE );
    PanelOpenButton->setOn( TRUE );
    PanelOpenButton->setFlat( TRUE );

    RewindButton = new QPushButton( MainFrame, "RewindButton" );
    RewindButton->setGeometry( QRect( 260, 4, 42, 38 ) );
    RewindButton->setCursor( QCursor( 0 ) );
    RewindButton->setFocusPolicy( QPushButton::NoFocus );
    RewindButton->setPixmap( image13 );
    RewindButton->setAutoRepeat( TRUE );

    RewindEndButton = new QPushButton( MainFrame, "RewindEndButton" );
    RewindEndButton->setGeometry( QRect( 260, 43, 42, 38 ) );
    RewindEndButton->setCursor( QCursor( 0 ) );
    RewindEndButton->setFocusPolicy( QPushButton::NoFocus );
    RewindEndButton->setPixmap( image14 );

    PlayButton = new QPushButton( MainFrame, "PlayButton" );
    PlayButton->setGeometry( QRect( 303, 4, 66, 38 ) );
    PlayButton->setCursor( QCursor( 0 ) );
    PlayButton->setFocusPolicy( QPushButton::NoFocus );
    PlayButton->setPixmap( image15 );
    PlayButton->setToggleButton( TRUE );
    PlayButton->setDefault( FALSE );

    StopButton = new QPushButton( MainFrame, "StopButton" );
    StopButton->setGeometry( QRect( 303, 43, 66, 38 ) );
    StopButton->setCursor( QCursor( 0 ) );
    StopButton->setFocusPolicy( QPushButton::NoFocus );
    StopButton->setPixmap( image16 );

    FfwdButton = new QPushButton( MainFrame, "FfwdButton" );
    FfwdButton->setGeometry( QRect( 370, 4, 42, 38 ) );
    FfwdButton->setCursor( QCursor( 0 ) );
    FfwdButton->setFocusPolicy( QPushButton::NoFocus );
    FfwdButton->setPixmap( image17 );
    FfwdButton->setAutoRepeat( TRUE );

    FfwdEndButton = new QPushButton( MainFrame, "FfwdEndButton" );
    FfwdEndButton->setGeometry( QRect( 370, 43, 42, 38 ) );
    FfwdEndButton->setCursor( QCursor( 0 ) );
    FfwdEndButton->setFocusPolicy( QPushButton::NoFocus );
    FfwdEndButton->setPixmap( image18 );

    ToEndButton = new QPushButton( MainFrame, "ToEndButton" );
    ToEndButton->setGeometry( QRect( 3, 28, 25, 25 ) );
    QFont ToEndButton_font(  ToEndButton->font() );
    ToEndButton_font.setFamily( "lucida" );
    ToEndButton_font.setBold( TRUE );
    ToEndButton->setFont( ToEndButton_font ); 
    ToEndButton->setPixmap( image19 );
    ToEndButton->setToggleButton( TRUE );
    ToEndButton->setFlat( TRUE );
    languageChange();
    resize( QSize(417, 134).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // tab order
    setTabOrder( PlayButton, StopButton );
    setTabOrder( StopButton, MetronomeButton );
    setTabOrder( MetronomeButton, RecordButton );
    setTabOrder( RecordButton, RewindEndButton );
    setTabOrder( RewindEndButton, RewindButton );
    setTabOrder( RewindButton, FfwdButton );
    setTabOrder( FfwdButton, FfwdEndButton );
}

/*
 *  Destroys the object and frees any allocated resources
 */
RosegardenTransport::~RosegardenTransport()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void RosegardenTransport::languageChange()
{
    setCaption( tr( "Rosegarden Transport" ) );
    PanelCloseButton->setText( QString::null );
    QToolTip::add( PanelCloseButton, tr( "Hide additional controls" ) );
    PanicButton->setText( QString::null );
    QToolTip::add( PanicButton, tr( "Panic Button" ) );
    QWhatsThis::add( PanicButton, tr( "Resets all MIDI devices if you've got stuck notes" ) );
    MetronomeButton->setText( QString::null );
    QToolTip::add( MetronomeButton, tr( "Metronome" ) );
    QWhatsThis::add( MetronomeButton, tr( "Provides a metronome click for you to play along with" ) );
    QWhatsThis::add( MidiEventFrame, tr( "Shows MIDI activity in and out of Rosegarden" ) );
    InLabel->setText( tr( "IN" ) );
    OutLabel->setText( tr( "OUT" ) );
    InDisplay->setText( tr( "NO EVENTS" ) );
    OutDisplay->setText( tr( "NO EVENTS" ) );
    RecordButton->setText( QString::null );
    QToolTip::add( RecordButton, tr( "Record" ) );
    QWhatsThis::add( RecordButton, tr( "Record either MIDI or audio" ) );
    LoopButton->setText( QString::null );
    QToolTip::add( LoopButton, tr( "Loop" ) );
    QWhatsThis::add( LoopButton, tr( "Turn on and off the loop markers (if set)" ) );
    SoloButton->setText( QString::null );
    QToolTip::add( SoloButton, tr( "Solo" ) );
    QWhatsThis::add( SoloButton, tr( "Mutes all but the currently selected track" ) );
    SetStartLPButton->setText( QString::null );
    QToolTip::add( SetStartLPButton, tr( "Start loop or range here" ) );
    SetStopLPButton->setText( QString::null );
    QToolTip::add( SetStopLPButton, tr( "End loop or range here" ) );
    TimeSigLabel->setText( tr( "SIG" ) );
    DivisionLabel->setText( tr( "DIV" ) );
    DivisionDisplay->setText( tr( "/16" ) );
    TempoLabel->setText( tr( "TEMPO" ) );
    ToEndLabel->setText( tr( "END" ) );
    TimeDisplayLabel->setText( tr( "BAR" ) );
    TimeDisplayButton->setText( QString::null );
    QToolTip::add( TimeDisplayButton, tr( "Switch between real time, musical time, and frame count" ) );
    PanelOpenButton->setText( QString::null );
    QToolTip::add( PanelOpenButton, tr( "Show additional controls" ) );
    RewindButton->setText( QString::null );
    QToolTip::add( RewindButton, tr( "Rewind" ) );
    QWhatsThis::add( RewindButton, tr( "Moves the current pointer position back one bar." ) );
    RewindEndButton->setText( QString::null );
    QToolTip::add( RewindEndButton, tr( "Rewind to beginning" ) );
    QWhatsThis::add( RewindEndButton, tr( "Moves the pointer position to the start of the composition. (This may mean going forwards if the pointer is currently before the start.)" ) );
    PlayButton->setText( QString::null );
    QToolTip::add( PlayButton, tr( "Play/Pause" ) );
    QWhatsThis::add( PlayButton, tr( "Plays from the current pointer position, or pauses playback if already in progress." ) );
    StopButton->setText( QString::null );
    QToolTip::add( StopButton, tr( "Stop" ) );
    QWhatsThis::add( StopButton, tr( "Stops playback or recording." ) );
    FfwdButton->setText( QString::null );
    QToolTip::add( FfwdButton, tr( "Fast forward" ) );
    QWhatsThis::add( FfwdButton, tr( "Moves the current pointer position forwards one bar." ) );
    FfwdEndButton->setText( QString::null );
    QToolTip::add( FfwdEndButton, tr( "Fast forward to end" ) );
    QWhatsThis::add( FfwdEndButton, tr( "Moves the pointer position to the end of the composition.  (This may mean going backwards if the pointer is already beyond the end.)" ) );
    ToEndButton->setText( QString::null );
    QToolTip::add( ToEndButton, tr( "Display time to end" ) );
}

