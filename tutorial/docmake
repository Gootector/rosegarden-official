#!/bin/bash
#
# docmake
#
# Copyright (c) 2004  D. Michael McIntyre <dmmcintyr@users.sourceforge.net>
# Released under the GPL
#
# I'm too stupid to figure out how to get a Makefile to work, and I have
# better things to do than learn some weird new language when it really isn't
# necessary for getting the job done.  So instead I wrote a script to make the
# various docs.

langs="en de es ru"

startdir=$PWD

Usage(){
cat << EOF
usage: ./docmake [target] "[comment]"

if you don't know what [target] is, then read the case statement in this
script ($0)...

eg.  ./docmake en-web
EOF
}

translate_de() {
    	echo Translating auto-generated nav headers into German...
	cd ../de
	mv chapter-0.html kapitel-0.html
	for file in *.html;do
	    	echo translating headers in $file...
		Sed index.html kapitel-0.html $file
		Sed Contents Inhaltsverzeichnis $file
		Sed Next Vor $file
		Sed Previous Zurück $file
	done
}

translate_es() {
    	echo Translating auto-generated nav headers into Spanish...
	cd ../es
	mv chapter-0.html capitulo-0.html
	for file in *.html;do
	    	echo translating headers in $file...
		Sed index.html capitulo-0.html $file
		Sed Contents Contenido $file
		Sed Next Adelante $file
		Sed Previous Atrás $file
	done
}

# this will probably require some thought, such as whether this script itself
# is properly encoded to allow Russian characters in the first place.
# (looks like that is indeed not the case, and some special treatment must be
#  thought up to deal with this.)
translate_ru() {
    exit 0
    echo Translating auto-generated nav headers...
    cd ../ru
    mv chapter-0.html kapitel-0.html
    for file in *.html;do
	    echo translating headers in $file...
	    Sed index.html kapitel-0.html $file
	    Sed Contents Inhaltsverzeichnis $file
	    Sed Next Vor $file
	    Sed Previous Zurück $file
    done
}

Put() {
    if [ `whoami` == "silvan" ]; then
	echo "Previewing in kghostivew..."
	kghostview $1

	read -p "Do you want to publish? (y/N)" key
	if [ "$key" == "y" ]; then
	    printf "Publishing \"$1\"... \t"
	    user=$(cat /home/silvan/ZTQXP3)
	    curl -u "$user" -T "$1" ftp://users.adelphia.net/public_html/

	    if [ $? ]; then
		echo OK
	    else
		echo FAILED
	    fi
	fi 
    fi
}

web() {
    echo Making web book, language $1
    cd using-rosegarden/$1-src
    mkdir /tmp/$1-src
    htmldoc --batch $1-web.book
    echo Moving files, fixing links...
    mv -f /tmp/$1-src/index.html ../$1/chapter-0.html
    mv -f /tmp/$1-src/*.html ../$1
    ../admin/fix-links ../$1       # repair HTMLDOC-mangled links
#	../admin/fix-local-links ../$1 # repair Open Office-mangled links
    echo Done...
    case $1 in
	"en") ;;
	"de") translate_de ;;
	"es") translate_es ;;
	"ru") translate_ru ;;
    esac
    cd $startdir
}

pdf() {
    echo Making .pdf book, language $1
    cd using-rosegarden/$1-src
    htmldoc --batch $1-pdf.book
    mv -f /tmp/$1-src/*.pdf ../$1
    echo Done...
    cd ../$1
    Put *.pdf
    cd $startdir
}

Sed() {
    sed s@$1@$2@g $3 > /tmp/blurfl&&mv /tmp/blurfl $3
}

for target in $*; do
    case $target in 
	"en-web")
		    web en
	    ;;
	"en-pdf")
		    pdf en
	    ;;
	"de-web") 
		    web de
	    ;;
	"de-pdf") 
		    pdf de
	    ;;
	"es-web") 
		    web es
	    ;;
	"es-pdf") 
		    pdf es
	    ;;
	"ru-web") 
		    web ru
	    ;;
	"ru-pdf") 
		    pdf ru
	    ;;
	"all-web") for l in $langs; do
		       web $l
		   done
	    ;;
	"all-pdf") for l in $langs; do
		       pdf $l
		   done
	    ;;
	"all") 
		    for l in $langs; do
			web $l
			pdf $l
		    done
	    ;;
	*) Usage
	    ;;
    esac
done

read -p "Do you want to commit?  (y/N) " key
read -p "Enter one-line message: " message
if [ "$key" == "y" ];then
	echo Attempting an automatic CVS commit...
	cvs -f commit -m "* automatic commit by $0 - \" $message \"" '.' 
fi
    
exit 0
