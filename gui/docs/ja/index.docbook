<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.1.2-Based Variant V1.0//EN" "dtd/kdex.dtd" [
  <!ENTITY rosegarden "<application>Rosegarden</application>">
  <!ENTITY MIDI "<acronym>MIDI</acronym>">
  <!ENTITY % English "INCLUDE" > <!-- change language only here -->
  <!ENTITY % addindex "IGNORE">
]>

<!-- The language must be changed in the <book> tag for translations. -->


<!--

    Notes on style and terminology for Rosegarden handbook
    ======================================================

     * Aim to be clear, brief and direct, but be informal.

     * Write instructions in the second person.

       Good:     "You can select segments by clicking on
                  them with the arrow tool."

       Bad:      "Segments can be selected by clicking on
                  them with the arrow tool."

       Very bad: "The arrow tool allows the user to select
                  segments by clicking on them."

       If you dislike the first of these because you want to
       make the phrase "the arrow tool" more obvious by placing
       it at the start of the sentence, then perhaps you
       should be using a variablelist instead and making
       "the arrow tool" a list item.

     * It's perfectly permissible to detour to explain why
       something is the way it is, particularly if it might
       not be obvious.

     * It's also entirely permissible to omit advanced stuff
       from the "Using Rosegarden" section and document it
       only in the reference section.  "Using Rosegarden"
       should be about understanding how and why, not about
       knowing every last clever detail.

     * Bear in mind we can link extensively from any part of
       the handbook to any other.  Unfortunately DocBook won't
       allow you to write a link to a target that doesn't
       exist yet, so if you want to link to something that's
       not yet been written, either make a note of the planned
       link in an XML comment, or go and create a stub for the
       bit that hasn't been written yet, or else just write in
       a way that allows for a link to be easily added later
       (we could do an editing phase specially for links).

     * Be strict about using the correct terminology for
       Rosegarden data structures (segment, event, track,
       instrument, composition), but don't capitalise the
       words.  Capitalisation is useful in technical documents
       to make it clear that you're referring to a precise
       concept, but you shouldn't have to do it to make your
       meaning clear in user documentation.  If something
       seems ambiguous without, try rewording it instead.

-->


<book id="rosegarden" lang="ja">

  <!-- This header contains all of the meta-information for the document such
  as Authors, publish date, the abstract, and Keywords -->

  <bookinfo>
    <title>Rosegarden ハンドブック</title>
    <authorgroup>
      <author>
	<firstname>Richard</firstname>
	<surname>Bown</surname>
      </author>
      <author>
	<firstname>Chris</firstname>
	<surname>Cannam</surname>
      </author>
      <author>
	<firstname>Guillaume</firstname>
	<surname>Laurent</surname>
      </author>
      <!-- TRANS:ROLES_OF_TRANSLATORS -->
    </authorgroup>

    <copyright>
      <year>2002-2003</year>
      <holder>Richard Bown, Chris Cannam, Guillaume Laurent</holder>
    </copyright>

    <date>2003-11-26</date>
    <releaseinfo>0.9.5</releaseinfo>

    <abstract>
      <para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-mainwindow.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>

	Rosegardenは音と &MIDI; シーケンサと楽譜エディタである。この
        ハンドブックはどのようにこれを使うかを説明する。

      </para>
    </abstract>

    <keywordset>
      <keyword>Rosegarden</keyword>
      <keyword>sequencer</keyword>
      <keyword>MIDI</keyword>
      <keyword>audio</keyword>
      <keyword>music</keyword>
      <keyword>notation</keyword>
      <keyword>score</keyword>
      <keyword>KDE</keyword>
    </keywordset>

  </bookinfo>

  <!-- The contents of the documentation begins here.  Label each
  chapter so with the id attribute. This is necessary for two reasons:
  it allows you to easily reference the chapter from other chapters of
  your document, and if there is no ID, the name of the generated HTML
  files will vary from time to time making it hard to manage for
  maintainers and for the CVS system. Any chapter labelled (OPTIONAL)
  may be left out at the author's discretion. Other chapters should
  not be left out in order to maintain a consistent documentation
  style across all KDE apps. -->

  <chapter id="introduction">
    <title>概要</title>

    <para>
      <application>Rosegarden</application> は&MIDI; と音シーケンサ
      と楽譜エディタである。音楽の録音、編曲と作曲ができる。音楽は
      従来の楽譜か&MIDI; データ、あるいは指定した任意の音源かギターか
      マイクからの入力で録音されたものか、一続きの音ファイルから
      インポートされたもので表現される。
      sequencer and musical notation editor.  It allows the user to
      record, arrange and compose music.  Music is represented either
      by traditional score or &MIDI; data, or by sets of audio files
      either imported or recorded from a microphone, guitar or
      whatever audio source you care to specify.  Music data can be
      edited to create a composition, effects can be applied and the
      resulting mix can be burnt to CD or turned into MP3/ogg format
      suitable for distribution on the web.  Professional notation
      editing support also provides high quality printed output of the
      composition.
    </para>

    <para>
      <application>Rosegarden</application> is designed to look and
      act in a manner familiar to experienced users coming to Linux
      from other platforms whilst also being accessible and friendly
      to users new to music software generally.
    </para>

    <para>
    このハンドブックは参考資料と基本概念の簡単な概要と、&rosegarden; の
    使用法を含んでいる。これは
    <ulink url="http://rosegarden.sourceforge.net/tutorial/"> ここに
    置いてあるチュートリアル</ulink> ではない。 もしも何か理解できないか、
    さらに助言が必要であれば、
    <ulink url="http://www.all-day-breakfast.com/rosegarden/">
    Rosegarden webサイト</ulink> にFAQ とメーリングリストがあるので
    見てほしい。
    </para>

    <!-- Note that the revhistory tags apply to the documentation
    version and not to the app version. That is why we use an
    ItemizedList here. -->

    <sect1 id="rosegarden-revhistory">
      <title>変更記録</title>
      <para>
	<itemizedlist>
	  <listitem><para>
	      0.9.5 &ndash; November 2003: a great many stuff
	  </para></listitem>
	  <listitem><para>
	      0.9.1 &ndash; May 2003: step recording, Mup export, many many bug fixes
	  </para></listitem>
	  <listitem><para>
	      0.9 &ndash; April 2003: many notation improvements, improved bank editor, audio enhancements and refinements, translations
	  </para></listitem>
	  <listitem><para>
	      0.8.5 &ndash; December 2002: bank editor, MIDI filters, panic button
	  </para></listitem>
	  <listitem><para>
	      0.8 &ndash; October 2002: printing, LADSPA plugins, improved Matrix View
	  </para></listitem>
	  <listitem><para>
	      0.2.0 &ndash; August 2002: WAV file support, sweep selections, contrapuntal staves
	  </para></listitem>
	  <listitem><para>
	      0.1.6 &ndash; June 2002: configuration dialog, Lilypond support, quantize dialog
	  </para></listitem>
	  <listitem><para>
	      0.1.5 &ndash; May 2002: KDE 3, ALSA support, JACK audio support
	  </para></listitem>
	  <listitem><para>
	      0.1.4 &ndash; March 2002: more undo, segment editing, audio playback
	  </para></listitem>
	  <listitem><para>
	      0.1.3 &ndash; January 2002: piano-roll/matrix view, &MIDI; recording
	  </para></listitem>
	  <listitem><para>
	      0.1.2 &ndash; November 2001: notation undo, transport dialog, position pointer
	  </para></listitem>
	  <listitem><para>
	      0.1.1 &ndash; October 2001: scalable notation
	  </para></listitem>
	  <listitem><para>
	      0.1   &ndash; June 2001: first public release of Rosegarden4
	  </para></listitem>
	</itemizedlist>
      </para>
    </sect1>
  </chapter>


<!--
  **********************************
 
   PART I:
   Discussion and tutorial material

  **********************************
  -->


  <chapter id="using-rosegarden">
    <title>Rosegardenの使用法</title>

    <!-- This chapter should tell the user how to use your app. You
    should use as many sections (Chapter, Sect1, Sect3, etc...) as is
    necessary to fully document your application. -->

    <!-- Note that all graphics should be in .png format. Use no
    gifs because of patent issues. -->


    <sect1 id="file-operations">
      <title>ファイルとドキュメントの基礎</title>
      <para>
	&rosegarden; は各々の楽曲情報を固有のドキュメントに、固有の内部
        形式で格納する。ドキュメントをセーブするとき、ディスク上に、
        .rg 拡張子を付けたファイルとして格納される。&rosegarden; は、
        いくつかの、その他のファイル形式も扱うことができる。
      </para>

      <sect2 id="file-creating">
	<title>新しい楽曲情報</title>
	<para>
	  &rosegarden; の起動時には、編集を行なうための、"空白の"楽曲情報
          を含む新しいドキュメントが開かれる。その楽曲情報になんらかのもの
          を配置するために、何らかを録音するか、色々な編集機能を使って埋める
          ことができる、長さ0(空白)の音楽("セグメント"として参照される)を
          作成しなければならない。
	</para>
	<para>音楽の録音についての詳細の記述がある
              <!-- link linkend="recording" -->録音<!-- /link
	--> と、どのように音楽のセグメントを作成、編集、編集するか
            が記載されている<link
	linkend="segment-view">トラックエディタ</link> セクションを
        参照のこと。
	</para>
      </sect2>

      <sect2 id="file-midi">
	<title>MIDIファイルの使用法</title>
	<para>
          MIDIファイルをインポート/エクスポートするためには、
          ファイルメニューのインポートとエクスポートサブメニュー
          中にある
          "MIDIファイルのインポート"と"MIDIファイルのエクスポート"
          を使用する。
	</para>
	<para>
　　　　　&rosegarden; がMIDIファイルのようなファイル形式をロード/セーブ
	  できるにもかかわらず、内部的にはMIDIデータを格納しない。
	  一般的には、&rosegarden; が、MIDIにエクスポートするときに
          失われる大量の情報を格納する &rosegarden; 固有の形式でセーブ
	  することを選択しなければならない。
	</para>
	<para>
	  MIDIファイルがロードされると、&rosegarden;は音楽データを
	  MIDI1トラックごとに1つのトラックに分割するか、ファイルに送り
	  込み、
	  <link linkend="studio-midi-import">は適切な楽器のマッピングを
	  行ない</link>、 <link
	  linkend="nv-quantization">MIDIパフォーマンスデータのために
	  もっともな楽譜</link>を計算することを試みる。
	</para>
      </sect2>

      <sect2 id="file-merge">
	<title>ファイルのマージ</title>
	 <para>
	 ファイルをロード/インポートするだけではなく、現在のドキュメント
	 中にそれらをマージすることも、すでにそこにあるファイル中にある
	 セグメントを追加することもできる。
	  </para>
	
	<para>
	 ファイルをマージするために、オープン又はインポートオプションを
	 使う代わりに、ファイルメニュー中のマージサブメニュー上の適切な
	 オプションを使う。
	</para>
      </sect2>

      <sect2 id="file-printing">
	<title>印刷</title>
	<para>
	  ファイルメニュー中の"印刷"機能を使うことで、
	  楽譜として楽曲情報を印刷することができる。
	</para>

	<para>
	  楽譜を演奏データから作成することは大変な作業なので、
	  ほとんどの場合、MIDIデータに基づく既定値の印刷結果がとても読み
	  やすいことを期待するのは無謀である。印刷する前に、楽譜を
	  <link linkend="notation-view">楽譜エディタ</link>
	  を使って整形すべきである。
	  (<link  linkend="nv-quantization">演奏データからの作譜</link>
	   も参照のこと。)
	</para>

	<para>
	  注意深く扱うことによって、 &rosegarden;はとても読みやすい楽譜を
	  作成する能力がある。たとえそうでも、スクリーンエディタとして
	  デザインされたのであって、写植機ではない。本当に印刷品質の
	  楽譜を作成したいのであれば、&rosegarden; と結合できる
	  <ulink url="http://www.lilypond.org">Lilypond</ulink>
	  を考慮すべきである。 Lilypond は楽譜の写植を行なうソフトウェアで、
	  特別なテキストファイル形式を読み込み、高品質の活字化された
	  楽譜を生成する。
	  &rosegarden; はファイルメニュー中のエクスポートサブメニュー上の
	  "Lilypondにエクスポート"を使うことでLilypondファイルを書き出す
	  ことができる。
	</para>
      </sect2>

    </sect1>

    <sect1 id="segment-view">
      <title>トラックエディタ</title>
      <sect2 id="segment-view-overview">
	<title>概要</title>
	<para>
	    &rosegarden; のメインレイアウトは、その他の一般的なシーケンサ
	    とよく似たコンセプトである。これは、&mdash; のトラック
	    コンセプトを基礎としていて、メインウィンドウはトラックの
	    一覧を表示しているトラックエディタを表示し、そのトラックは、
	    左側の下の楽器に関連付けられている。
	    (<link
	    linkend="notation-view">notation</link>、 <link
	    linkend="matrix-view">matrix</link>、と <link
	    linkend="event-view">event list</link>)という特化した
	    エディタ中でセグメントそれ自身をオープンするのと同じように、
	    トラックエディタ上で(&ldquo;セグメント&rdquo;として参照
	    される)音楽データのブロックを移動したり操作することができる。
	</para>
	
	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-trackeditor.png" format="PNG"/>
	</imageobject>
	  <textobject>
	    <phrase>&rosegarden;'s Track Editor showing two segments of music data</phrase>
	  </textobject>
	</mediaobject>
	</screenshot>
	</para>

      <para>
      トラックは、&MIDI;のレンジや、オーディオ楽器(audio instruments)
      に割り当てることができる。上記の絵の中では、トラックエディタ上で
      2つのセグメント(黄色がかった緑のブロックの部分)が表示されていて、
      それは"IIWU Synth"という楽器に割り当てられている。
      </para>
    </sect2>
      <sect2 id="segment-view-instruments">
	<title>トラックと楽器</title>
	<para>
	  各々のトラックは、音を鳴らすために、それに割り当てられている
	  楽器を持たなければならない。1つの楽器をトラックに割り当てるために、
	  トラックラベル上で左マウスボタンをクリックしホールドする。
	  するとポップアップメニューが表示され、その中に有効な楽器の
	  一覧が表示される。
	</para>
	<para>
	  楽器というものは、&MIDI;デバイス上の1つのチャネル、あるいは
	  1つのオーディオ出力として理解することができる。トラックには
	  &MIDI; 楽器に割り当てられなければならないノートデータを含み、
	  それらは、音から音へのinstrumentを含んでいる。1つ以上のトラックに
	  同じ楽器を割り当てることができ、その場合、複数のトラックは
	  同じ音を使う。
	</para>
	<para>
	  <link
	  linkend="segment-view-instrumentparameterbox">楽器パラメータ
	  ボックス</link> を使うことで、トラックに割り当てられた色々な
	  プロパティを変更することができる。ここは、たとえば、特定の
	  パッチを使って特定の音(ピアノ、ストリング、その他)を出すために
	  MIDI楽器を設定するところである。
	</para>
	<para>
	  楽器についての詳細がある
	  <link linkend="studio-introduction">Studio</link> セクションを
	  参照のこと。	</para>
      </sect2>

      <sect2 id="segment-view-creating">
	<title>セグメントの作成</title>
	<para>
	  何らかの作曲を開始するために、1つの空白のセグメントを作成するために、
	  鉛筆ツールを使う必要がある。ツールバーの鉛筆をクリックし、
	  セグメントを開始したい場所でまたクリックし、
	  (at the correct height for the
	  track you want the segment to be on, and at a distance
	  across the editor window corresponding to the correct time)
	  セグメントが正しい長さのバーになるまで右にドラッグする。
	</para>

	<para>
	  既定値では、新しいセグメントはバーライン上で開始し、バー単位で
	  拡張するが、これは、クリックとドラッグ中シフトキーを押すことに
	  よってグリッドに張り付く効果を抑止できる。
	</para>

	<para>
	  一度セグメントを作成すると、
	  <link linkend="matrix-view">マトリクス</link> 又は <link
	  linkend="notation-view">notation</link>エディタを使って編集を
	  開始できる。それらのエディタを使うためには、セグメントをダブル
	  クリックするか、右マウスボタンをクリックし、コンテキストメニュー		  で使いたいエディタを選択する。
	</para>

	<para>
	  MIDIデバイスかオーディオ入力からの録音を考えているならば、
	  最初に新しいセグメントを作成する必要はない -- それぞれの分離
	  された録音は、録音中に自動的に作成される常に新しいセグメント
	  中に入る。
	</para>
	</sect2>

      <sect2 id="segment-view-manipulating">
	<title>セグメントの操作</title>
	<para>
	  メインウィンドウはセグメントを編集するための"ツール"の集まり
	  が用意されている。それらはメインツールバーで有効になっている。
	  最初にツールバーから使いたいツールを選択し、メインキャンバス上の
	  セグメント上にクリックとドラッグを行なう。
	</para>

      <sect3 id="segment-view-selector">
	<title>選択ツール</title>
	<para>
	  "選択ツール"(矢印ツール)は実際には他目的のツールである:
	  それは選択、移動、コピー、リサイズとセグメントの作成に
	  使える。</para>

	  <para>
	  最も明白な使用方法は"選択"である:これは、選択ツールで、
	  セグメントを、
	  セグメント上でクリックすることで1つを選択するか、
	  シフトキーを押したままでクリックしていくつかを選択するか、
	  ウィンドウの空白の領域中でクリックして領域外にドラッグする。
	  </para>

	<para>
	選択ツールでセグメントを移動するためには、単にクリックし、
	セグメントをドラッグする。コピーを作成するためには、クリックし、
	セグメントの右端をドラッグする。新しいセグメントを作成するため
	には、中マウスボタンで空白の領域をクリックしてドラッグする。
	    </para>

	  <para>
	選択ツールは、時々、&mdash;が
	特に小さなセグメント上で、意図している動作により明確にする必要がある
	にもかかわらず、
	その他のツールを完全に置き換えるものではない。
	</para>

      </sect3>

      <sect3 id="segment-view-move-resize">
	<title>移動とリサイズツール</title>
	<para>
	セグメントを別の開始時間又はトラックに移動するためには、
	移動ツールを使い、移動したい場所に、セグメント上でクリックし
	ドラッグする。もしも、Ctrlキーを押したまま移動するならば、
	セグメントは移動でなはくてコピーされる。
	</para>

	<para>
	セグメントのリサイズをしたいならば、リサイズツールを使い、
	セグメントの右端をクリックし、ドラッグする。</para>

	<para>
	移動とリサイズの両方のために、特定のグリッド位置に張り付くのを
	防ぐため、シフトキーを押すことができる。
	</para>

      </sect3>

      <sect3 id="segment-view-split-join">
	<title>分割ツール</title>
	<para>
	    
	    <inlinemediaobject>
	      <imageobject>
		<imagedata fileref="rg-split.png"/>
	  </imageobject>
	  </inlinemediaobject>
	    を、1つのセグメントを2つの分離されたセグメントにするために
	    分割ツールを使うことができる。セグメントを分割するために、
	    分割ツールを選択し、分割したい点でクリックする。
	  </para>
	  <para>
	    既定値では、セグメントは、カーソルに関係した最も近いバーラインに
	    分割されるが、これはセグメントを分割している間シフトキーを押すこと
	    で抑制できる。
	  </para>
	</sect3>
      </sect2>

      <sect2 id="segment-view-segmentparameterbox">
	<title>セグメントパラメータボックス</title>

	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-segmentparameterbox.png" format="PNG"/>
	</imageobject>
	  <textobject>
	    <phrase>&rosegarden;'s segment parameter box</phrase>
	  </textobject>
	</mediaobject>
	</screenshot>
	</para>

    <para>
	セグメントパラメータボックスは、選択されたセグメントのいくつかの
	外見を変更することができる。もしも1つのセグメントが現在選択され
	ているのならば、そのパラメータはセグメントパラメータボックス中
	で表示され、そこで編集できる。もしも複数のセグメントが選択されて
	いるのならば、パラメータボックスは選択されたセグメントすべてで
	現在共通な値のみが表示されるが、それらは変更でき、それはすべての
	選択されたセグメントに反映される。

    <variablelist>
     <varlistentry>
      <term>ラベル</term>
       <listitem>
       <para>
	選択されたセグメント(もしも同じラベルを持っているならば、
	複数のセグメント)のラベルを表示する。"..."ボタンをクリック
	してラベルの編集ができる</para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>繰り返し</term>
       <listitem>
       <para>
	選択されたセグメントの繰り返しのon/offを切り替える。繰り返しを
	指定されたセグメントは、同じトラック上の継続するセグメントの
	開始点まで繰り返すか、継続するセグメントがない場合、楽曲の
	最後まで繰り返す。
	</para>

       <para>
	繰り返しているセグメントの繰り返している部分は、オリジナルの
	セグメントに比べて、メインキャンバス上で淡い色で表示される。
	セグメントメニュー上で"Turn Repeats into Copies"オプションを
	使うか、単に単一の繰り返しブロック上でダブルクリックを行なう
	ことによって、オリジナルのセグメントを真に編集可能なコピーに
	変更することができる。
	</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Quantize</term>
       <listitem>
		<para>
		選択されたセグメントのquantizationを表示する。
		すべてのそれらのノートの開始時間を簡単にquantize
		するために、これを変更することができる。
		より詳細なquantizationはセグメントメニュー上の
		Quantize機能を使う。 <link
		  linkend="quantization">Quantization</link>
		に詳細がある。
		</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>Transpose</term>
       <listitem>
       <para>
	選択されたセグメントに現在適用されているtransposition(in semitones)
	を表示する。このtranspositionはセグメントが演奏されるときに適用され、
	マトリクス、notationまたはイベントリストエディタ内で表示されるノート
	では見えない。楽曲全部または一部分のピッチを簡単に変更するために、
	これを使うことができる。</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>ディレイ</term>
       <listitem>
       <para>
	選択されたセグメント上で現在効力のあるディレイを表示する。
	演奏するために、後で書くより、セグメント全体にさせるために、
	ここでディレイを設定することができる。このディレイはセグメントが
	演奏されるときに適用されるが、マトリクス、notationまたはイベント
	リストエディタ内で表示されるノートでは見えない。
       </para>
		<para>
		  You can set a delay either in musical time (by
		  choosing a note duration from the delay dropdown),
		  in which time the exact delay will depend on the
		  tempo, or in real time (by choosing a time in
		  milliseconds from the dropdown).
		</para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>色</term>
       <listitem>
       <para>
	選択されたセグメントが表示されるときに使われる色を表示する。
	ドロップダウン機能を使うか、ドロップダウンで見付からない場合、
	"新しい色を追加"オプションを選択することでその他の色を選択できる。
       </para>
		<para>
		編集メニュー上の"ドキュメントプロパティの編集"
		(ドキュメントプロパティダイアログの色ページを選択)
		を使うことによって色の管理と名前の変更もできる。
		変更された色のパレットはRosegardenファイル中の楽曲
		データと共にセーブされる。
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-colours.png" format="PNG"/>
	</imageobject>
	  <textobject>
	    <phrase>&rosegarden;の色マネージャ</phrase>
	  </textobject>
	</mediaobject>
	</screenshot>
		</para>
      </listitem>
     </varlistentry>
     
    </variablelist>
    </para>
   </sect2>

      <sect2 id="segment-view-instrumentparameterbox">
	<title>楽器パラメータボックス</title>
	<para>
	</para>
      </sect2>
    </sect1>

    <sect1 id="transport">
    <title>The Transport</title>
      <para>
	トラックエディタは、割り当てられた楽器にたいして配置される一連の
	セグメントを表示する。楽曲を演奏するとき、&rosegarden; はそれが
	クロスしているセグメントの内容を演奏するときに左から右へとトラック
	上でポインタを横切る。画面上でのポインタの位置は、Transportと
	呼ばれるダイアログによってtrackされ制御される。
      </para>
    
      <para>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="rg-transport.png" format="PNG"/>
            </imageobject>
            <textobject>
              <phrase>&rosegarden;'s Transport dialog</phrase>
            </textobject>
        </mediaobject>
      </screenshot>
      </para>

      <para>
	もしもTransportが見えないならば設定メニューに行くことで
	有効にできる。
        (<menuchoice> <guimenu lang="ja">設定</guimenu> 
	<guimenuitem>Transportの表示</guimenuitem> </menuchoice>).
      </para>
    
      <para>
        Transportは最初のバー(秒単位)または、24-fps<acronym>SMPTE
        </acronym>中の時間又は代わりにバーとビートからの絶対時間の
        ポインタの現在位置を表示する。それは、希望するならば、
	楽曲の最後からの時間も表示できる。それらの機能はメインの
	transport表示の左にある小さなボタンによって制御できる。
      </para>

      <para>
        transport上のメインコントロールはシーケンサの演奏を起動、一時停止、
        ポインタの位置の早送り、巻き戻し、停止または楽曲の最初/最後への
        移動を行なう。
      </para>

      <para>
        追加のコントロールと &MIDI; イベントはtransport上の下部にある
	矢印ボタンの左に隣接しているものでon/offすることができる。
        さらに、この特別な部分は録音、ループ、ソロとメトロノームの実行
        ボタンがある。
      </para>

    </sect1>

    <sect1 id="studio">
      <title>スタジオ</title>

      <sect2 id="studio-introduction">
	<title>デバイス、楽器と接続</title>

	<para>
        Rosegardenは"スタジオ"という単語をコンピュータに繋がれる
        サウンドシステムについて知っているモのすべてを参照するために
        使う。これは、&MIDI; とオーディオ用のハードウェアとその他の
        サウンドソフトウェアを含んでもよく、さらに、接続状態の情報と
        構成(configuration)と&MIDI; パッチやその他を含んでもよい。
        </para>

	<para>
        用語の3つの部分はここで重要である:

	  <variablelist>

	    <varlistentry>
	      <term>デバイス</term>
	      <listitem>
		<para>
                <quote>デバイス</quote>はRosegardenの範囲において
                関係するものは、単に音を生成する能力がある何かである。
                これはMIDIシンセサイザーやオーディオデバイスでもよい。
                MIDIデバイスは物理的なMIDIポートに直接対応する必要は
                ない:それらは参照することができ、特定の手段で動作する
                ことを期待する、名前を持つ何らかのものである。MIDIパッチ
                マップのような構成情報は、デバイスに割り当てることができる。
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>楽器</term>
	      <listitem>
		<para>
                各々のデバイスはいくつかの<quote>楽器</quote>をもち、
                それらの各々は、特定の音を作るために仮定される。それらは
                音を演奏するために選択されたトラックに割り当てることができる
                ものである。既定値ではデバイスは起動時に生成される16の
                楽器を持つ:もしも、デバイスがMIDIデバイスであれば、16の
                MIDIチャネルのうちの1つに初期化される。楽器はたとえば、
                プログラムの設定、リバーブ(reverb)、ボイスなどのような
                特定のボイスのすべてのプロパティである。
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>接続</term>
	      <listitem>
		<para>
                MIDIデバイスが単に名前で、構成情報の集合の間は<quote>
                接続</quote>はどのMIDIポートに物理的に割り当てられている
                かを指定する。これは、MIDIデバイス管理ダイアログ中で構成
                することができる(オーディオデバイスは同じ方法では接続を
                もたない)。
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</para>

	<para>
        例をあげると、セットアップが、2つの物理MIDIポートを持つPC
        によって成り立っていて、その1つは外部のシンセサイザー
        が接続されていることを想像する。ここでは1台のシンセサイザーに
        対応するMIDIデバイスを持つために、通常Resegardenを構成する。
        次に、このデバイスについて、名前を修正し、マップをパッチする
        ように構成することができ、次にサウンドカードの関連するMIDI
        ポートにそれを結合するために接続を指定する。それぞれの16個の
        デバイス上の既定値の楽器は適切なプログラムとともに構成でき、
        それらをトラックに割り当てられる。</para>

	<para>
          実際の所、Rosegardenは既定値で、起動時に有効な接続をおのおのの
          デバイスに対して作成するだろう。そのため、上記の例では、
          2つのMIDIデバイスは1つのみが必要だったとしても既定値で2つの
          デバイスが作成されるだろう。一般的に、最初のものに対して
          名前を変え、パッチマップを適用し、2つめのものに対しては、
          削除するか未使用にする。コンピュータ上のMIDIポートに実際に
          どのシンセサイザーが接続されているかをRosegardenが知るすべは
          ないことを記憶しておくこと。この理由により、起動時に作成され
          るデバイスは、既定値のセットになる予定であり、構成するデバイスが
          本当に使うものに一致しているかどうかはあなた次第である。
	</para>

	<para>
        一度構成されると、スタジオのセットアップはセーブするRosegarden
        形式のファイルに毎回保存される。
        </para>

      </sect2>
      <sect2 id="studio-midi-import">
	<title>&MIDI; インポート上のスタジオのマッピング</title>
	<para>
	  楽曲情報に &MIDI;ファイルをインポートするとき、&rosegarden; は
          &rosegarden; の楽器上に &MIDI; プログラムをどのようにマップするかを
          決めるために、存在するスタジオのセットアップを使用する。
          目的は、スタジオ中に実際に存在するマップされた1つの楽器を、
          すべての &MIDI; プログラムが得ることを確実にすることであり、
          (そして、そういう理由で、実際にコンピュータに割り当てられる)
          そのため、すべての &MIDI;トラックは聞くことができる。

	</para><para>

          インポートされたファイル中に見付かった、&MIDI; プログラム
          チェンジとバンクセレクトイベントはインポートのときに使用されるが、
          スタジオ中の1まとまりの楽器から各々の&MIDI;トラックのための
          適切な楽器を見つけるのを手助けする手段としてのみ使われる。そのため、
          例をあげると、もしもスタジオが現在<acronym>GM</acronym>楽器(音源)
          のみ含んでいるようにセットアップされていた場合で、
          <acronym>GS</acronym> プログラムチェンジをその上に含む&MIDI;ファイル
          をインポートした場合、&rosegarden;は<acronym>GS</acronym>バンク
          を<acronym>GM</acronym>にリマップする。なぜならば、ファイルを
          インポートするときに知っているすべてだからである。オリジナルの
          <acronym>GS</acronym> プログラムナンバーを憶えているわけではない。

	</para><para>

          このことは、&MIDI; ファイルをインポートする前に、
          実際に持っているデバイス向けに正しくスタジオを
          構成することを確実にしなければならない、ということを意味する。
          それ以外では、&MIDI;ファイル中のプログラムデータは失われるだ
          ろう。

	</para>
      </sect2>

      <sect2 id="studio-device-editor">
	<title>MIDIデバイスの管理</title>

        <para>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="rg-devicemanager.png" format="PNG"/>
              </imageobject>
              <textobject>
                <phrase>The MIDI device manager</phrase>
              </textobject>
          </mediaobject>
        </screenshot>
        </para>

	<para>
          MIDIデバイスマネージャダイアログは現在有効なMIDIデバイスと
          どこに繋がっているかを表示する。このダイアログに到達する
          ためには、スタジオメニューのMIDIデバイス管理機能を使う。
	</para>

	<para>
          <link linkend="studio-introduction"> デバイス、楽器、と接続
          </link> 中で説明されているように、既定値では Rosegardenは
          起動時に、もっともらしいデバイスのセットを提供しようとする。
          しかし、既定値の構成では、通常は最適ではないかもしれないので、
          このダイアログはデバイスの名前を変更し、それらの接続を変更
          し、再生/録音方向の接続を修正する。
	</para>
	
	<para>
          各々のここでリストされた再生デバイスは、通信(talk to)するため
          のMIDIトラックのためのターゲットを提供する。もしも、新しい
          再生デバイスを追加するならば、トラックに割り当てることができる
          このデバイス上の16の新しい楽器を持つことができるだろう。
          もしも、そのデバイスに対する接続を割り当てるならば、
          トラックはその接続に割り当てられた任意のMIDIシンセサイザー
          の適切なチャネル(楽器によって依存する)で再生するために
          割り当てられる。
	</para>

	<para>
          ここでリストされた録音デバイスは、MIDIを録音することが
          可能なソースを意味する。それらの1つはこのダイアログ中でその
          時点で有効状態になっている。
	</para>

      </sect2>

      <sect2 id="studio-bank-editor">
	<title>MIDIデバイスのバンクとプログラムの管理</title>

        <para>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="rg-bankeditor.png" format="PNG"/>
              </imageobject>
              <textobject>
                <phrase>The MIDI bank and program editor</phrase>
              </textobject>
          </mediaobject>
        </screenshot>
        </para>

	<para>
          おのおののMIDIデバイスは複数の楽器を含み、それらの楽器を
          トラックに割り当てることができることを憶えておくこと。
          MIDI用語中では、おのおのの楽器はMIDIシンセサイザー上の
          1つのチャネルに対応する。使用する各々の楽器のシンセサイザー
          上の有効なボイス(サウンド)のどれかを選択することができるが、
          この理由により、すべての有効なボイスの名前をRosegardenが
          知っているようにする必要がある。
	</para>

	<para>
          このダイアログはプログラムのバンク(ボイスの名前)をMIDIデバイス
          に接続することを可能にし、それゆえ、
	  <link
	  linkend="segment-view-instrumentparameterbox">
          楽器パラメータボックス</link>
          中のそれらのボイスの1つを使うために、デバイス上の各々の楽器は
          セットされる。
	</para>

	<para>
          デバイスのプログラム名をセットアップするための通常の方法は、
          単に提供されるデバイスファイル(".rgd")の1つからそれらを
          インポートすることである。これを行なうために、ダイアログの
          左のリスト中のデバイスを選択し、リストの下のインポートボタン
          をクリックし、シンセサイザーに対応する.rgdファイルを選択する。
	</para>

        <para>
        もしも、シンセサイザー用に何らの.rgdファイルが有効になっていない
        のであれば、新しいバンクを作るためにこのダイアログを使うことが
        できる。これを行なうために、シンセサイザーのMIDI実装チャート中の
        プログラムマップを見つけ、すべての名前を手入力で入力する必要が
        ある。次にそれを他のRosegardenユーザのために.rgdファイルに
        エクスポートする。もしもそれを共有したいのであれば、
        rosegarden-userメーリングリストにコンタクトしてほしい(これは
        どのようにして、Rosegardenと共に存在するすべての.rgdファイルが
        含まれているかの理由である)。
        </para>

	<para>
          もしも、ソフトウェアシンセサイザーかSountFont(.sf2)ファイルを
          使うサウンドカードを使っているならば、このダイアログ中に
          .sf2ファイルから正しいプログラム名を単純に直接ロードすることが
          できる。通常と同じようにインポートをも止められたら、.rgdファイル
          の代わりに.sf2ファイルを選択する。
	</para>

	<sect3 id="studio-variations">
	  <title>Variations</title>

	  <para>
            いくつかのMIDIデバイス(たとえばローランドからのもの)は、
            "variations"として知られているスキームを使うプログラム名
            を体系化している。それらのデバイスのために、一般的に
            基本的なプログラム名&mdash;を最初に選択することによって
            プログラムを選択したい。そして、電子ピアノのようなプログラム
            &mdash;上の1セットのvariationsを選択する。これは、一般的な
            MIDIベースのシンセサイザーと対象的であり、それはバンク中に
            それらのプログラムを組織化し、バンクを最初に選択することを
            期待し、次にそのバンクからプログラムを選択する。
	  </para>

	  <para>
            Rosegarden はvariationを使うデバイスをサポートできるが、
            バンクフォーマット中にプログラム名を入力しなければならない。
            内部的に、variationを使うデバイスはvariationsとの間で
            選択するために、MIDIバンク選択コントローラを使う。
            variationを選択するために、デバイスがLSBかMSBのどちらかの
            バンクセレクトを使うかを、シンセサイザーのドキュメントから
            見つけ出す必要があり、どのバンク番号がどのvariationに
            対応しているかを見つけ出す必要がある。次に、通常として、
            バンクを入力し、バンクダイアログ上の、
            "MSB/LSB上のVariationリストの表示"オプションを使い、
            Rosegardenに楽器パラメータボックス内でそのデバイスが表示される
            ときにバンクの代わりにvariationが表示するように伝える。
	  </para>
	</sect3>

      </sect2>

      <sect2 id="studio-metronome">
	<title>メトロノーム</title>
	<para>
          Rosegarden は内蔵の2ツのメトロノームを持っていて、その1つは
          録音中に使い、もう一つは通常の再生中にスイッチすることができる。
          それら輪MIDI楽器にノートを送ることによって動作し、両方の
          メトロノームは同じ楽器、ピッチとベロシティ情報を使う。
	</para>

	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-metronome.png" format="PNG"/>
	</imageobject>
	  <textobject>
	    <phrase>&rosegarden;'s metronome configuration dialog</phrase>
	  </textobject>
	</mediaobject>
	</screenshot>

          メトロノームを構成するためには、スタジオメニュー上の
          "メトロノームの管理"オプションを使いメトロノームダイアログを
          起動する。そののち、メトロノームのためのMIDI楽器とメトロノーム
          の解像度(1つのビートあたりのティック、ビートの再分割、
          あるいはビートあたり1つ)を選択できる。MIDIシンセサイザーの
          実際のボイスのようなプロパティは選択された楽器に依存する
          メトロノームのティックのために使われ、トラックに割り当てられた
          楽器に依存するMIDIトラックのために使われるボイスのようである。
          メインウィンドウ上でそれにをラックを割り当てることで楽器を
          構成することができ、楽器パラメータボックスから正しいプログラム
          を選択することができる。
	</para>

	<para>
          メトロノームの録音と再生はTransportウィンドウでメトロノーム
          ボタンによってonまたはoffすることができる。このボタンは
          録音が供給されているか、実行中の時にメトロノームの録音を制御し、
          録音メトロノームはonにされ、再生メトロノームはoffにされる。
	</para>
      </sect2>

      <sect2 id="studio-midi-filters">
	<title>MIDIフィルタ</title>
        <para>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="rg-midifilter.png" format="PNG"/>
              </imageobject>
	      <textobject>
                <phrase>The MIDI filter dialog</phrase>
              </textobject>
          </mediaobject>
        </screenshot>
        </para>

	<para>
        このダイアログを使うことで、どのMIDIイベントをRosegardenが
        MIDI THRUを使ってイベントを送るか、それを単に録音するかで
        受け付けたり無視したりすることを決められる。このダイアログ上の
        チェックボックスを使うことで、RosegardenにどのタイプのMIDI
        イベントを送るか録音するかを希望しないことを伝える。
        </para>

      </sect2>

    </sect1>

    <sect1 id="quantization">
      <title>Quantization</title>
      <para>
	"Quantization" はノートの再ポジショニングのプロセスとその他の
        イベントであり、 so that they start or finish on exact beat divisions.
	It is traditionally used to make an approximate performance
	into a precise but rather mechanical-sounding one, either
	because precision is the desired effect or for a result such
	as making the notes clearer in notation.
      </para>

      <para>
	The quickest way to quantize something is to do it in the main
	window, using the Quantize menu on the <link
	linkend="segment-view-segmentparameterbox">Segment Parameter
	Box</link>.  If you select some segments and change the value
	shown in the menu, the segments will immediately be quantized
	so that all their notes start at multiples of the note
	duration in the menu.
      </para>

      <para>

	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-gridquantizer.png" format="PNG"/>
	</imageobject>
	  <textobject>
	    <phrase>&rosegarden;'s quantize dialog</phrase>
	  </textobject>
	</mediaobject>
	</screenshot>
	For more control, use the Quantize function on the Segments
	menu of the main window, or on the Transforms menu of the
	matrix or notation editors.  This shows you a dialog in which
	you can select the precise quantization parameters you need,
	and then it applies these to all of the selected segments or
	notes.
      </para>

      <para>
	<!-- !!! to be continued -->
      </para>
	
    </sect1>
    
    <sect1 id="matrix-view">
      <title>マトリクスエディタ</title>
      <para>
        &rosegarden;のマトリクスエディタは、クリヤで論理的な形式で
        音楽を表示し、編集することを可能にする。それぞれのノートは
        グリッド中のブロックとして表わされ、高さはピッチに関連する。
      </para>
      <para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-matrixview.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;'s matrix editor</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
        それぞれのマトリクスエディタウィンドウは1つのセグメントを表示する。
        セグメントを編集するために、メインキャンバス上で右クリックし、
        メニューからマトリクスエディタを選択する。代わりに、セグメントを
        ダブルクリックするときにマトリクスエディタが既定値のエディタに
        なるようにRosegardenを設定することも可能である。
      </para>

      <sect2 id="matrix-insertion">
	<title>ノートの挿入</title>
	<para>
          マトリクスビューにノートを挿入する一番簡単な方法は、マウスを
          使うことである。これを行なうために、ツールバー上で鉛筆ツール
          を選択し、マトリクスエディタ上にクリックしドラッグする。
          ノートと、そこでクリックした点に関連するピッチが入力され、
          マウスボタンをリリースする前に関連した距離に関連するduration
          を持つだろう。
         </para>

	<para>
        既定値では、時間とdurationはツールバー又は表示メニュー上のグリッド
        設定に添った形で、特定のグリッドユニットに貼り付けられる。
        クリックとドラッグ中にシフトキーを押したままにすることでこの効果を
        抑止できる。
	</para>

	<sect3 id="matrix-insertion-keyboard">
	  <title>PCキーボードからのノートのタイプ</title>

	  <sect4>
	    <title>Duration</title>

	    <para>
            キーボードからのノートのdurations入力は、ツールバー又は
            表示メニュー上のグリッド設定によって制御される。これを
            以下の数字キーを使って設定することができる:</para>

	    <itemizedlist>
	      <listitem><para><keycap>5</keycap> &ndash; Whole bar</para></listitem>
	      <listitem><para><keycap>1</keycap> &ndash; Beat</para></listitem>
	      <listitem><para><keycap>2</keycap> &ndash; Half note (minim)</para></listitem>
	      <listitem><para><keycap>4</keycap> &ndash; Quarter note (crotchet)</para></listitem>
	      <listitem><para><keycap>8</keycap> &ndash; Eighth note (quaver)</para></listitem>
	      <listitem><para><keycap>6</keycap> &ndash; Sixteenth note (semiquaver)</para></listitem>
	      <listitem><para><keycap>3</keycap> &ndash; Thirty-second note (demisemiquaver)</para></listitem>
	      <listitem><para><keycap>0</keycap> &ndash; Sixty-fourth note (hemidemisemiquaver)</para></listitem>
	    </itemizedlist>
	    
	  </sect4>

	  <sect4>
	    <title>ピッチ</title>

	    <para>
            一旦正確なdurationがグリッドメニュー中で選択されると、
            以下のピッチキーの1つを押すことによって、
            <link linkend="nv-rulers">カーソルの挿入</link>による
            現在の位置にノートを挿入できる。
            </para>

	    <itemizedlist>
	      <listitem><para><keycap>A</keycap> &ndash; ド (the tonic of the current key in the current clef)<!-- !!! FIXME: no clef in matrix view --></para></listitem>
	      <listitem><para><keycap>S</keycap> &ndash; レ</para></listitem>
	      <listitem><para><keycap>D</keycap> &ndash; ミ</para></listitem>
	      <listitem><para><keycap>F</keycap> &ndash; ファ</para></listitem>
	      <listitem><para><keycap>J</keycap> &ndash; ソ</para></listitem>
	      <listitem><para><keycap>K</keycap> &ndash; ラ</para></listitem>
	      <listitem><para><keycap>L</keycap> &ndash; シ</para></listitem>
	    </itemizedlist>

	    <para>キーを押す間に<keycap>Shiftキー</keycap>を押すと、
              ノートが半音上がり、(シャープが定義されていないミとシは
              除く) <keycap>Shift</keycap>と<keycap>Ctrl</keycap>キーを
              一緒に押すと、半音下がる(ファとドを除く)</para>

	    <para>
              1オクターブ上を入力する場合は、
               use the corresponding
	      keys on the next row up: <keycap>Q</keycap>,
	      <keycap>W</keycap>, <keycap>E</keycap>, <keycap>R</keycap>,
	      <keycap>U</keycap>, <keycap>I</keycap>, と
	      <keycap>O</keycap>を使う。
              同様に、1オクターブ下を入力する場合には
	      <keycap>Z</keycap>, <keycap>X</keycap>,
	      <keycap>C</keycap>, <keycap>V</keycap>, <keycap>B</keycap>,
	      <keycap>N</keycap> と <keycap>M</keycap>を使う。</para>

	    </sect4>

	  <sect4>
	    <title>その他の注意すべき点</title>

	    <para>
            すべてのコマンドの挿入はツールメニューのサブメニュー上で
            有効である。たった1つのノートを挿入するためにメニューを
            辿っていくことはありそうもないが、メニューはキーボード
            ショートカットを表示しているので、どのキーがどの機能に
            割り当てられているかを忘れた場合には役に立つリファレンスを
            提供する。</para>

	    <para>
            キーボードショートカットはQWERTYレイアウトキーボード用に
            現在デザインされている。その他のレイアウトにキーをリマップ
            する方法はまだなく、設定メニュー上の"ショートカットの構成"
            オプションを使うことによって各々のキーの再定義を個別に行なう??。
              short of reassigning each
	      key individually using the "Configure Shortcuts..." option
	      on the Settings menu.</para>

	  </sect4>

	</sect3>

	<sect3 id="matrix-insertion-midi">
	  <title>MIDIキーボードからのノートの入力</title>

	  <para>
            MIDIキーボード又はその他のMIDI制御デバイスを使うことで
            マトリクスエディタ中にノートを入力することができる。
            マトリクスエディタはキーボード上で演奏したピッチを使うが、
            durationsはエディタそれ自身でのグリッドの設定中で選択したもの
	    You can enter notes into the matrix editor one at a time
	    using a MIDI keyboard or other MIDI control device.  The
	    matrix editor uses the pitches you play on the keyboard,
	    but the durations you have selected in the Grid setting of
	    the editor itself.  これは"ステップ録音"として知られている。
	  </para>

	  <para>
            MIDIキーボードからノートを入力するために、最初に既定値の
            MIDIデバイスにキーボードを構成することを確実にする必要が
            ある。次に、ツールバー又は表示メニュー中で、このコントロールが、
            ノートのdurationとなる正しいグリッド設定を確実にする必要がある。
	    Then make sure you have the right Grid
	    setting in the View menu or toolbar, as this controls the
	    note duration.
            次に、マトリクスエディタのツールバー上のステップ録音ボタンか
            ツールメニューのステップ録音を選択する。MIDIキーボード上で
            押されたすべてのノート上のその点は、ウィンドウがクローズするか、
            別のウィンドウが有効になるか、再度ステップ録音がoffにされるまで
            そのウィンドウ中に現在の挿入時間で挿入される。
	  </para>

	  <para>
            異なったdurationのノートを挿入するために、ステップ録音実行
            中の間グリッド設定を変更することができる。
	  </para>
	</sect3>
      </sect2>

      <sect2 id="matrix-selection">
	<title>ノートの選択</title> <para>
        マトリクスエディタ中でノートを選択するために、選択(矢印)ツール
        にスイッチし、次に、選択したいノートを含む四角の領域を囲む。
        選択されたイベントは青でハイライトされる。もしも1つのイベント
        上で代わりにクリックすると、そのイベントのみが選択される。
	</para><para>
        もしも、<keycap>シフト</keycap>キーを、ノートをクリックするか、
        四角で囲む間押しているならば、新しい選択が、置き代わる代わりに
        存在する任意の選択に追加される。
	</para>

	<para>
         選択を解除したい場合には、マトリクスエディタの空白の場所で
         クリックするか、エスケープキーを押す。</para>
	
	<para>
         マトリクスエディタの左端のピアノキーボードの下中でキー上で
         シフトしながらクリックすることによって与えられたピッチの
         ノートをすべて選択することができる。ピッチの範囲を選択する
         ために、シフトキーをOSIながらドラッグすることもできる。この選択
         は、今まで選択したものに追加されるので、新しく選択したい場合には
         古いものを先に消す。
	</para>
      </sect2>

      <sect2 id="matrix-editing">
	<title>ノートの移動とコピー</title>
	<para>
          移動ツールと共にクリックしてドラッグするか、選択の後
          選択ツールと共にドラッグするかをマトリクスエディタで
          行なうことによって時間とピッチの両方中でノートを移動
          することができる。
	</para>
	<para>
          ノートをコピーするためには、まず選択し、標準のコピーと
          貼り付け機能を使う。貼り付け後、張り付けられたノートは
          代わりに選択され、必要なところにどこにもドラッグすることが
          できる。
	</para>
      </sect2>

      <sect2 id="matrix-view-options">
	<title>マトリクス表示の設定</title>
	<para>
	  <!-- zoom, rulers etc -->
	</para>
      </sect2>
    </sect1>

    <sect1 id="notation-view">
      <title>Notationエディタ</title>

      <!-- Introduction, purpose -->

      <sect2 id="nv-introduction">
	<title>概要</title>

	<para>

          &rosegarden;のnotationエディタは、伝統的なスコア記法中で
          1つまたはそれ以上のstaffを表示、編集することを可能にする。

	</para><para>

	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-notationview.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;'s notation editor</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
          &rosegarden; はシーケンサアプリケーションとして、その主要な
          焦点と互換性を持つ、最高のレイアウトを提供しようとする。
          This means that although the editor supports
	  chords, overlapping and nested beamed groups, triplets and
	  arbitrary tuplets, grace notes, dynamics, accents, text and
	  so on, it does not provide as much fine control over layout
	  (especially in contrapuntal music) as a dedicated score
	  editing program might.
          
          写植によい形式である、
          <link linkend="commands-main-file-export-lilypond">
          Lilypondファイル</link> を書くことができるのにもかかわらず、
          写植品質の楽譜を&rosegarden;は生成することを目的としない。

	</para>
      </sect2>

      <!-- Single and multiple staffs, and "current staff" -->

      <sect2 id="nv-staffs">
	<title>1つまたは複数のstaff</title>

	<para>
          &rosegarden;メインウィンドウからnotationエディタを開く
          3つの方法がある(それらはすべて、メインウィンドウに
          いくつかのセグメントが存在することを最初に要求し、
          そのため、もしも、新しい楽曲構成を始めるならば、
          それを編集することを考え始める前に、セグメントを
          作成する必要がある)。

	  <variablelist>

	    <varlistentry>
	      <term>セグメント上でのダブルクリック</term>
	      <listitem>
		
		<para>
                最も明らかな手段は、メインキャンバス中でセグメントを
                ダブルクリックする方法である。これは既定のエディタ
                (notation、マトリクスまたはイベントリスト)として
                構成されているもので、どこででもセグメントを
                オープンし、既定値でこれはnotationエディタである。
                そのため、Notationエディタウィンドウ中で1つの
                staffとして、1つのセグメントをダブルクリックする
                と開く。</para>
		
		<para>
                この方法で複数のstaffをオープンすることもできる。
                シフトキーを押しながら、オープンしたい複数のセグメントの
                各々を、メイン表示上で選択(1つのマウスクリック)するが、
                最後のものをダブルクリックする。選択されたすべての
                セグメントは1つのnotationウィンドウ中に一緒に
                オープンされる。
                </para>

	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>既定のエディタメニュー機能でのオープン(リターンキー)</term>
	      <listitem>

		<para>
                 リターンキーは既定のエディタメニュー機能の中のオープン
                 のショートカットであり、それはダブルクリックと同じ
                 である。notationエディタ中で現在選択されている
                 セグメントすべてをまとめてオープンするか、既定値として
                 構成したその他のエディタでオープンする。</para>
	      </listitem>
	    </varlistentry>
		
	    <varlistentry>
	      <term>Notationエディタメニュー機能内でのオープン</term>
	      <listitem>

		<para>代わりに、メインウィンドウのメニュー機能内の
                オープンた、キャンバス内のセグメント上の右ボタンの
                ポップアップメニュー上でオープンすることもできる。
                希望のセグメントを選択(上記のようにシフトキー+クリックか、
		<link linkend="commands-main-edit-select-all-segments">
                すべてのセグメントの選択</link>機能のどちらか)し、
                次に、Notationエディタ中でオープンを選択する。
                </para>
	      </listitem>
	      
	    </varlistentry>
	  </variablelist>

	</para>

	<para>
          もしも1つ以上のstaff(すなわちセグメント)をnotationエディタ
          内で表示したいのであれば、一時にそのうちの1つのみが"カレント"
          にできる。
          カレントstaffは、その上に挿入カーソルを持つことで識別すること
          ができ(<link linkend="nv-rulers">ルーラとカーソル</link>
          を参照)、挿入用カーソルを使う編集操作が起こった上のstaff
          である。this is the staff on which any editing
	  operations that use the insert cursor will take place.
          最上部のstaffは既定値ではカレントであるが、その上で
          コントロールキーを押しながらクリックするか、
          Staff上のカーソルを上に
          とStaff上のカーソルを下にメニュー機能を使うことで、
          違ったstaffに切り替えることができる。
	</para>

      </sect2>

      <!-- Linear and page layouts -->

      <sect2 id="nv-layout">
	<title>リニアとページレイアウト</title>

	<para>
          notationエディタがstaffを表示する通常の方法は、
          リニアレイアウトとして知られているものである。1つのstaff
          がその他の一番上にあり、それぞれのstaffは単独の、水平に
          スクロール可能な長い行になっている。エディタ上のいくつかの
          機能は(<link linkend="nv-rulers">ルーラ</link>のようなもの)
          リニアレイアウトのみで有効である。
	</para>

	<para>
          しかし、2つの違ったページベースのレイアウト内でstaffを
          表示させることも可能である。継続(Continuous)ページ
          と複数(Multiple)ページである。</para>

	<para>
         継続ページレイアウト内では、楽曲はウィンドウとして同じ
         幅の無限の高さのページとして編集される。各々のstaffは
         各行の終わりで区切られ、残りのstaffを以下に持つ新しい
         行で始まる。
         </para>

	<para>
        複数ページレイアウトでは楽曲は印刷されるときに真のページに
        分割される。それぞれのページのサイズは、実際に印刷される
        的にそれぞれのラインにほぼ同じ量の楽曲がフィットするように
        計算される(構成ダイアログ中で印刷の改造度のために指定された
        ポイントサイズに従って)。印刷バージョンは、印刷するときに
        明確な紙の大きさとマージンに依存するので、まったく同じという
        ことはありそうもないが、A4サイズを使うときにはそれはかなり
        近くなければならない。
        </para>

	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-notationview-multipage.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>複数ページレイアウトでの&rosegarden;のnotationエディタ</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
        ほとんど、但し全部ではない、表示と編集機能はリニアレイアウト
        と同じようにページレイアウトモードで動く。
	</para>

	<para>
          3つのレイアウトモードを切り替えるためには、リニアレイアウト、
          継続ページレイアウトと複数ページレイアウトメニュー機能を使う。
	</para>
      </sect2>

      <!-- Rulers and Cursors -->

      <sect2 id="nv-rulers">
	<title>ルーラとカーソル</title>

	<para>
          &rosegarden;notation エディタウィンドウは2つのルーラと
          カーソルを含んでいる。ルーラはメインnotationキャンバスの
          上から下までtickmarkとともに水平のstripで分割されていて、
          カーソルはエディタ中のトップのstaffの開始点に初期状態として
          垂直の色が付いた行としてある。
	</para>

	<para>
          紫色のカーソルは挿入カーソルである。これは、挿入かペースト
          が起こるような動作のポイントを表示する。上部のルーラ上で
          ドラッグかクリックをするか、(任意のイベントを避ける)空白の
          staffの一部上でクリックするかドラッグするか、<keycap>
          コントロール</keycap>キーを押したままどこかでクリックすること
          で挿入カーソルを移動することができる。
	</para>

	<para>
        一度に1つのイベントを、挿入カーソルを移動するために、左か右の
        矢印キーを使うことができる。もしも<keycap>コントロール</keycap>
        キーを、矢印キーを押すときに押していると、カーソルは一度に
        すべてのバーを移動する。もしもシフトキーを押しているならば、
        カーソルはそれらをパスするように、
        <link linkend="nv-tools-selections">イベントの選択</link>
        を行なう。
	</para>

	<para>
          青のカーソルは再生ポインタである。マトリクス表示とメイン
          ウィンドウ内の同様のカーソルと同じく、これは、現在の再生
          または録音位置を示す。これは下の方のルーラで位置を変更できる。
	</para>

	<para>
          ルーラは<link linkend="nv-layout">リニアレイアウト</link>
          モードでのみ表示されることに注意。
	</para>

      </sect2>

      <!-- Display conventions (annotated picture with some selected notes,
           some quantized notes, a bar of incorrect length etc) -->

      <!-- Tools and Selections -->

      <sect2 id="nv-tools-selections">
        <title>ツールと選択</title>
	<para>
          ほとんどの、&rosegarden; Notationエディタのメニューと
          ツールバー編集機能は<quote>ツール</quote>、<quote>
          選択を行なう機能</quote>と<quote>ドラッグ操作</quote>
          の3つの機能に分類される。
        </para>

	<variablelist>
	  <varlistentry>
	    <term>ツール</term>
	    <listitem>
	      <para>
                基本的なツールはツールバーボタンから通常アクセスできる、
                選択ツール、消去ツールと、ノートの挿入、rests、テキスト
                その他のためのそれらである。ツールを選択すると、代わりに
                少なくとも他のツールが選択されるまで、メインnotation
                キャンバス上でマウスボタンの既定の動作が変わる。たとえば、
                選択ツールを選択すると、選択が可能になり、(以下の)
                選択ベースの機能が使えるようになる。挿入ツールを選択すると
                (たとえばノートの1つ)、<acronym>GUI</acronym>の動作が
                切り替えられ、キャンバス上でクリックすることでノートを
                挿入できる。削除ツールはそれらをクリックすることでイベントを
                削除する。
	      </para>
	      <para>
                ツール目丹生を使うことで現在のツールを変更することもできる。
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>選択操作上の機能</term>
	    <listitem>
	      <para>
                残りの大多数のメニュー機能は使うことができる前にキャンバス
                上で選択されることを要求する。そのうちのいくつかは、
                (たとえば、<guimenuitem>Cut</guimenuitem> や
                <guimenuitem>Note スタイル</guimenuitem>機能)
                選択されたイベント上で動作する。その他は
                (たとえば<guimenuitem>Grace Notes</guimenuitem>や
                <guimenuitem>Stem Directions</guimenuitem>機能)
                選択がいくつかのnoteを含むまで実行を凍結する。
	      </para>
	      <para>
                キャンバス上のいくつかのイベントを選択するために、
                選択(矢印)ツールに切り替え、選択したいイベントを含む
                矩形領域を囲む。選択されたイベントは、青にハイライト
                される。おしも1つのイベント上でクリックすると、
                そのイベントのみが選択される。
                <footnote><para>
                そのイベントのために編集ダイアログをオープンするために
                1つのイベント上でダブルクリックをすることもできるが、
                それは選択には何の動作もしない。</para></footnote>。
               </para>
               <para>
                もしも、<keycap>シフト</keycap>を矩形領域からドラッグ
                アウトする間押しているならば、そのコンテンツは置換の
                変わりに存在する任意の選択に追加される。
	      </para>
	      <para>
                すべてのバーを選択するために、そのバー内のどこか空白の
                場所で、選択ツールと共にダブルクリックする。staffのすべて
                をセンタｃするために、3回クリックする。編集メニューは
                挿入カーソルの位置上を元にした拡張領域を選択するための
                機能を運び、シフトキーと左又は右矢印キーを押すことによって、
                挿入カーソルの周りのイベントを選択できる。
	      </para>
	      <para>
                一度に、1つのstaffより多くイベントを選択することはできない。
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>ドラッグ操作</term>
	    <listitem>
	      <para>
                あるものの周りでドラッグを行なうことでひとまとまりの編集を
                確実にすることができる。選択(矢印)ツールに切り替え、
                ノートのピッチを、その頭を上か下にクリックし、ドラッグする
                ことによって変更でき、noteの時間とその他のイベントは、
                それらを左か右にドラッグすることによって変更できる。
                (残りの時間シグネチャにドラッグできないが、それ以外は
                 すべてドラッグできる。もしも1つ以上のイベントを選択
                しているならば、一度にすべての選択がドラッグされる。)
	      </para>
	      <para>
                ドラッグは通常ツールバー機能やメニューを使うよりも、
                 より少ない確実な手段であるが、それはより簡単である。
	      </para>
	    </listitem>
	  </varlistentry>
        </variablelist>
      </sect2>

      <!-- Insertion: notes, auto-ties, accidentals -->

      <sect2 id="nv-insertion">
      <title>ノートの挿入とrests</title>

      <para>
      noteを挿入するために、ツールバー上の特定のduration上でクリックする
      ことによってノートメニューの1つを選択し、ノートを追加したい位置の
      staff上でクリックする。
      </para>

      <para>
      If you add a note at the same time as an existing note of
      different duration, the editor will generally assume that you
      want to create chords and will split the existing or new note
      accordingly so as to create one or more chords with ties.  If
      you really do want to chord two different durations, you can
      select the tied noteheads and use the Collapse Equal-Pitch Notes
      function to merge them together. Alternatively, the default
      behaviour can be changed in the &rosegarden; configuration dialog
      so as not to do the split at all.</para>

      <para>
      もしも、異なったduration(すなわち同じピッチ)の存在するノートの
      上に正確にノートを追加するならば、存在するノートのdurationは新しい
      ものによって変更される。
      </para>

      <para>
      もしも存在するノートと同じような時間のrestを追加するならば、
      ノートは、おそらくそれと共に削除されるか、短くされるか、
      restのdurationのために、封じられる。
      If you add a rest at the same time as an existing note,
      the note will be silenced for the duration of the rest,
      shortening or possibly removing it altogether.</para>

	<sect3 id="nv-insertion-keyboard">
	  <title>PCキーボードによるノートとrestの入力</title>

	  <sect4>
	    <title>Duration</title>

	    <para>
              最初に、挿入したいときにノート(又はrest)のdurationを
              表示するためにnotationツールを選択することを確実にすること。
              以下の数字キーを使うことによって色々なノートタイプを選択できる:
            </para>

	    <itemizedlist>
	      <listitem><para><keycap>5</keycap> &ndash; Breve</para></listitem>
	      <listitem><para><keycap>1</keycap> &ndash; Whole note (semibreve)</para></listitem>
	      <listitem><para><keycap>2</keycap> &ndash; Half note (minim)</para></listitem>
	      <listitem><para><keycap>4</keycap> &ndash; Quarter note (crotchet)</para></listitem>
	      <listitem><para><keycap>8</keycap> &ndash; Eighth note (quaver)</para></listitem>
	      <listitem><para><keycap>6</keycap> &ndash; Sixteenth note (semiquaver)</para></listitem>
	      <listitem><para><keycap>3</keycap> &ndash; Thirty-second note (demisemiquaver)</para></listitem>
	      <listitem><para><keycap>0</keycap> &ndash; Sixty-fourth note (hemidemisemiquaver)</para></listitem>
	    </itemizedlist>
	    
	    <para>数字キーを押す間に<keycap>Ctrl</keycap>キーを押すと、
              関連するdotted-noteツールを選択する。</para>

	    <para>
             <keycap>G</keycap>キーを押すことで、tripletバージョンの
              note durationに切り替えることができる。もう一回押すと、
              通常のdurationに切り替わる。ウィンドウの下部のステータス
              バーはtriplet durationが有効の時にそれを通知する。</para>
	  </sect4>

	  <sect4>
	    <title>ピッチ</title>

	    <para>
              notationツールが選択されると、以下のピッチキーのどれかを
              押すことによって<link linkend="nv-rulers">カーソルの挿入
              </link> で現在の位置にnoteを挿入することができる。</para>

	    <itemizedlist>
	      <listitem><para><keycap>A</keycap> &ndash; ド (the tonic of the current key in the current clef)</para></listitem>
	      <listitem><para><keycap>S</keycap> &ndash; レ</para></listitem>
	      <listitem><para><keycap>D</keycap> &ndash; ミ</para></listitem>
	      <listitem><para><keycap>F</keycap> &ndash; ファ</para></listitem>
	      <listitem><para><keycap>J</keycap> &ndash; ソ</para></listitem>
	      <listitem><para><keycap>K</keycap> &ndash; ラ</para></listitem>
	      <listitem><para><keycap>L</keycap> &ndash; シ</para></listitem>
	    </itemizedlist>

	    <para>キーを押している間<keycap>Shift</keycap>キーを押すと、
	      半音noteが高くなり(＃が定義されていないミとシを除く)
	      <keycap>Shift</keycap>と<keycap>Ctrl</keycap>キーを一緒に押すと、
              半音低くなる(ファとドを除く)
	    </para>

	    <para>一オクターブ高いnoteを入力するためには、以下にあるキーを
              使う。<keycap>Q</keycap>,
	      <keycap>W</keycap>, <keycap>E</keycap>, <keycap>R</keycap>,
	      <keycap>U</keycap>, <keycap>I</keycap>と
	      <keycap>O</keycap>。同様に、オクターブ下のnoteを入力する
              ためには、 <keycap>Z</keycap>, <keycap>X</keycap>,
	      <keycap>C</keycap>, <keycap>V</keycap>, <keycap>B</keycap>,
	      <keycap>N</keycap> と<keycap>M</keycap>を使う。</para>

	    </sect4>

	  <sect4>
	    <title>Rests</title>
	    
	    <para>ノートの代わりにrestを挿入するためには、
	      <keycap>P</keycap>を使う。その代わりに、現在のツールを
              切り替えてrestツールに、また、noteツールに再度戻すために、
	      <keycap>T</keycap> と <keycap>Y</keycap>を使うことができる。
            </para>

	  </sect4>

	  <sect4>
	    <title>Chords</title>

	    <para>
              既定値のnotationエディタの動作は、noteの挿入後に挿入
              カーソルを次に進め、メロディ中でその後に別のnoteを
              挿入できるようになる。これは、<keycap>H</keycap>キーを、
              chordモードに切り替えるために使うことによって、変更する
              ことができ、最後のものの同じ時間に続く挿入が起きるchord
              モードへ切り替えることができる。再度<keycap>H</keycap>
              キーを押すと、メロディ挿入動作に戻る。</para>

	  </sect4>

	  <sect4>
	    <title>その他の注意点</title>

	    <para>
              挿入コマンドのすべては、ツールメニューのサブメニューで有効で
              ある。1つのno-toを挿入するためにメニューを操作することは、
              ありそうもないことであるが、メニューはショートカットを表示し、
              それゆえ、どのキーがどの機能か忘れた場合に有効なリファレンス
              を提供する。</para>

	    <para>
            キーボードショートカットはQWERTYレイアウトキーボード用に
            現在デザインされている。その他のレイアウトにキーをリマップ
            する方法はまだなく、設定メニュー上の"ショートカットの構成"
            オプションを使うことによって各々のキーの再定義を個別に行なう??。
              The keyboard shortcuts are currently designed for use
	      with a QWERTY-layout keyboard.  There is not yet any way to
	      remap the keys for another layout, short of reassigning each
	      key individually using the "Configure Shortcuts..." option
	      on the Settings menu.</para>

	  </sect4>

	</sect3>

	<sect3 id="nv-insertion-midi">
	  <title>MIDIキーボードを使ったnoteの挿入</title>

	  <para>
            MIDIキーボード又はその他のMIDI制御デバイスを使うことで
            マトリクスエディタ中にノートを入力することができる。
            notationエディタはキーボード上で演奏したピッチを使うが、
            durationsはエディタそれ自身でのグリッドの設定中で選択したもの
            をつかう。これは"ステップ録音"として知られている。
	  </para>

	  <para>
            MIDIキーボードからノートを入力するために、最初に既定値の
            MIDIデバイスにキーボードを構成することを確実にする必要が
            ある。次に、notationツールがdurationをセットするために選択
            されることを確実にする。次に、notationエディタのツールバー
            上のステップ録音ボタンかツールメニューのステップ録音を
            選択する。MIDIキーボード上で押されたすべてのノート上のその点
            は、ウィンドウがクローズするか、
            別のウィンドウが有効になるか、再度ステップ録音がoffにされるまで
            そのウィンドウ中に現在の挿入時間で挿入される。
	  </para>

	  <para>
            異なったdurationのノートを挿入するために、ステップ録音実行
            中の間別のnotationツールに変更することができ、また、chord
            を挿入するために、Chordモードに切り替えることができる。
	  </para>
	</sect3>
	
      </sect2>

      <!-- Keys, Clefs and Time Signatures -->

      <sect2 id="nv-signatures">
	<title>Clefs, keys, テンポと時間シグネチャ</title>
	
	<para>
        時間に関係した変更(テンポと時間シグネチャ)を操作するために
        &rosegarden;が行なう方法について知る最初のことは、clefsと
        keysに完全に違うことが扱われる。
        The first thing to know about the way &rosegarden; handles
	these is that time-related changes (tempos and time
	signatures) are treated entirely differently from clefs and
	keys.
        notationと同じように再生と録音を簡単に管理するために、&rosegarden;
        はテンポと時間シグネチャが変更されることを要求し、それは一度に
        すべてのstaffを行なう。
        In order to simplify managing playback and recording as
	well as notation, &rosegarden; requires that when the tempo or
	time signature changes, it does so in all staffs at once.  You
	can't have one staff in 3/4 and another in 4/4 simultaneously,
	or one staff playing at 120 to the beat and another at 90.
	This applies only to time: there is no such restriction on the
	use of clef and key changes.</para>

	<para>clef, key, テンポまたは時間シグネチャをnotationエディタ
        内で変更したい場合、変更を行ないたい場所に<link
	  linkend="nv-rulers">挿入カーソル</link>を位置づけ、編集
        メニュー
	<link linkend="commands-nv-menu-edit-add-clef">Add Clef
	Change...</link>, <link linkend="commands-nv-menu-edit-add-key-signature">Add Key
	Change...</link>, <link linkend="commands-nv-menu-edit-add-tempo">Add
	Tempo Change...</link> と <link
	  linkend="commands-nv-menu-edit-add-time-signature">Add Time Signature
	Change...</link> 機能を使う。すると以下のように、変更したい固有の
        clef,key,テンポまたは時間シグネチャを変更できる所にダイアログ
        ボックスが表示される。</para>

	<sect3 id="nv-signatures-clef">
	  <title>Clef</title>
	  <para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-clefdialog.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;'s clef dialog</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
	  </para>
	</sect3>
	
	<sect3 id="nv-signatures-key">
	  <title>Key</title>
	  <para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-keysigdialog.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;'s key signature dialog</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
	  </para>
	</sect3>
	
	<sect3 id="nv-signatures-tempo">
	  <title>テンポ</title>
	  <!-- Should be in general section, not notation -->
	  <para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-tempodialog.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;'s tempo dialog</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
	  </para>
	</sect3>
	
	<sect3 id="nv-signatures-time-signature">
	  <title>時間シグネチャ</title>
	  <!-- Should be in general section, not notation -->
	  <para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-timesigdialog.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;'s time signature dialog</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
	  </para>
	</sect3>
      </sect2>

      <!-- Text -->

      <sect2 id="nv-text">
	<title>テキストと歌詞</title>
	
	<para>
        テキストイベント中で、staffはたくさんの種類のテキストを含む
        ことが可能である。テキストイベントには2つの基本的なクラスがある。
        最初のものは、(staff中の特定の時間に関連付けられる)ツールバー
        中の大きな<guilabel>T</guilabel>としてマークされたボタン上で
        有効な、テキストツールを使うことで、作成できる。
        歌詞は、これと同じ方法で作成できるが、
        <link linkend="nv-text-lyrics">歌詞エディタ</link>
        を使うことによってより簡単に作成できる。
        </para>

	<para>
         小さなテキストを追加するために、追加したい点でテキストツールを
         選択してクリックする。ダイアログボックスが表示され、その中に
         テキストを入力することができ、その意図された目的を選択する。
         (Rosegarden prefers to store what the text
	is for, rather than how it should look; this is so that in
	future we may be able to configure how the various sorts of
	text are presented for each individual user.)
        有効なpurposes(又はスタイル)は以下の通りである。
        </para>

	<variablelist>

	  <varlistentry><term>Dynamic</term><listitem><para> Used for
	  minor local indications such as the dynamic marks "p", "mf"
	  etc. Shown below the staff in small italic
	  type by default.  </para></listitem></varlistentry>

	  <varlistentry><term>Direction</term><listitem><para> Used
	  when indicating significant changes in style or mood.  Shown
	  above the staff in large roman type by default.
	  </para></listitem></varlistentry>

	  <varlistentry><term>Local Direction</term><listitem><para>
	  Used to indicate less significant changes in style or mood.
	  Shown below the staff in a smaller bold-italic roman type by
	  default.  </para></listitem></varlistentry>

	  <varlistentry><term>Tempo</term><listitem><para> Used to
	  indicate significant changes in tempo.  Shown above the
	  staff in large bold roman type by default.
	  </para></listitem></varlistentry>

	  <varlistentry><term>Local Tempo</term><listitem><para> Used
	  to indicate more minor or local changes in tempo.  Shown
	  above the staff in a small bold roman type by default.
	  </para></listitem></varlistentry>

	  <varlistentry><term>歌詞</term><listitem><para>
          <link linkend="nv-text-lyrics">歌詞エディタ</link>
          を使うことで通常歌詞は作成できるが、このスタイルを使うことで
          1語1語入力することもできる。このスタイルは既定値では
          小さなroman type でテキストの下に表示される。
          (注意:もしもこの方法で歌詞を入力し、staffの歌詞を
           あとで編集する場合、この方法で入力した任意の歌詞は、
          その位置が、もしも、歌詞エディタによって期待される所と適合して
          いなければ、変更又は移動される。)
          </para></listitem></varlistentry>

	  <varlistentry><term>Annotation</term><listitem><para> Used
	  for helpful text that is not strictly considered part of the
	  score.  Shown below the staff, boxed-out in a yellow
	  sticky-label-style box by default.
	  </para></listitem></varlistentry>

	  </variablelist>

	<para>
         テキストツールで存在するテキスト上でクリックすることで、
         作成した後にテキストを編集することもできる。</para>
	
	<sect3 id="nv-text-lyrics">
	  <title>歌誌の編集</title>
	
	  <para><guimenu>表示</guimenu>メニュー中の、
          <guimenuitem>歌詞エディタのオープン</guimenuitem>オプション
          から、歌詞エディタは有効であり、これは、一度に1つのstaffの
          ためにすべての歌詞イベントを編集することができるようになり、
          これは基本の本文編集システムを使う。これを使うために、メニュー
          オプションを有効にし、残りのダイアログ中で歌詞を編集し、
          OKをクリックする。</para>

	  <para>The lyrics you enter should follow a particular
	  format.  Bar lines are vital to avoid the editor getting
	  confused, and are represented with a slash ("/").  Within
	  each bar the individual syllables are separated by spaces
	  (at least one space: the editor doesn't care about any extra
	  whitespace). Each syllable in turn will be attached to the
	  next subsequent note or chord within that bar (although at
	  the moment the editor can get quite confused by chords that
	  are not exact, i.e. that require smoothing or
	  quantizing).</para>

	  <para>If you want a note to have no syllable attached to it,
	  you need to provide a dot (".") as the syllable for that
	  note.  (This is why the default lyric text for a segment is
	  usually full of dots.)  Remember to separate the dots with
	  spaces, so that they are clearly separate syllables.</para>
	  
	  <para>If you want more than one syllable on the same note,
	  with a space between them, use a tilde ("~") instead of the
	  space.  It will be shown as a space on the score.</para>

	  <para>If you want to split a syllable across two notes, with
	  a hyphen, you need to enter a space following the hyphen so
	  the editor knows to treat it as two syllables.  (Hyphens get
	  no special treatment within syllables.)</para>

	  <para>Syllables consisting only of numbers surrounded by
	  square brackets (like "[29]") will be ignored; this is the
	  format used for the automatically-generated bar numbers
	  shown in the editor.</para>

	  <para>You should also be aware that the textual format of
	  lyrics is only used for editing:  the lyrics are actually
	  stored as distinct text events (one per syllable).  This
	  means that the text format may potentially change in the
	  future to accommodate more advanced editing capabilities,
	  although the event format should not change and so your
	  saved files should continue to be compatible.</para>

	  </sect3>

	</sect2>

      <!-- Indications -->

      <sect2 id="nv-indication">
	<title>スラーとhairpins</title>

	<para>スラーとhairpin dynamic markingsはイベントとして、
        noteやrestsと同じように保存される。これらを生成するために、
        カバーしたいもの(一続きのnoteやその他)の領域を選択し、次に、
        <guimenu>グループ</guimenu>メニューからの
	<guimenuitem>スラーの追加</guimenuitem>, 
	<guimenuitem>クレッシェンドの追加</guimenuitem> または
	<guimenuitem>デクレッシェンドの追加</guimenuitem> options from
	the <guimenu>Group</guimenu> を選択する。</para>

	<para>その他のイベントと同じように、スラー又はhairpin を取り除く
        ことができる。選択ツールを使って選択し、<keycap>Delete</keycap>
        キーを押すか、削除ツールを有効にしてそれをクリックする。</para>

      </sect2>

      <!-- Stem direction, slashes etc -->

      <sect2 id="nv-note-qualities">
	<title>Note stems and slashes</title>

	<para>You can set the stem direction of any selected notes
	(provided they are a sort that have stems) using the three
	Stem Direction options on the Notes menu.  The options allow
	you to either fix the stems up or down, or revert to the stem
	direction that &rosegarden; would otherwise have chosen.  See
	also <link linkend="nv-beamed-groups">Beams</link>.</para>

	<para>The <guimenu>Notes</guimenu> menu also contains options for adding slashes
	across note stems, for example to indicate short repeated
	notes or drum rolls.  These are currently purely notational;
	&rosegarden; will not take them into account when playing the
	staff or generating &MIDI;.</para>
      </sect2>
      
      <!-- Beamed groups, including overlapping and nesting them -->

      <sect2 id="nv-beamed-groups">
	<title>Beams</title>
	
	<para>Adding beams to notes is considered a grouping operation
	in the &rosegarden; Notation editor, available on the <guimenu>Group</guimenu>
	menu.  Select the notes you want to beam, and use the Beam
	<guimenu>Group</guimenu> menu option.  To remove a beam, select the notes and use
	the <guimenuitem>Unbeam</guimenuitem> menu option.</para>

	<para>It is possible to have more than one beamed group
	happening at the same time &mdash; you just select and beam the
	separate groups one at a time &mdash; but Rosegarden is usually not
	yet clever enough to work out which notes should have stems up
	and which should have stems down for simultaneous beamed
	groups, so you will probably have to set the stem directions
	of the notes in the groups explicitly as well as beaming them.</para>

	<para>&rosegarden; can attempt to guess a sensible beaming for a
	piece of music, provided it's not too complicated.  To invoke
	this, select the notes you want to calculate the beaming for
	(for example by triple-clicking to select a whole staff) and
	then use the <guimenuitem>Auto-Beam</guimenuitem> option on the 
	<guimenu>Group menu</guimenu>.  Auto-beaming
	is also done automatically when loading a &MIDI; file, for
	example, and the editor also does some automatic beaming as
	you enter notes (this can be disabled by changing the
	"Auto-Beam when appropriate" setting on the configuration
	dialog or the insertion tool's right-button menu).</para>

      </sect2>

      <!-- Tuplets -->

      <sect2 id="nv-tuplets">
	<title>Triplets and other tuplets</title>

	<para>A triplet group consists of three notes or chords played
	in the time of two.  (More precisely, it consists of notes
	with a total duration of three arbitrary units played in the
	time of two of those units.)</para>

	<para>We use the word <quote>tuplet</quote> to describe the general
	situation in which notes with a total duration of any given
	number of units are played in the time of a different number
	of those units: nine notes in the time of eight, or six in the
	time of four, or a crotchet and a quaver in the time of a
	single crotchet, or even two notes in the time of three.  (At
	present &rosegarden; does not support the last example &mdash; tuplet
	groups must always be played with a shorter duration than
	written.)</para>

	<para>The triplet and tuplet menu functions work by taking an
	existing series of notes or rests and squashing them so they
	play quicker, filling in the left-over space at the end of the
	series with a final rest and drawing the whole as a tuplet
	group.  You can therefore create a new series of triplets by
	entering the first two notes of the series (in their normal
	form), making them into triplets, and then filling in the rest
	left over by the triplet operation with the final note of the
	triplet.  Or you can apply the triplet operation before you
	enter any notes, thus turning the original rest itself into
	triplet form, and then insert the notes of the triplet on top
	of it.  Some examples may help:</para>

	<!-- Need examples and screenshots -->
	
	<!-- Then discuss general tuplet dialog... -->

	  <para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-tupletdialog.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;'s general tuplet dialog</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
	  </para>

	<para>To specify a general tuplet group, we need to know what
	the base note is (for example, if we play three crotchets in
	the time of two then the base is a crotchet) and the ratio of
	the number of base notes written to the number played.</para>

	<!-- Then discuss "tuplet mode": with a subtitle? -->

      </sect2>

      <!-- Grace notes -->

      <!-- Paste -->

      <sect2 id="nv-paste-types">
	<title>Paste types</title>

	<para>
	  The meaning of <quote>cut and paste</quote> is less obvious for a music
	  editing program than it is for something like a word
	  processor in which the letters and words go in a simple
	  linear order.  Accordingly, &rosegarden;'s Notation editor
	  offers several different types of Paste operation, as well
	  as separate <link
	  linkend="commands-nv-menu-edit-cut">Cut</link> and <link
	  linkend="commands-nv-menu-edit-cut-and-close">Cut and
	  Close</link> functions.
	</para>

	<para>
	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-pastedialog.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;'s paste-type dialog</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>

	The types of Paste operation are:</para>

	<variablelist>

	  <varlistentry>
	    <term>Restricted</term>
	    <listitem>
	      <para>Requires an existing gap (containing nothing but
		rests) of enough duration to completely contain the
		clipboard's contents.  The contents are pasted into
		the gap.  If there is no gap long enough, the paste
		is not carried out.
	      </para>
	      <para>
		This is the default paste type.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>Simple</term>
	    <listitem>
	      <para>Erases enough events to make a gap long enough to
		paste into, and then pastes into that.  The pasted 
		events therefore completely replace any existing ones 
		in the time covered by the paste.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>Open and Paste</term>
	    <listitem>
	      <para>The opposite of <link
		    linkend="commands-nv-menu-edit-cut-and-close">Cut and
		    Close</link>.  Makes room for the paste by moving all of the
		subsequent events further towards the end of the
		composition.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>Note Overlay</term>
	    <listitem>
	      <para>Carries out a paste in the way that it would
	      happen if you entered each of the notes in the clipboard
	      yourself using the notation editor: if there are other
	      notes overlapping with them, the new or existing notes
	      will be split into ties appropriately.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>Matrix Overlay</term>
	    <listitem>
	      <para>Carries out a paste in the way that it would
	      happen if you entered each of the notes in the clipboard
	      yourself using the matrix editor: the notes presently
	      in the way of the paste will be ignored, allowing the new 
	      notes to overlap arbitrarily with them.
	      </para>
	    </listitem>
	  </varlistentry>

	</variablelist>

	<para>All of these take effect at the current position of the 
	  insert cursor on the current staff.  To choose between the various 
	  paste types, use the <link
	     linkend="commands-nv-menu-edit-paste-dot-dot-dot">Paste...</link> 
	  menu option (with dots) on the <link 
	     linkend="commands-nv-menu-edit">Edit</link> menu.
	</para>

      </sect2>

      <sect2 id="nv-note-styles">
	<title>Noteのスタイル</title>

	<para>
          &rosegarden;は、たとえば、noteの頭の選択、tailの数を、noteが
          埋まっているか埋まっていないかにかかわらず、描画されたnoteの
          色々なタイプの色々な描画方法を変更することができる。
	</para>

	<para>
          標準のスタイル(クラシック、クロス、三角とMensual)が提供され、
          noteスタイルメニューオプションを、選択した個別のnoteのために
          スタイルを変更することができる。それぞれのnoteはそれに対して
          ドのスタイルが選択されたかを憶えていて、この情報は楽曲情報
          の中に格納される。<guimenu>設定</guimenu>メニュー中の
          <guimenuitem>Rosegardenの構成...</guimenuitem>オプションを
          使うことによって新しいnotesの既定値のスタイルを
          変更することができる。
         </para>

	<para>
	  It is also possible to create your own note styles by
	  describing them in <acronym>XML</acronym> files.  (Even the standard styles are
	  defined this way: the only reason the editor knows that a
	  Classical semiquaver has a tilted oval filled head, a stem,
	  two flags, etc., is that the description in Classical.xml
	  says so.)  See the <link
	  linkend="developers-note-styles">Developers Guide</link> for
	  more information.
	</para>
      </sect2>

      <sect2 id="nv-note-fonts">
	<title>Noteフォント</title>
	<para>
	  &rosegarden; は、Lilypondプロジェクトによって開発された、
          Fetaフォントという1つのスケーラブルなnotationフォントを提供
          している。Fetaはほとんどすべての古典的な仕事のために適合して
          いるとても高品質のフォントである。
	</para>

	<para>&rosegarden; は、数多くの、その他のnotationフォントを
        標準のサポートを含む。それらは、TrueType(.ttf)またはPostScript
        Type-1(.pfb,.pfa)形式のフォントで提供されることを必要とし、
        &rosegarden;がインストールされた場所にそれらをインストール
        するために、関連したパーミッションを必要とする。サポートされて
        いるnotationフォントをインストールするために、&rosegarden;
        のインストールのためにshareディレクトリに位置づける(通常
        /opt/kde/share/apps/rosegardenのようなKDEデスクトップの
        インストールツリーである)。これは、"fonts"と呼ばれる
        サブディレクトリで見付かる。そこにフォントファイルをコピーし、
         &rosegarden;を再起動する。もしも、そのフォントがサポートされて
        いるならば、それは、notationエディタのフォントメニューに
        現われる</para>

	<para>敢然又は部分的なサポートは以下のフォントで提供されて
        いる:Blake HodgettsによるFughetta; "オリジナル" Finale
        フォントのPetrucci;"新しい"Finale"フォントのMaestro;
        SibeliusフォントのOpus;Sibelius ジャズフォントのInkpen;
        AdobeからのSonata;CubaseシーケンサからのSteinberg;と
        Xinfonia(上記のフォントのほとんどは、各社の登録商標で
        ある)。THE ROSEGARDEN TEAM
	MAKES NO REPRESENTATION AS TO THE LEGAL STATUS OF ANY USE OF
	THESE FONTS WITH ROSEGARDEN。
        It is your responsibility to
	ensure you are in compliance with the licence (if any) under
	which a font was provided to you, before attempting to use it.
	If you are not sure whether you have the right to use a font,
	don't: apart from anything else, the standard Feta font better
	than most of these anyway.</para>

	<para>It is also possible to provide new mapping files so as
	to use new fonts.  For some fonts that have similar mappings
	or metrics to fonts in the above list, this may be as simple
	as editing the name of the font in the mapping file.  See the
	<link linkend="developers-note-fonts">Developers Guide</link>
	for more information.

	</para>
      </sect2>


      <!-- Quantization, smoothing, and display of quantized notes -->

      <sect2 id="nv-quantization">
	<title>Notation from performance data</title>

	<para>
	  &rosegarden; は多用途のプログラムである。これはnotation
          エディタであるが、第一次的にはシーケンサと音楽を演奏する
          ためのプログラムである。さらに、演奏中、もちろん、時間と
          noteのduration は印刷された楽譜上ほど明確ではない。
        </para>

        <para>
          これは、notationエディタ中で意味のあるnoteを表示させるために
          大量の基本的なnoteの時間とdurationを試みることを&rosegarden;
          が行なうためにそれはたびたび望ましいことを意味する。これは
          quantizationの一種であるが、大量の、驚くべき、あてずっぽうで
         うまく行なうことを要求する種類のものである。&rosegarden;は、
         平面のグリッドquantizerよりもわずかによい仕事を行なうために
         デザインされたquantizerを含む。</para>

	<para>Applying
          quantization strictly for notation is rather unimaginatively
          referred to as <quote>notation quantization</quote>: it only
          applies to the notes you see and edit in notation, and
          doesn't affect the notes that play, or that you edit in
          other views such as the matrix.  This quantization is
          automatically applied to music imported or recorded from
          MIDI, although not all of its possible capabilities are
          enabled by default.
	</para>

	<para>
	  There are two ways to see which notes have been quantized
	  for notation.  By default, each notation view contains a Raw
	  Note Ruler (in the group of rulers above the score) showing
	  a rectangular block for each note.  This block is positioned
	  so as to represent the time and duration of the note as
	  performed, but with the top and bottom edges of the
	  rectangle extended or shortened to represent the time after
	  notation quantization.  If this is too much information for
	  you, you can alternatively choose (in the configuration
	  dialog) to show in a green colour all note heads in the
	  score that have had their timings altered by notation
	  quantization.
	</para>

	<para>

	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-notationquantizer.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;'s notation quantize dialog</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
	  If the quantization &rosegarden; has used is not suitable,
	  either for the entire score or for a selection of notes, you
	  can choose to use a different level of quantization or none
	  at all.  To apply a different quantization to some notes,
	  select the notes and use the <link
	  linkend="commands-nv-menu-transforms-quantize">Quantize</link>
	  menu function (tick the box labelled <quote>Quantize for
	  notation only</quote>).  The quantization level or type used
	  by default can be changed in the configuration dialog.
	</para>

	<sect3 id="nv-quantization-parameters">
	  <title>Configurable parameters for the heuristic notation quantizer</title>

	  <sect4 id="nv-quantization-parameters-during">
	    <title>Parameters for quantization itself</title>
	    
	    <variablelist>

	      <varlistentry>
		<term>Complexity</term>
		<listitem>
		  <para>The "complexity" of a notation quantizer is its
		    most fundamental parameter.  A "complex" quantizer
		    will be more prepared to accept that complex-looking
		    music is in fact intended to be complex, whereas a
		    "simple" quantizer is more likely to assume that
		    complex-looking music results from an imprecise
		    performance of simple music.
		  </para>
		  <para>The default setting is intended to produce
		    reasonable results for a fairly wide range of music.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>Base grid unit</term>
		<listitem>
		  <para>The base grid unit (set to a note duration
		    value) specifies the absolute minimum unit of note
		    that will be permitted to remain in the score after
		    quantization.  For example, if set to a semiquaver,
		    all notes will be placed on boundaries of a multiple
		    of a semiquaver, with durations also a multiple of a
		    semiquaver.
		  </para>
		  <para>The setting of the base grid unit is not quite
		    as significant for a notation quantizer as it is for a
		    plain grid quantizer, because all it does is impose an
		    absolute limit on the level of precision permitted by
		    the complexity parameter.  Mostly, when you find a
		    case in which increasing the grid unit produces better
		    results, you've actually found a case in which the
		    quantizer simply didn't do as good a job as it should
		    have been able to with the smaller unit.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>Tuplet level</term>
		<listitem>
		  <para>The notation quantizer is capable of identifying
		    tuplets (triplets and other time-squashed groups),
		    within reasonable limits.  This parameter controls how
		    ambitious it will attempt to be when looking for
		    tuplets, by setting a limit on how many notes per
		    tuplet group it will attempt to identify.  If it is
		    set to <quote>None</quote>, the quantizer will not
		    attempt to identify tuplets at all.
		  </para>
		</listitem>
	      </varlistentry>

	    </variablelist>

	  </sect4>

	  <sect4 id="nv-quantization-parameters-after">
	    <title>Parameters that control tidying up after quantization</title>

	    <variablelist>

	      <varlistentry>
		<term>Tie notes at barlines etc</term>
		<listitem>
		  <para>Causes any notes that are still found after
		  quantization to overlap barlines or to have
		  durations not exactly expressible with single note
		  heads to be split into multiple notes appropriately,
		  and tied.  This has the same effect as applying the
		  <!-- !!! link --> "Tie Notes at Barlines" function
		  in the notation view.
		  </para>
		  <para>
		    This parameter is not set by default because it
		    changes the number of note events, which is
		    undesirable when using &rosegarden; partly or
		    principally as a MIDI sequencer.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>Split-and-tie overlapping chords</term>
		<listitem>
		  <para>
		    Causes overlapping notes to be split and tied, so
		    as to make strict chords with individual noteheads
		    tied as necessary.  This has the same effect as
		    applying the <!-- !!! link --> "Split-and-Tie
		    Overlapping Chords" function in the notation view.
		  </para>
		  <para>
		    This parameter is not set by default partly because
		    it changes the number of note events, which is
		    undesirable when using &rosegarden; partly or
		    principally as a MIDI sequencer.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>Re-beam</term>
		<listitem>
		  <para>
		    Causes the notes to be re-beamed into groups
		    appropriately after quantization.  This is usually
		    desirable.
		  </para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>Add articulations (staccato, tenuto,
		slurs)</term>
		<listitem>
		  <para>
		    Causes the quantizer to attempt to identify, based
		    on the durations of individual and consecutive
		    notes, which notes should be notated with staccato
		    marks (for notes that fall significantly short of
		    the following note, but not apparently short
		    enough to merit a rest), tenuto (for notes that
		    almost or just overlap the following note) and
		    slurs (for series of notes that meet or overlap).
		  </para>
		</listitem>
	      </varlistentry>
	    </variablelist>
	  </sect4>
	</sect3>
      </sect2>

    </sect1>

    <sect1 id="event-view">
      <title>The Event List editor</title>
      <sect2 id="ev-introduction">
	<title>概要</title>

	<para>

	  The &rosegarden; Event List editor shows the events in a
	  single segment in a raw form, and enables you to edit the
	  precise properties of those events individually.

	  <screenshot>
	    <mediaobject>
	      <imageobject>
		<imagedata fileref="rg-eventlisteditor.png" format="PNG"/>
              </imageobject>
	      <textobject>
	      <phrase>&rosegarden;'s event list editor</phrase>
	      </textobject>
	    </mediaobject>
	  </screenshot>
	</para>
      </sect2>
    </sect1>

  </chapter>




<!--
  **********************************
 
   PART II:
   Command reference

  **********************************
  -->


  <chapter id="commands">
    <title>Command Reference</title>

    <!-- (OPTIONAL, BUT RECOMMENDED) This chapter should list all of
    the application windows and their menubar and toolbar commands for
    easy reference.  Also include any keys that have a special
    function but have no equivalent in the menus or toolbars. This may
    not be necessary for small apps or apps with no tool or menu
    bars. -->

    <para></para>

    <sect1 id="commands-main">
      <title>Main window</title>
      <para></para>


      <sect2>
	<title>File menu</title>
	<para>
	  <variablelist>

	    <varlistentry id="commands-main-file-new">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>n</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>New</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Creates a new composition.</action></para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-open">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>o</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Open</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Opens an existing composition from a Rosegarden-4 (.rg) file.</action></para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-import">
	      <term><menuchoice>
		  <guimenu>File</guimenu>
		  <guimenuitem>Import</guimenuitem>
		</menuchoice></term>
	      <listitem><para>This submenu contains functions for importing compositions from other file formats.</para>

		<variablelist>

		  <varlistentry id="commands-main-file-import-midi">
		    <term><menuchoice>
			<guimenu>Import</guimenu>
			<guimenuitem>Import &MIDI; file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Creates a new composition from the contents of an existing &MIDI; (.mid) file.</action></para></listitem>
		  </varlistentry>

		  <varlistentry id="commands-main-file-import-rg21">
		    <term><menuchoice>
			<guimenu>Import</guimenu>
			<guimenuitem>Import Rosegarden 2.1 file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Creates a new composition from the contents of an existing Rosegarden 2.1 (.rose) file.</action></para></listitem>
		  </varlistentry>

		</variablelist>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-merge">
	      <term><menuchoice>
		  <guimenu>File</guimenu>
		  <guimenuitem>Merge</guimenuitem>
		</menuchoice></term>
	      <listitem><para>This submenu contains functions for merging other files into the current composition.</para>

		<variablelist>

		  <varlistentry id="commands-main-file-merge-file">
		    <term><menuchoice>
			<guimenu>Merge</guimenu>
			<guimenuitem>Merge File...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Merges the contents of an existing Rosegarden (.rg) file into the current composition.  You will be offered a choice of whether to merge the file in new tracks at the start of the composition, or after the end of the current composition.</action></para></listitem>
		  </varlistentry>

		  <varlistentry id="commands-main-file-merge-midi">
		    <term><menuchoice>
			<guimenu>Merge</guimenu>
			<guimenuitem>Merge &MIDI; file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Merges the contents of an existing &MIDI; (.mid) file into the current composition.  You will be offered a choice of whether to merge the file in new tracks at the start of the composition, or after the end of the current composition.</action></para></listitem>
		  </varlistentry>

		  <varlistentry id="commands-main-file-merge-rg21">
		    <term><menuchoice>
			<guimenu>Merge</guimenu>
			<guimenuitem>Merge Rosegarden 2.1 file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Merges the contents of an existing Rosegarden 2.1 (.rose) file into the current composition.  You will be offered a choice of whether to merge the file in new tracks at the start of the composition, or after the end of the current composition.</action></para></listitem>
		  </varlistentry>

		</variablelist>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-export">
	      <term><menuchoice>
		  <guimenu>File</guimenu>
		  <guimenuitem>Export</guimenuitem>
		</menuchoice></term>
	      <listitem><para>This submenu contains functions for exporting the contents of compositions to other file formats.</para>

		<variablelist>

		  <varlistentry id="commands-main-file-export-midi">
		    <term><menuchoice>
			<guimenu>Export</guimenu>
			<guimenuitem>Export &MIDI; file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Saves the contents of the current composition into a new &MIDI; file.</action>  Note that not all data in the Rosegarden composition necessarily can or will be saved in the &MIDI; format.</para></listitem>
		  </varlistentry>

		  <varlistentry id="commands-main-file-export-csound">
		    <term><menuchoice>
			<guimenu>Export</guimenu>
			<guimenuitem>Export Csound score file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Saves the contents of the current composition into a new Csound score file.</action>  Together with a suitable orchestra file (not supplied), this can be used to play the composition through <ulink url="http://www.csounds.com/">Csound</ulink>. Note that not all data in the Rosegarden composition necessarily can or will be saved in the Csound format.</para></listitem>
		  </varlistentry>

		  <varlistentry id="commands-main-file-export-lilypond">
		    <term><menuchoice>
			<guimenu>Export</guimenu>
			<guimenuitem>Export Lilypond file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Saves the contents of the current composition into a new Lilypond file.</action>  This can then be processed by the <ulink url="http://www.lilypond.org/">Lilypond</ulink> system to produce typeset-quality music, although it is likely that the file may need some tweaking to get really good quality output.  Note that not all data in the Rosegarden composition necessarily can or will be saved in the Lilypond format.</para></listitem>
		  </varlistentry>

		  <varlistentry id="commands-main-file-export-mup">
		    <term><menuchoice>
			<guimenu>Export</guimenu>
			<guimenuitem>Export Mup file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Saves the contents of the current composition into a new Mup file.</action>  This can then be processed by the <ulink url="http://www.arkkra.com/">Mup</ulink> music publication system, although it is likely that the file may need some tweaking to get really good quality output.  Note that not all data in the Rosegarden composition necessarily can or will be saved in the Mup format.</para></listitem>
		  </varlistentry>

		  <varlistentry id="commands-main-file-export-musicxml">
		    <term><menuchoice>
			<guimenu>Export</guimenu>
			<guimenuitem>Export MusicXML file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Saves the contents of the current composition into a new MusicXML file.</action>  This can then be used with any music software that supports the MusicXML format.  Note that MusicXML support is experimental and has not been well tested.  Not all data in the Rosegarden composition necessarily can or will be saved in the MusicXML format.</para></listitem>
		  </varlistentry>

		</variablelist>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-save">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>s</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Save</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Saves the composition.</action></para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-save-as">
	      <term><menuchoice>
		  <guimenu>File</guimenu>
		  <guimenuitem>Save As...</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Saves the composition with a new filename.</action></para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-close">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>w</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Close</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Closes the current composition.</action></para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-print">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>p</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Print</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Prints the current composition.</action> At the time of writing, the print function is incomplete.  We recommend using the <link linkend="commands-main-file-export-lilypond">Export Lilypond file</link> function and printing with Lilypond instead.</para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-quit">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>q</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Quit</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Quits &rosegarden;</action></para></listitem>
	    </varlistentry>

	  </variablelist>
	</para>

      </sect2>


    <!-- Levi Burton additions 2003.03.05 -->
    <sect2>
    <title>Edit menu</title>
    <para>
      <variablelist>

    <varlistentry id="commands-main-edit-undo">
	 <term>
      <menuchoice>
	   <shortcut>
	    <keycombo>
         <keycap>Ctrl</keycap>
          <keycap>z</keycap>
        </keycombo>
       </shortcut>
	   <guimenu>Edit</guimenu>
	   <guimenuitem>Undo</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
           Reverses the last command performed.
       </action>
      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-edit-redo">
	 <term>
      <menuchoice>
	   <shortcut>
	    <keycombo>
         <keycap>Ctrl</keycap>
         <keycap>Shift</keycap>
         <keycap>z</keycap>
        </keycombo>
       </shortcut>
	   <guimenu>Edit</guimenu>
	   <guimenuitem>Redo</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
           Repeats the last command performed, following an undo.
       </action>
      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-edit-cut">
	 <term>
      <menuchoice>
	   <shortcut>
	    <keycombo>
         <keycap>Ctrl</keycap>
          <keycap>x</keycap>
        </keycombo>
       </shortcut>
	   <guimenu>Edit</guimenu>
	   <guimenuitem>Cut</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
            Removes the currently selected segment from the
            composition view and adds it to the clipboard.  Note that
            when you have selected a track, all segments in that track
            are selected.  
       </action>
      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-edit-copy">
	 <term>
      <menuchoice>
	   <shortcut>
	    <keycombo>
         <keycap>Ctrl</keycap>
          <keycap>c</keycap>
        </keycombo>
       </shortcut>
	   <guimenu>Edit</guimenu>
	   <guimenuitem>Copy</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
            Removes the selected segments from the composition and
            places them in the clipboard to replace any contents the
            clipboard previously had.
       </action> 
            Note that when you have selected a track, all segments in that track
            are selected.
      </para>
     </listitem>
	</varlistentry>  


    <varlistentry id="commands-main-edit-paste">
	 <term>
      <menuchoice>
	   <shortcut>
	    <keycombo>
         <keycap>Ctrl</keycap>
          <keycap>v</keycap>
        </keycombo>
       </shortcut>
	   <guimenu>Edit</guimenu>
	   <guimenuitem>Paste</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
         Inserts the contents of the clipboard into the composition.
         Verbage hear stating where the contents are inserted
         (current track, offset within that track etc).
       </action>
      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-edit-delete">
	 <term>
      <menuchoice>
	   <shortcut>
	    <keycombo>
         <keycap>Delete</keycap>
        </keycombo>
       </shortcut>
	   <guimenu>Edit</guimenu>
	   <guimenuitem>Delete</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
         Removes the selected segments from the composition and throws them away.
       </action>
      </para>
     </listitem>
	</varlistentry>  


    <varlistentry id="commands-main-edit-select-all-segments">
	 <term>
      <menuchoice>
	   <guimenu>Edit</guimenu>
	   <guimenuitem>Select All Segments</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
         Selects all segments within the composition.
       </action>
      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-edit-add-tempo-change">
	 <term>
      <menuchoice>
	   <guimenu>Edit</guimenu>
	   <guimenuitem>Add Tempo Change...</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
         Invokes a tempo change dialog.
       </action>
            This offers a
		    selection of ways to change the tempo of the
		    composition, including changing the tempo from the
		    insert cursor position onwards, from the last
		    tempo change onwards, or for the entire
		    composition.  See <!-- !!!link linkend="segment-tempo-changes" -->Changing the Tempo<!-- /link --> for more information.

      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-edit-add-time-signature">
	 <term>
      <menuchoice>
	   <guimenu>Edit</guimenu>
	   <guimenuitem>Add Time Signature Change...</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
         Invokes a time-signature change dialog.
       </action>

		  This offers a
		  selection of ways to change the tempo of the
		  composition, including changing the time signature
		  from the insert cursor position onwards or from the
		  start of the current bar.  See 
		  <!-- !!!link linkend="segment-tempo-changes" -->Changing the Time Signature<!-- /link --> 
		  for more information.

      </para>
     </listitem>
	</varlistentry>  


    <varlistentry id="commands-main-edit-change-composition-duration">
	 <term>
      <menuchoice>
	   <guimenu>Edit</guimenu>
	   <guimenuitem>Change Composition Duration...</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
         Invokes a composition duration change dialog.
       </action>

		  This allows you to change the overall duration of
		  the composition.  This duration sets a hard limit
		  (as a number of bars) on the scrollable width of the
		  main window and the length of time you can play or
		  record before the composition is deemed to have
		  ended.  The default is 100 bars.

      </para>
     </listitem>
	</varlistentry>  


    <varlistentry id="commands-main-edit-document-properties">
	 <term>
      <menuchoice>
	   <guimenu>Edit</guimenu>
	   <guimenuitem>Edit Document Properties...</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
         Invokes a document properties dialog.
       </action>

         The document properties dialog allows you to review and/or modify the current document properties. Note - explain what are properties. Note to developers - It seems kinda weird to have icons on the left for selecting, and tabs in each one.  Why not just tabs or just the things on the left?

      </para>
     </listitem>
	</varlistentry>  


      </variablelist>
     </para>
    </sect2>
    <!-- Levi Burton additions 2003.03.05 -->

    <sect2>
    <title>Segments menu</title>
    <para>
     <variablelist>
    
    <varlistentry id="commands-main-segments-open-default-editor">
	 <term>
      <menuchoice>
	   <shortcut>
	    <keycombo>
         <keycap>Return</keycap>
        </keycombo>
       </shortcut>
	   <guimenu>Segments</guimenu>
	   <guimenuitem>Open in Default Editor</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action> Opens all of the currently
		selected segments together in a notation editor, or in
		whichever other editor you have configured as your
		default. 
       </action>
      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-segments-open-matrix-editor">
	 <term>
      <menuchoice>
	   <guimenu>Segments</guimenu>
	   <guimenuitem>Open in Matrix Editor</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action> Opens all of the currently
		selected segments in a matrix editor.
       </action>
        See <link linkend="matrix-view">matrix editor</link>.
      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-segments-open-notation-editor">
	 <term>
      <menuchoice>
	   <guimenu>Segments</guimenu>
	   <guimenuitem>Open in Notation Editor</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action> Opens all of the currently
		selected segments together in a notation editor.
       </action>
        See <link linkend="notation-view">notation editor</link>.
      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-segments-open-event-editor">
	 <term>
      <menuchoice>
	   <guimenu>Segments</guimenu>
	   <guimenuitem>Open in Event List Editor</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action> Opens all of the currently
		selected segments together in a event-list editor.
       </action>
        See <link linkend="event-view">event-list editor</link>.
      </para>
     </listitem>
	</varlistentry>  


    <varlistentry id="commands-main-segments-quantize">
	 <term>
      <menuchoice>
	   <guimenu>Segments</guimenu>
	   <guimenuitem>Quantize...</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>Invokes a quantization dialog for quantizing the current selection.
       </action>
        See <link linkend="nv-quantization">quantization</link>.
      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-segments-rescale">
	 <term>
      <menuchoice>
	   <guimenu>Segments</guimenu>
	   <guimenuitem>Rescale...</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>Allows you to stretch or squash segments in time.
       </action>

		  This option invokes a rescale dialog, which allows
		  you to specify a ratio of timings that is then
		  applied to the selected segments.  This has the
		  result of stretching (slowing down) or squashing
		  (speeding up) the selected segments, changing their
		  durations accordingly.

		</para>
		<para>
		  This only applies to segments containing MIDI
		  events, not to audio segments. Rosegarden does not
		  currently provide native support for audio
		  time-stretching.
      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-segments-auto-split">
	 <term>
      <menuchoice>
	   <guimenu>Segments</guimenu>
	   <guimenuitem>Auto-Split</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>
		Splits the selected segments on silences.
       </action>

		  This function works slightly differently depending
		  on whether the selected segments contain audio or
		  MIDI data.  For audio segments, it offers you a
		  dialog in which you can choose a threshold below
		  which the segment is considered "silent"; it then
		  splits the segment whenever its amplitude falls
		  below this threshold.  For MIDI segments, it simply
		  splits the segment everywhere that a full bar of
		  silence occurs.
      </para>
     </listitem>
	</varlistentry>  

    <varlistentry id="commands-main-segments-split-by-pitch">
	 <term>
      <menuchoice>
	   <guimenu>Segments</guimenu>
	   <guimenuitem>Split by Pitch...</guimenuitem>
      </menuchoice>
     </term>
	 <listitem>
      <para>
       <action>Splits the currently selected segments into higher and
       lower parts.
       </action>

		  This function invokes a dialog allowing you to
		  choose a pitch as a "split point", and then splits
		  the selected segments in half with all the notes on
		  or above that split point in the "higher" segment
		  and all the notes below it in the "lower".

		</para>
		<para>
		  If the music in the segment consists of two separate
		  parts (e.g. left and right hand piano parts) that
		  are not always completely on either side of a single
		  split point, you may with to select the "ranging
		  split-point" option.  If this is selected,
		  Rosegarden will attempt to track the two parts as
		  they move up and down, usually doing a slightly
		  better job of separating out notes that were
		  intended to lie in the two separate parts.

		</para>
		<para>
		  The resulting segments are both created on the same
		  track, with one overlapping the other.
		  
      </para>
     </listitem>
	</varlistentry>  




     </variablelist>
    </para>
   </sect2>
    



    </sect1>
    
    <sect1 id="commands-nv">
      <title>Notation editor</title>
      <para></para>

      <!-- Tools -->
         <!-- Note insertion tools -->
         <!-- Rest insertion tools -->
         <!-- Clef insertion tools -->
         <!-- Text tool -->
         <!-- Eraser -->

      <sect2 id="commands-nv-menu-file">
	<title>File menu</title>
	<para>
	  <variablelist>

	    <varlistentry id="commands-nv-menu-file-close">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>w</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Close</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Closes the window</action></para></listitem>
	    </varlistentry>

	  </variablelist>
	</para>

      </sect2>

      <sect2 id="commands-nv-menu-edit">
	<title>Edit menu</title>
	<para>
	  <variablelist>

	    <varlistentry id="commands-nv-menu-edit-undo">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>z</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Undo</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Reverses the last edit.

		  </action> Edits are shared across
		    all views, so if the last edit was not made in
		    this view, undoing it might not appear to change
		    this view either.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-redo">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>Shift</keycap><keycap>z</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Redo</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Repeats the last edit, following an undo.

		  </action>
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-cut">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>x</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Cut</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Removes the selected events from the composition
		    and places them in the clipboard to replace any
		    contents the clipboard previously had.

		  </action>
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-copy">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>c</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Copy</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    
		    Copies the selected events to the clipboard
		    to replace any contents the clipboard previously had.

		  </action>
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-paste">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>v</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Paste</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    
		    Copies the contents of the clipboard to the
		    location of the insert cursor in the current
		    composition.

		  </action>

		  The clipboard must not contain
		    multiple segments, and there must be enough
		    space (occupied only by rests) starting at
		    the insert cursor position to accommodate the
		    clipboard's contents.

		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-cut-and-close">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>Shift</keycap><keycap>x</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Cut and Close</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
	    
		    Removes the selected events from the composition
		    and places them in the clipboard to replace any
		    contents the clipboard previously had, and closes
		    the gap left behind by moving all subsequent
		    events towards the beginning of the composition.

		  </action>
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-paste-dot-dot-dot">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>Shift</keycap><keycap>v</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Paste...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    
		    Provides a choice of paste mechanisms with the
		    ability to set one as the default for use in the
		    Paste menu function.

		  </action>

		   See the section on <link linkend="nv-paste-types">Paste types</link> for more information.

		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-delete">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Del</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Delete</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Removes the selected events from the composition
		    and throws them away.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-select-from-start">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Select from Start</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Extends the current selection by selecting
		    all events from the start of the staff up to the
		    current selection (or up to the insert cursor,
		    if no events are currently selected).
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-select-to-end">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Select to End</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Extends the current selection by selecting
		    all events from the end of the current selection
		    (or from the insert cursor, if no events are
		    currently selected) up to the end of the staff.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-select-whole-staff">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Select Whole Staff</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Selects all the events on the current staff.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-clear-selection">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Esc</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Clear Selection</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Unselects all events.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>

	  
	    <varlistentry id="commands-nv-menu-edit-filter-selection">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Filter Selection</guimenuitem>
		</menuchoice></term>
		<listitem>
		<para>
		  <action>
		    Invokes an event filter dialog.
		  </action>
		    This offers you the ability to filter a range of events in
		    any of several categories out of your selection.
	        </para>
		<para>
		  <screenshot>
		    <mediaobject>
		      <imageobject>
			<imagedata fileref="rg-eventfilter.png" format="PNG"/>
		      </imageobject>
		      <textobject>
			<phrase>The event filter dialog</phrase>
		      </textobject>
		    </mediaobject>
		  </screenshot>
	        </para>
		<para>
		    All ranges may be either inclusive or exclusive.
		</para>
	        <para>
		    An inclusive range will remove events on either side of it
		    from the selection.  You can use this, for example, to
		    filter everything below middle C and above the A above
		    middle C out of your selection.
		</para>
	        <para>
		    An exclusive range will remove the events within the range
		    itself, leaving everything on either side of it selected.
		    Using the same search points as in the previous example,
		    you would use an exclusive range to remove everything
		    between middle C and the A above middle C from your
		    selection, while leaving everything above and below that
		    range selected.
		</para>
		<para>
		    Once your selection has been filtered, you can manipulate
		    it by any conventional means.
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-add-tempo">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Add Tempo Change...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Invokes a tempo change dialog.
		  </action>
		  This offers a
		    selection of ways to change the tempo of the
		    composition, including changing the tempo from the
		    insert cursor position onwards, from the last
		    tempo change onwards, or for the entire
		    composition.  See <!-- !!!link linkend="segment-tempo-changes" -->Changing the Tempo<!-- /link --> for more information.
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-add-time-signature">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Add Time Signature Change...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Invokes a time-signature change dialog.

		  </action>

		  This offers a
		  selection of ways to change the tempo ofthe
		  composition, including changing the time signature
		  from the insert cursor position onwards or from the
		  start of the current bar.  See 
		  <!-- !!!link linkend="segment-tempo-changes" -->Changing the Time Signature<!-- /link --> 
		  for more information.

		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-add-clef">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Add Clef Change...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Invokes a clef selection dialog, and inserts the
		    chosen clef at the current insert cursor position.

		  </action>

		  The dialog allows you to choose a clef, but also
		  to choose how you want the clef to be applied, in
		  cases where there are already some notes following
		  the point where the clef is to be inserted.  You
		  must choose one of the following:

		  <variablelist>

		    <varlistentry>
		      <term>Maintain current pitches</term>
		      <listitem>
			<para>
			  Any notes following the clef will keep
			  their current performance pitches.
			</para>
			<para>
			  For example, inserting a
			  tenor clef in the middle of a previously
			  treble-clef section will cause the notes following
			  the clef to be moved an octave
			  higher up the staff, because they will still have
			  their treble-clef pitches.
			</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term>Transpose into appropriate octave</term>
		      <listitem>
			<para>
			  Any notes following the clef will
			  retain their pitch within the octave, but
			  may be moved into a different octave to
			  match the new clef, and therefore will play
			  at a new pitch.
			</para>
			<para>
			  For example, inserting a tenor clef in the
			  middle of a previously treble-clef section
			  will cause the notes following the clef to
			  move by one staff line only to adjust to the new
			  clef, but to play an octave lower than before.
			</para>
		      </listitem>
		    </varlistentry>

		  </variablelist>

		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-add-key-signature">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Add Key Change...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	  </variablelist>
	</para>

      </sect2>

      <sect2 id="commands-nv-menu-group">
	<title>Group menu</title>
	<para>
	  <variablelist>


	    <varlistentry id="commands-nv-menu-group-beam">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Beam Group</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Makes the selected notes into a beamed group.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-group-auto-beam">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Auto-Beam</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Scans the area covered by the selection and attempts
		    to group short notes into plausible beamed groups.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-group-break-group">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Unbeam</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Removes the selected notes from any beamed groups
		    they may be part of, leaving them as separate
		    individuals.
		  </action>
		  If part of a beamed group is selected, the unselected
		  part of the group will remain beamed.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-group-tuplet">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Tuplet</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Makes a triplet or other tuplet group.
		  </action>
		  This function allows you to adjust the timing of a
		  short section of music in the ratio of two
		  durations, for example to indicate that three notes
		  should be played in the time of two (the classic
		  triplet), or nine in the time of six, or whatever.
		  You can set this ratio in a dialog box when you
		  invoke the function.
		</para>
		<para>
		  If you have selected some events before invoking the
		  function, it will assume that you want to make a
		  tuplet group out of the selected region (or as close
		  to its duration as possible) and will adjust the
		  default values available in the dialog accordingly.
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-group-simple-tuplet">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Simple Tuplet</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Makes a tuplet group (normally of triplets) with
		    the most apparently obvious ratio of durations.

		  </action>
		  Usually this function will attempt to make a triplet
		  group starting at the current insert cursor, or if
		  some events are selected, will attempt to make them
		  into triplets.  It is possible that it might end up
		  making non-triplet groups if there is no obvious
		  valid triplet arrangement.
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-group-grace">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Make Grace Notes</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Converts the selected notes into grace notes.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>



	    <varlistentry id="commands-nv-menu-group-ungrace">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Ungrace</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Converts any grace notes in the selection to
		    normal notes.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>



	    <varlistentry id="commands-nv-menu-group-slur">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Slur</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Adds a slur across the selected notes.
		  </action>
		  To remove the slur, click on it
		  with the erase tool just as you would for a note.
		</para>
	      </listitem>
	    </varlistentry>



	    <varlistentry id="commands-nv-menu-group-crescendo">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Crescendo</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Adds a crescendo (opening hairpin) indication
		    across the selected notes.
		  </action>
		  To remove the crescendo indication, click on it
		  with the erase tool just as you would for a note.
		</para>
	      </listitem>
	    </varlistentry>



	    <varlistentry id="commands-nv-menu-group-decrescendo">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Decrescendo</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Adds a decrescendo (closing hairpin) indication
		    across the selected notes.
		  </action>
		  To remove the decrescendo indication, click on it
		  with the erase tool just as you would for a note.
		</para>
	      </listitem>
	    </varlistentry>

<!--

	    <varlistentry id="commands-nv-menu-group-remove-indications">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Remove Indications</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		  </action>
		</para>
	      </listitem>
	    </varlistentry>

-->

	  </variablelist>
	</para>

      </sect2>

      <sect2 id="commands-nv-menu-notes">
	<title>Notes menu</title>
	<para>
	  <variablelist>

	    <varlistentry id="commands-nv-menu-notes-">
	      <term><menuchoice>
		  <guimenu>Notes</guimenu>
		  <guimenuitem></guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-notes-style-actionmenu">
	      <term><menuchoice>
		  <guimenu>Notes</guimenu>
		  <guimenuitem>Note Style</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Change the note style of the selected notes.
		  </action>
		  This submenu contains an entry for each of the <link
		       linkend="nv-note-styles">note
		  styles</link> that are currently available.  Choosing one
		  will change the note style of the selected notes to
		  that style.
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-notes-stems">
	      <term><menuchoice>
		  <guimenu>Notes</guimenu>
		  <guimenuitem>Stem Direction</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Change the stem
		    direction of the selected notes.
		  </action>
		  This submenu allows you to specify that all the
		  <link linkend="nv-note-qualities">stems</link> of
		  the selected notes should point up or down, plus an
		  entry to reset the stem directions to those that
		  Rosegarden originally chose for the notes.
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-notes-slashes">
	      <term><menuchoice>
		  <guimenu>Notes</guimenu>
		  <guimenuitem>Slashes</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Add diagonal
		    slashes across the selected notes' stems.
		  </action>
		  This submenu allows you to choose a number of
		  diagonal strokes or <link linkend="nv-note-qualities">slashes</link> to be drawn across the
		  stems of each of the selected notes.  These may be
		  used, for example, to indicate repetition or rolls
		  to a human reader.  They do not (yet) affect
		  performance using Rosegarden.
		</para>
	      </listitem>
	    </varlistentry>

	  </variablelist>
	</para>

      </sect2>

      <sect2 id="commands-nv-menu-marks">
	<title>Marks menu</title>
	<para>
	  <variablelist>
	    <varlistentry>
	      <term><menuchoice>
		  <guimenu>blah</guimenu>
		  <guimenuitem>blah</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>to be continued</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</para>

      </sect2>

      <sect2 id="commands-nv-menu-transforms">
	<title>Transforms menu</title>
	<para>
	  <variablelist>

	    <varlistentry id="commands-nv-menu-transforms-normalize-rests">
	      <term><menuchoice>
		  <guimenu>Transforms</guimenu>
		  <guimenuitem>Normalize Rests</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>Makes the rests in the selection
		  theoretically correct.</action>

		  This function examines each sequence of consecutive
		  rests found in the selection, and adjusts, splits
		  and merges rests as necessary to ensure that the
		  rests have theoretically correct durations and fall
		  on the correct boundaries.
		</para>

		<para>For example, a 4/4 bar containing a crotchet
		(quarter-note), then a minim (half-note) rest and a
		crotchet rest will be rearranged to place the crotchet
		rest first, as the minim rest should not cross the
		central beat boundary of the bar.
		</para>

		<para>This function is also useful in occasional
		situations where Rosegarden has made a bad job of
		maintaining the rests correctly within a bar, for
		example when editing imported &MIDI; data.  Normalizing
		the rests will usually make the arrangement of notes
		in such a situation a bit clearer.  (Rosegarden always
		normalizes the rests as a matter of course when
		importing or recording &MIDI;, but things can sometimes
		get muddled up again.)</para>

	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-transforms-collapse-rests">
	      <term><menuchoice>
		  <guimenu>Transforms</guimenu>
		  <guimenuitem>Collapse Rests</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>Makes multiple short rests into fewer longer
		  ones.</action>

		  This function merges consecutive rests into longer
		  rests, wherever possible.  That is, wherever two
		  consecutive rests in the selection are found to have
		  a total duration expressible as a single longer
		  rest, they will be merged.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-transforms-collapse-notes">
	      <term><menuchoice>
		  <guimenu>Transforms</guimenu>
		  <guimenuitem>Collapse Equal-Pitch Notes</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>Makes multiple short notes into fewer longer
		  ones.</action>

		  This function merges consecutive notes into longer
		  notes, wherever possible.  That is, wherever two
		  consecutive notes of equal pitch in the selection
		  are found to have a total duration expressible as a
		  single longer note, they will be merged.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-transforms-tie-notes">
	      <term><menuchoice>
		  <guimenu>Transforms</guimenu>
		  <guimenuitem>Tie Equal-Pitch Notes</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para><action>Ties consecutive notes whenever possible.</action>

		  This function ties together any consecutive notes of
		  equal pitch found in the selection.  Tied notes are
		  shown with a curved line joining the note heads, and
		  are played as a single long note.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-transforms-untie-notes">
	      <term><menuchoice>
		  <guimenu>Transforms</guimenu>
		  <guimenuitem>Untie Notes</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para><action>Breaks ties between notes.</action>

		  Any tied notes found in the selection are untied,
		  and will subsequently be played as separate
		  notes.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-transforms-make-viable">
	      <term><menuchoice>
		  <guimenu>Transforms</guimenu>
		  <guimenuitem>Make Notes Viable</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para><action>Splits notes at displayable
		durations.</action> This function is intended to deal
		with notes that have excessively long durations that
		overflow barlines or that are too long to be displayed
		as a single note.  It takes any such notes and splits
		them into shorter, tied notes.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-transforms-de-counterpoint">
	      <term><menuchoice>
		  <guimenu>Transforms</guimenu>
		  <guimenuitem>De-Counterpoint</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para><action>Turns counterpoint into a series of split-and-tied notes and chords.</action>

		  &rosegarden; has no explicit support for counterpoint
		  (multiple lines of notes edited separately on the
		  same staff), but it will do its best to approximate
		  it when it finds notes in a segment that are
		  apparently contrapuntal, i.e. that overlap but that
		  are not precise enough to be treated as chords.  For
		  example, when a short note starts shortly after a
		  longer note, Rosegarden will show the longer note
		  and a short <quote>spacing</quote> rest together, followed by the
		  shorter note.  Unfortunately this often isn't what
		  you want.
		</para>

		<para>The De-Counterpoint function can be applied to a
		selection that contains overlapping notes.  It will
		split overlapping notes at the point where they
		overlap, and tie together the resulting split notes,
		ensuring that the music takes the form of a series of
		chords and/or single notes starting and ending in neat
		blocks, with some notes possibly tied.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-transforms-quantize">
	      <term><menuchoice>
		  <guimenu>Transforms</guimenu>
		  <guimenuitem>Quantize...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para><action>Quantizes the selection.</action></para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-transforms-fix-smoothing">
	      <term><menuchoice>
		  <guimenu>Transforms</guimenu>
		  <guimenuitem>Fix Smoothed Values</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para><action>Makes the note durations in the current
		view permanent.</action>

		  When notating recorded or performance &MIDI;,
		  Rosegarden usually has to round off the durations of
		  some notes so that they can be displayed as normal
		  note types.  This is known as <link
		       linkend="nv-quantization">smoothing</link>, and it
		  normally does not affect the notes actually played,
		  it's just a convenience for display.  The Fix
		  Smoothed Values function takes the current smoothed
		  note durations and sets them such that they are used
		  for performance (and editing in the matrix view,
		  etc) as well as for notation.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-transforms-interpret">
	      <term><menuchoice>
		  <guimenu>Transforms</guimenu>
		  <guimenuitem>Interpret...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para><action>Modifies the velocities and timings of
		notes according to any written or indicated dynamics
		found.</action> The selection of interpretations
		available is as follows:

		  <variablelist>
		    <varlistentry>
		      <term>Apply text dynamics (p, mf, ff etc)
		      </term>
		      <listitem><para> Sets a velocity to each note
		      based on the last piece of text of "Dynamic"
		      type seen on the same staff (only texts of the
		      form pp, p, mp, mf, f, ff, fff etc are matched).
		      </para></listitem>
		    </varlistentry>

		    <varlistentry>
		      <term>Apply hairpin dynamics
		      </term>
		      <listitem><para> Makes the notes gradually
		      increase or decrease in velocity during a
		      crescendo or decrescendo hairpin.
		      </para></listitem>
		    </varlistentry>

		    <varlistentry>
		      <term>
			Stress beats
		      </term>
		      <listitem><para> Makes notes that land on bar or
		      beat boundaries slightly louder (greater
		      velocity) than the surrounding notes.
		      </para></listitem>
		    </varlistentry>
		    
		    <varlistentry>
		      <term>
			Articulate slurs, staccato, tenuto etc
		      </term>
		      <listitem><para> Shortens unslurred notes,
		      shortens staccato notes more, and gives notes
		      inside slurs and tenuto notes their full length.
		      </para></listitem>
		    </varlistentry>
		  </variablelist>

		</para>

	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-transforms-transpose">
	      <term><menuchoice>
		  <guimenu>Transforms</guimenu>
		  <guimenuitem>Transpose</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para><action>Alters the pitch of the selected
		notes.</action> This submenu contains basic
		transposition functions which move the selected notes
		up or down a semitone or a whole octave in pitch, as
		well as a general transpose function that allows you
		to choose how far up or down you want to transpose the
		selection.
		</para>

		<para>These functions simply change the stored pitches
		of the notes in the selection, so that they both play
		and appear at the new pitches.  They do not deal with
		performance transposition (displaying one pitch and
		playing another), for which see the main window's
		segment parameter box; nor do they help you with
		transposing from one key into another, for which see
		the <link
		linkend="commands-nv-menu-edit-add-key-signature">key
		change</link> function.
		</para>
	      </listitem>
	    </varlistentry>

	  </variablelist>
	</para>

      </sect2>


    </sect1>
  </chapter>




<!--
  **********************************
 
   PART III:
   Technical material

  **********************************
  -->

  <chapter id="developers">
    <title>Developer's Guide to Rosegarden</title>

    <sect1 id="developers-note-fonts">
      <title>Configuring custom notation fonts</title>

      <para>If you have a notation font installed on your system in a
      scalable format (TrueType or Type-1) but it is not currently
      supported by Rosegarden, you can create your own mapping XML
      file to describe the font's character map and metrics in a way
      Rosegarden can use.  These files are installed in the
      fonts/mappings subdirectory of the Rosegarden installation
      directory, and a number of samples are included with the
      distribution.</para>

      <para>You can also use these mapping files to define new
      pixmap-based fonts, in which every shape in a particular size is
      loaded from a separate pixmap file.  The two standard notation
      fonts supplied with Rosegarden-4 are pixmap fonts defined in
      exactly this way.
      </para>

      <para>It is even possible to define a notation font as using one
      or more scalable system fonts, augmented with pixmaps for
      particular sizes or for characters not found in the scalable
      fonts.  This is because most of the mapping file format is the
      same for scalable and pixmap fonts, and where there are
      different elements for the different sorts of fonts, it is
      usually possible to include both of them.  Rosegarden will
      usually use pixmaps where available and scalable fonts
      otherwise.
      </para>

      <para>You may also wish to edit the mapping files supplied with
      Rosegarden if you find their measurements for alignment or
      sizing are not to your liking.  (If you believe that any of the
      supplied files are actually wrong, please let us know.)
      </para>

      <sect2 id="developers-note-fonts-codes-glyphs">
        <title>Codes and Glyphs</title>

        <para></para>
      </sect2>

      <sect2 id="developers-note-fonts-mapping-format">
	<title>Notation font mapping XML format</title>

	<para>Here is a summary of the XML elements that may be used
	in the font mapping file.</para>

	<sect3 id="developers-note-fonts-mapping-format-font-encoding">
	  <title>rosegarden-font-encoding</title>

	  <para>This element must exist in every mapping file, and
	  should contain all the other elements.  The only attribute
	  is "name", which contains the font's name as shown in the
	  font selection dropdown.  Although the file format will
	  permit any name to be used here, Rosegarden will only pick
	  up the font corectly if the XML file has the same name as
	  the contents of this attribute (except that the XML file
	  should be named in lower-case and should end in ".xml").
	  </para>
	</sect3>

	<sect3 id="developers-note-fonts-mapping-format-font-information">
	  <title>font-information</title>

	  <para>This should normally be the first child element of
	  "rosegarden-font-encoding".  It may have any of the
	  following attributes, all of which are optional:

	    <variablelist>
	      <varlistentry>
		<term>origin</term>
		<listitem>
		  <para>A textual description of the likely origin of
		  the mapped font (not the origin of the mapping
		  file).</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>copyright</term>
		<listitem>
		  <para>A textual description of the likely copyright
		  status of the mapped font (not the copyright status
		  of the mapping file).  Note that because the mapping
		  file contains information such as origin and
		  copyright of the font itself, it is usually
		  advisable to make separate mapping files for
		  separate fonts where practical, even if the fonts
		  share other mapping data.</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>mapped-by</term>
		<listitem>
		  <para>The name of the creator of the mapping file
		  (i.e. you, presumably).</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>type</term>
		<listitem>
		  <para>The type of the font.  This attribute should
		  contain one of the values "pixmap" or "scalable".
		  Fonts that are loaded into the windowing system and
		  are available to Rosegarden as standard system fonts
		  have type "scalable"; fonts that need to be loaded
		  from pixmap files corresponding to individual sizes
		  of pixmap (such as the feta and rg21 fonts included
		  with Rosegarden) have type "pixmap".</para>

	    <para>This information is only intended for the user
	    reference; it isn't actually used by Rosegarden.  It is
	    legitimate in practice for a font to be a mixture of the
	    two, but in general we will assume in this documentation
	    that a font is either scalable or pixmap.</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>smooth</term>
		<listitem>
		  <para>A boolean attribute indicating whether the
		  font is antialiased (smooth) or not.  Should have
		  the value "true" or "false".  If the font is smooth,
		  other display elements such as beams and slurs that
		  are not generated from the font will also be
		  antialiased.</para>
		</listitem>
	      </varlistentry>

	      <varlistentry>
		<term>autocrop</term>
		<listitem>
		  <para>Only relevant for scalable (system) fonts.
		  Rosegarden usually expects the metrics for a font to
		  contain the vertically smallest bounding boxes for
		  elements such as note heads and accents, rather than
		  including empty space above or below these elements
		  for alignment purposes.  Most fonts do not do what
		  Rosegarden expects.  Therefore for these fonts you
		  should set the autocrop attribute to "true"; then
		  Rosegarden will crop any unnecessary space from the
		  top and bottom of these elements when rendering
		  them.</para>
		</listitem>
	      </varlistentry>

	    </variablelist>

	  </para>
	</sect3>

	<sect3 id="developers-note-fonts-mapping-format-font-requirements">
	  <title>font-requirements</title>
	  <para>
	    This element is only relevant for scalable fonts.  It is
	    used to specify that this font should only be offered if
	    certain system fonts are available, as well as to
	    associate IDs with those system fonts to refer to in the
	    <link
	    linkend="developers-note-fonts-mapping-format-font-symbol-map">font-symbol-map</link>
	    element.  This scheme is used to decide which notation
	    fonts should be offered to the user, and also allows you
	    to compose a Rosegarden notation font from more than one
	    system font if desired.
	  </para>
	  <para>The "font-requirements" element should contain a list
	  of "font-requirement" child elements.  Each of these has two
	  attributes: "font-id", containing a numerical ID of your
	  choice for reference elsewhere in the file, and either a
	  "name" or a "names" attribute.  If "name" is provided, it
	  will be used as the name of a single system font to be
	  associated with the font id; if "names" is provided, it will
	  be treated as a comma-separated list of system fonts and the
	  first one found will be associated with the font id.
	  </para>
	</sect3>

	<sect3 id="developers-note-fonts-mapping-format-font-sizes">
	  <title>font-sizes</title>

	  <para>The "font-sizes" element specifies which notation font
	  sizes are available, and how the nominal font size relates
	  to the dimensions of non-font elements such as stems, staff
	  lines and beams.  The "size" of a notation font is assumed
	  to be the distance in pixels between staff lines, or more
	  precisely, the height of a conventional note head that
	  completely fills the space between lines: the size therefore
	  does not include the thickness of either of the neighbouring
	  staff lines.
	  </para>

	  <para>
	    <!-- !!! TODO throughout this section: how to mark up XML element/attribute names? equiv of <code> in HTML would do -->
	    There are two possible child elements of "font-sizes":
	    "font-scale" and "font-size".  Their use depends on the
	    type of font being described.</para>

	  <para>
	    For pixmap (non-scalable) fonts, the "font-sizes" element
	    should contain a list of "font-size" elements, one for
	    each size of pixmaps available.  The pixmaps themselves
	    must be installed in the
	    fonts/&lt;font-name&gt;/&lt;font-size&gt; subdirectory of
	    the Rosegarden installation directory, where
	    &lt;font-name&gt; is the name of the font (as specified in
	    the "rosegarden-font-encoding" element at the start of the
	    mapping file), or a lower-case version of the name, and
	    &lt;font-size&gt; is the pixel size of the font.  A font
	    size will only be made available to the user if it has an
	    entry in the "font-sizes" list and the pixmap directory is
	    found.
	  </para>
	  
	  <para>
	    For scalable fonts, the "font-sizes" element should
	    contain one "font-scale" element that defines the
	    relationships between font and non-font elements in a
	    general way, and also defines the relationship between
	    Rosegarden's nominal font size and the size of the
	    corresponding system font.  If this "font-scale" element
	    is found, then Rosegarden will assume the font is
	    available in any size.  You can however still include one
	    or more "font-size" elements to define precise proportions
	    for any particular size for which the general proportions
	    do not quite work correctly, for example because of
	    rounding error.
	  </para>

	  <para>
	    The attributes of "font-scale" and "font-size" are very
	    similar.  The main difference is that all attributes of
	    "font-scale" are floating-point values relative to the
	    font size, where 1.0 is the base font size (i.e. the
	    distance between staff lines), whereas attributes of
	    "font-size" are integer pixel values.  The attributes
	    available are as follows.  (Those marked "optional" have
	    vaguely sensible defaults, so it's a good idea to try not
	    setting them first.)
	  </para>
	    
	  <variablelist>

	  <varlistentry>
	    <term>note-height</term>
	    <listitem>
	      <para>This attribute is only available for the
	      "font-size" element, and it is mandatory in that
	      element.  It defines the base size of font to which the
	      other attributes in this element apply, and a size that
	      will be offered to the user and used when looking up
	      pixmaps for this font.</para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>font-height</term>
	    <listitem>
	      <para>May be used in either "font-size" or "font-scale".
	      This is only relevant for scalable fonts, but is
	      mandatory for them if used in the "font-scale" element.
	      This defines the size of the system font used to draw a
	      given size of notation font.</para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>beam-thickness</term>
	    <listitem>
	      <para>Optional.  Defines the thickness of a beam.</para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>staff-line-thickness</term>
	    <listitem>
	      <para>Optional.  Defines the thickness of a staff line.</para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>stem-thickness</term>
	    <listitem>
	      <para>Optional.  Defines the thickness of a note stem.</para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>flag-spacing</term>
	    <listitem>
	      <para>Optional.  Defines the gap between note flags in
	      cases where multiple flags are drawn by drawing a single
	      flag several times.</para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>border-x</term>
	    <listitem>
	      <para>Optional.  Specifies that the note head pixmaps
	      have a fixed area to left and right that should not be
	      considered part of the note head.  This attribute gives
	      the thickness of that area.</para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>border-y</term>
	    <listitem>
	      <para>Optional.  Specifies that the note head pixmaps
	      have a fixed area to top and bottom that should not be
	      considered part of the note head.  This attribute gives
	      the thickness of that area.</para>
	    </listitem>
	  </varlistentry>

	  </variablelist>
	</sect3>

	<sect3 id="developers-note-fonts-mapping-format-font-symbol-map">
	  <title>font-symbol-map</title>
	  <para>
	    This element lists the symbols available in this notation
	    font, and which pixmap files or system font code points
	    they should be drawn from.</para>

	  <para>It should contain a list of "symbol" elements.  These
	  have several possible attributes, the choice of which will
	  normally depend on whether the font is based on pixmaps or
	  system fonts:
	  </para>

	  <variablelist>
	    <varlistentry>
	      <term>name</term>
	      <listitem>
		<para>Mandatory.  This attribute should contain the
		name of the notation symbol.  If the symbol exists in
		the <ulink
		url="http://www.unicode.org/charts/PDF/U1D100.pdf">Unicode
		3.2 standard</ulink>, the name should be that used to
		identify the symbol in the standard.</para>

		<para>Most of the symbols Rosegarden expects to find
		are in the standard; one exception is that many fonts
		have a special version of the flag symbol that is
		intended to be used when composing multiple flags from
		individual single flags.  Rosegarden refers to this as
		"MUSICAL SYMBOL COMBINING FLAG-0", a name not used in
		the Unicode standard (which has flags 1-5 only).</para>

		<para>For a definitive set of the symbol names
		Rosegarden knows about, see the file
		"gui/notecharname.cpp" in the Rosegarden source
		distribution.  Note however that it is possible to use
		additional symbol names by introducing them in a <link
		linkend="developers-note-styles">notation
		style</link>.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>src</term>
	      <listitem>
		<para>The name of the pixmap file from which this
		symbol should be loaded, without a directory or
		extension.  This is the usual way of describing a
		symbol in a pixmap font.  The file itself should be
		installed to
		fonts/&lt;font-name&gt;/&lt;font-size&gt;/&lt;src&gt;.xpm
		under the Rosegarden installation directory.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>inversion-src</term>
	      <listitem>
		<para>The name of a pixmap file from which an inverted
		version of this symbol may be loaded, without a
		directory or extension.  If this attribute is absent
		and an inverted version of the symbol is required, it
		will be generated simply by loading the normal version
		and reflecting it in a central x-axis.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>code</term>
	      <listitem>
		<para>The code point at which this symbol may be found
		in the relevant system font, as a decimal integer.
		This is a way of describing a symbol in a scalable
		font.  This attribute will only be referred to if no
		pixmap file is supplied, or if the pixmap file fails
		to load.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>inversion-code</term>
	      <listitem>
		<para>The code point at which an inverted version of
		this symbol may be found in the relevant system font.
		If this attribute is absent and an inverted version of
		the symbol is required, it will be generated simply by
		loading the normal version and reflecting it in a
		central x-axis.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>glyph</term>
	      <listitem>
		<para>The raw glyph index at which this symbol may be found
		in the relevant system font, as a decimal integer.
		This is a way of describing a symbol in a scalable
		font.  This attribute will only be referred to if no
		pixmap file is supplied, or if the pixmap file fails
		to load.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>inversion-glyph</term>
	      <listitem>
		<para>The raw glyph index at which an inverted version of
		this symbol may be found in the relevant system font.
		If this attribute is absent and an inverted version of
		the symbol is required, it will be generated simply by
		loading the normal version and reflecting it in a
		central x-axis.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>font-id</term>
	      <listitem>
		<para>The id of the system font from which this symbol
		should be loaded, as defined in the <link
		linkend="developers-note-fonts-mapping-format-font-requirements">font-requirements</link>
		element.  The default is 0.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>codebase</term>
	      <listitem>
		<para>This (decimal integer) attribute may be of use
		if many of the symbols in a scalable font cover a
		short range of code points starting at a relatively
		high code page.  If supplied, the codebase value will
		be added to each of the subsequent code and
		inversion-code values when looking up a symbol.
		</para>
	      </listitem>
	    </varlistentry>

	  </variablelist>

	  <para>
	    Although none of these attributes is mandatory except for
	    the name, a symbol obviously needs to supply at least one
	    of "src", "inversion-src", "code", "inversion-code",
	    "glyph", or "inversion-glyph" to stand any chance of being
	    rendered at all.  It is of course perfectly legitimate to
	    supply several or all of these attributes.
	  </para>

	</sect3>

	<sect3 id="developers-note-fonts-mapping-format-font-hotspots">
	  <title>font-hotspots</title>
	  <para>
	  </para>
	</sect3>

      </sect2>
      
    </sect1>
    
    <sect1 id="developers-note-styles">
      <title>Creating new notation styles</title>

      <para>
	Rosegarden's notation editor has the ability to display and
	edit notes in various standard styles: classical, diamond
	heads and so on.  These styles are all defined in XML style
	definition files installed along with the application, and
	it's possible to create a new one by writing a simple XML
	file.  Rosegarden simply looks at the set of installed files
	to determine which styles to offer the user.  You can refer to
	the default set of files in the styles subdirectory of the
	Rosegarden installation directory for examples.
      </para>

      <para>
	The file format is not yet especially comprehensive; at the
	moment it has been designed to be powerful enough to describe
	the standard styles that come with Rosegarden, but not much
	more.  If you should try to create new styles this way, we'd
	be very interested in your feedback on the Rosegarden
	mailing-lists.
      </para>
      
      <sect2 id="developers-note-styles-format">
	<title>Notation style XML format</title>

	<para>
	  Here is a summary of the XML elements that may be used in
	  a style definition file.
	</para>

	<sect3 id="developers-note-styles-note-style">
	  <title>rosegarden-note-style</title>

	  <para>This element must exist in every style file, and
	  should contain all the other elements.  It has one optional
	  attribute, "base-style", which may be used to name a style
	  from which this style takes the default values for any
	  parameters not specified elsewhere in the present file.
	  It's often good practice to define a style in terms of the
	  minimal difference from a given base style: see the supplied
	  Cross.xml for a particularly simple example.
	  </para>

	  <para>Note that the "rosegarden-note-style" element does not
	  give the name of the style being defined, which is instead
	  currently drawn from the name of the file.  At some point in
	  the future we may add internationalizable style name
	  attributes to this element.</para>
	</sect3>

	<sect3 id="developers-note-styles-global-note">
	  <title>global, note</title>
	  
	  <para>Within the "rosegarden-note-style" element, there may
	  be one "global" element and any number of "note" elements.
	  We describe these together, as they have almost identical
	  sets of attributes.  The "global" element simply provides
	  default values for those parameters not specified for a
	  particular note type in any following "note" element.
	  </para>

	  <para>The attributes for these elements are as follows.  All
	  of these are optional except as described:</para>

	  <variablelist>

	    <varlistentry>
	      <term>type</term>
	      <listitem>
		<para>Only relevant to the "note" element, and
		mandatory for that element.  This attribute specifies
		which sort of note is being styled.  Legal values are
		textual American or British note names (from "64th",
		"sixth-fourth note", "hemidemisemiquaver" etc to
		"double whole note").
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>shape</term>
	      <listitem>
		<para>Defines a note head shape for this style.  Any
		string is a legal value, but the only values
		implemented so far are "angled oval", "level oval",
		"breve", "cross", "triangle up", "triangle down",
		"diamond" and "rectangle".  The value "number" is also
		recognised but not yet implemented.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>charname</term>
	      <listitem>
		<para>Defines a note font character name to be used as
		the note head for this style.  An element may supply a
		"shape" or "charname" attribute, but not both.  The
		name should be one of those defined in the current
		notation font's <link
		linkend="developers-note-fonts-mapping-format-font-symbol-map">symbol
		map</link> (in a "name" attribute).
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>filled</term>
	      <listitem>
		<para>Specifies whether this note should have a filled
		head (where applicable, i.e. where the shape attribute
		supplies a shape that is available both filled and
		unfilled).  Must be "true" or "false".
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>stem</term>
	      <listitem>
		<para>Specifies whether this note should have a stem.
		Must be "true" or "false".
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>flags</term>
	      <listitem>
		<para>Defines how many flags or beams this note should
		have.  The valid range is 0 to 4.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>slashes</term>
	      <listitem>
		<para>Defines how many slashes this note should have
		across its stem.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>hfixpoint</term>
	      <listitem>
		<para>Specifies in which x position the stem fixes to
		the note head.  Acceptable values are "normal" (the
		right side when the stem points up, the left when it
		points down), "central", and "reversed" (left side
		when the stem points up, right when it points down).
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>vfixpoint</term>
	      <listitem>
		<para>Specifies in which y position the stem fixes to
		the note head.  Acceptable values are "near" (the stem
		fixes to the top when pointing up, the bottom when
		pointing down), "middle", or "far".
		</para>
	      </listitem>
	    </varlistentry>

	  </variablelist>
	</sect3>
      </sect2>
    </sect1>
    

    <!-- (OPTIONAL) A Programming/Scripting reference chapter should be
    used for apps that use plugins or that provide their own scripting hooks
    and/or development libraries. -->

  <!-- cc: I think we should document the DCOP API here, but I don't
  think we should include extensive developer docs, although we should
  point to where they can be found in the source tree or online. -->
<!--
    <para>
      Programming <application>Rosegarden</application> plugins is 
      a joy to behold. Just read through the next
      66 pages of <acronym>API</acronym>'s to learn how!
    </para>
-->
    <!-- Use refentries to describe APIs.  Refentries are fairly
    complicated and you should consult the docbook reference for
    further details. The example below was taken from that reference
    and shortened a bit for readability. -->
<!--
    <refentry id="re-1007-unmanagechildren-1">
      <refmeta>
	<refentrytitle>XtUnmanageChildren</refentrytitle>
	<refmiscinfo>Xt &ndash; Geometry Management</refmiscinfo>
      </refmeta>
      <refnamediv>
	<refname>XtUnmanageChildren
	</refname>
	<refpurpose>remove a list of children from a parent widget's managed list.
	</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
	<refsynopsisdivinfo>
	  <date>4 March 1996</date>
	</refsynopsisdivinfo>
	<synopsis>
	  void XtUnmanageChildren(<replaceable>children</replaceable>, <replaceable>num_children</replaceable>)
	  WidgetList <replaceable>children</replaceable>;
	  Cardinal <replaceable>num_children</replaceable>;
	</synopsis>

	<refsect2 id="r2-1007-unmanagechildren-1">
	  <title>Inputs</title>
	  <variablelist>
	    <varlistentry>
	      <term><replaceable>children</replaceable>
	      </term>
	      <listitem>
		<para>
		  Specifies an array of child widgets. Each child must be of
		  class RectObj or any subclass thereof.
		</para>
	      </listitem>
	    </varlistentry>
	    <varlistentry>
	      <term><replaceable>num_children</replaceable>
	      </term>
	      <listitem>
		<para>Specifies the number of elements in <replaceable>children</replaceable>.
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</refsect2></refsynopsisdiv>

      <refsect1 id="r1-1007-unmanagechildren-1">
	<title>Description
	</title>
	<para>
	  <function>XtUnmanageChildren()</function> unmaps the specified widgets
	  and removes them from their parent's geometry management.
	  The widgets will disappear from the screen, and (depending
	  on its parent) may no longer have screen space allocated for
	  them.
	</para>
	<para>Each of the widgets in the <replaceable>children</replaceable> array must have
	  the same parent.
	</para>
	<para>See the &ldquo;Algorithm&rdquo; section below for full details of the
	  widget unmanagement procedure.
	</para>
      </refsect1>

      <refsect1 id="r1-1007-unmanagechildren-2">
	<title>Usage</title>
	<para>
	  Unmanaging widgets is the usual method for temporarily
	  making them invisible.  They can be re-managed with
	  <function>XtManageChildren()</function>.
	</para>
	<para>
	  You can unmap a widget, but leave it under geometry
	  management by calling <function>XtUnmapWidget()</function>.  You can
	  destroy a widget's window without destroying the widget by
	  calling <function>XtUnrealizeWidget()</function>.  You can destroy a
	  widget completely with <function>XtDestroyWidget()</function>.
	</para>
	<para>
	  If you are only going to unmanage a single widget, it is
	  more convenient to call <function>XtUnmanageChild()</function>.  It is
	  often more convenient to call <function>XtUnmanageChild()</function>
	  several times than it is to declare and initialize an array
	  of widgets to pass to <function>XtUnmanageChildren()</function>.  Calling
	  <function>XtUnmanageChildren()</function> is more efficient, however,
	  because it only calls the parent's <function>change_managed()</function>
	  method once.
	</para>
      </refsect1>

      <refsect1 id="r1-1007-unmanagechildren-3">
	<title>Algorithm
	</title>
	<para><function>XtUnmanageChildren()</function> performs the following:
	</para>
	<variablelist>
	  <varlistentry>
	    <term>-
	    </term>
	    <listitem>
	      <para>Ignores the child if it already is unmanaged or is being
		destroyed.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>-
	    </term>
	    <listitem>
	      <para>Otherwise, if the child is realized, it makes it nonvisible
		by unmapping it.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
	<para>
	</para>
      </refsect1>

      <refsect1 id="r1-1007-unmanagechildren-4">
	<title>Structures</title>
	<para>
	  The <type>WidgetList</type> type is simply an array of widgets:
	</para>
	<screen id="sc-1007-unmanagechildren-1">
	typedef Widget *WidgetList;
	</screen>
      </refsect1>
    </refentry>
-->
  </chapter>


  <chapter id="credits">

    <title>Credits and License</title>

    <para>
      <application>Rosegarden</application>
    </para>
    <para>
      <itemizedlist>
	<listitem>
	  <para>

	    Rosegarden-4 is Copyright 2000-2003 Guillaume Laurent,
	    Chris Cannam and Richard Bown.  The moral rights of
	    Guillaume Laurent, Chris Cannam and Richard Bown to be
	    identified as the authors of this work have been asserted.

	  </para>
	</listitem>

	<listitem>
	  <para>

	    Parts of Rosegarden-4 are derived from Rosegarden 2.1,
	    which is Copyright 1994 &ndash; 2001 Chris Cannam, Andrew Green,
	    Richard Bown and Guillaume Laurent.

	  </para>
	</listitem>

	<listitem>
	  <para>

	    For musical notation display Rosegarden-4 uses pixmaps
	    derived from the Feta font, part of the <ulink
	    url="http://lilypond.org/">Lilypond</ulink> software,
	    which is Copyright 1997 &ndash; 2001 Jan Nieuwenhuizen and
	    Han-Wen Nienhuys.

	  </para>
	</listitem>

	<listitem>
	  <para>

	    Other major contributors include Randall Farmer, Ron
	    Kuris, Hans Kieserman, and Michael McIntyre.

	  </para>
	</listitem>

	<listitem>
	  <para>

	    The Rosegarden splash-screen image is from a 1900 postcard
	    of Thornden Park at Syracuse University, Syracuse, NY,
	    used with thanks to the staff of Syracuse University.

	  </para>
	</listitem>

      </itemizedlist>
    </para>

    <para>
      Documentation copyright 2002-2003 Chris Cannam, Richard Bown, Guillaume Laurent
    </para>
<!--
    <para>
      Translations done by:
      <itemizedlist>
	<listitem>
	  <para>Babel D. Fish <email>babelfish@kde.org</email> (Sanskrit)</para>
	</listitem>
      </itemizedlist>
    </para>
-->
    <!-- For URL links to common stuff like the one below,
    always use paths like "common/gpl-licence".
    In this path, "common" will be a symbolic link built at "make install" time.
    This link will normally point to $KDEDIR/share/doc/HTML/en/common,
    where "en" should be replaced with the current language. -->

    <para>
      This program is licensed under the terms of the
      <ulink url="common/gpl-license.html">GNU GPL</ulink>.
    </para>
  </chapter>


  &documentation.index; 
</book>
