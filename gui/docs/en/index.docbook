<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.1-Based Variant V1.0//EN" "dtd/kdex.dtd" [
  <!ENTITY rosegarden "<application>Rosegarden</application>">
  <!ENTITY % English "INCLUDE" > <!-- change language only here -->
  <!ENTITY % addindex "IGNORE">
]>

<!-- The language must be changed in the <book> tag for translations. -->

<book id="rosegarden" lang="en">

  <!-- This header contains all of the meta-information for the document such
  as Authors, publish date, the abstract, and Keywords -->

  <bookinfo>
    <title>The Rosegarden Handbook</title>
    <authorgroup>
      <author>
	<firstname>Richard</firstname>
	<surname>Bown</surname>
      </author>
      <author>
	<firstname>Chris</firstname>
	<surname>Cannam</surname>
      </author>
      <author>
	<firstname>Guillaume</firstname>
	<surname>Laurent</surname>
      </author>
      <!-- TRANS:ROLES_OF_TRANSLATORS -->
    </authorgroup>

    <copyright>
      <year>2002</year>
      <holder>Richard Bown, Chris Cannam, Guillaume Laurent</holder>
    </copyright>

    <date>2002-07-04</date>
    <releaseinfo>0.1.7</releaseinfo>

    <abstract>
      <para>

	Rosegarden is a MIDI and audio sequencer and musical notation
	editor.  This Handbook describes how to use it.

      </para>
    </abstract>

    <keywordset>
      <keyword>Rosegarden</keyword>
      <keyword>sequencer</keyword>
      <keyword>MIDI</keyword>
      <keyword>audio</keyword>
      <keyword>music</keyword>
      <keyword>notation</keyword>
      <keyword>score</keyword>
      <keyword>KDE</keyword>
    </keywordset>

  </bookinfo>

  <!-- The contents of the documentation begins here.  Label each
  chapter so with the id attribute. This is necessary for two reasons:
  it allows you to easily reference the chapter from other chapters of
  your document, and if there is no ID, the name of the generated HTML
  files will vary from time to time making it hard to manage for
  maintainers and for the CVS system. Any chapter labelled (OPTIONAL)
  may be left out at the author's discretion. Other chapters should
  not be left out in order to maintain a consistent documentation
  style across all KDE apps. -->

  <chapter id="introduction">
    <title>Introduction</title>

    <!-- The introduction chapter contains a brief introduction for
    the application that explains what it does, where to get new
    versions of the app, where to report problems, and a brief
    revision history of the app. Basically a long version of the
    abstract. -->

    <para>

      <application>Rosegarden</application> is a MIDI and audio
      sequencer and musical notation editor.  This Handbook describes
      how to use it.

    </para>

    <!-- Note that the revhistory tags apply to the documentation
    version and not to the app version. That is why we use an
    ItemizedList here. -->

    <sect1 id="rosegarden-revhistory">
      <title>Revision History</title>
      <para>
	<itemizedlist>
	  <listitem><para>
	      0.1 - first public release
	    </para></listitem>
	</itemizedlist>
      </para>
    </sect1>
  </chapter>

  <!-- cc: I think we should omit the Installation chapter -->

      <!-- List any special requirements for your application
      here. This should include: .Libraries or other software that is
      not included in kdesupport, kdelibs, or kdebase.  .Hardware
      requirements like amount of RAM, disk space, graphics card
      capabilities, screen resolution, special expansion cards, etc.
      .Operating systems the app will run on. If your app is designed
      only for a specific OS, (you wrote a graphical LILO configurator
      for example) put this information here.  -->
<!--
  <chapter id="installation">
    <title>Installation</title>

    <sect1 id="getting-rosegarden">
      <title>How to obtain Rosegarden</title>

      <para>
	To obtain the latest version of <application>Rosegarden</application>, visit <ulink url="http://www.all-day-breakfast.com/rosegarden/">the Rosegarden website</ulink>.
      </para>
    </sect1>

    <sect1 id="requirements">
      <title>Requirements</title>

      <para>

	In order to successfully use
	<application>Rosegarden</application>, you need KDE
	1.1. Foobar.lib is required in order to support the advanced
	<application>Rosegarden</application>
	features. <application>Rosegarden</application> uses about 5
	megs of memory to run, but this may vary depending on your
	platform and configuration.

      </para>

      <para>

	All required libraries as well as
	<application>Rosegarden</application> itself can be found on
	<ulink url="http://www.all-day-breakfast.com/rosegarden/"> The
	<application>Rosegarden</application> home page</ulink>.

      </para>

    </sect1>

    <sect1 id="compilation">
      <title>Compilation and installation</title>

      <para>
	In order to compile and install Rosegarden on your system, type the following in the base
	directory of the Rosegarden distribution:
	<screen width="40">
	  <prompt>%</prompt> <userinput>./configure</userinput>
	  <prompt>%</prompt> <userinput>make</userinput>
	  <prompt>%</prompt> <userinput>make install</userinput>
	</screen>
      </para>

      <para>Since Rosegarden uses autoconf and automake you should have not trouble compiling it.
	Should you run into problems please report them to the author at <ulink url="mailto:glaurent@telegraph-road.org, cannam@all-day-breakfast.com, bownie@bownie.com"> Guillaume Laurent, Chris Cannam, Rich Bown</ulink>.</para>

    </sect1>

    <sect1 id="configuration">
      <title>Configuration</title>

      <para>Don't forget to tell your system to start the <filename>dtd</filename>
	dicer-toaster daemon first, or Rosegarden won't work !</para>

    </sect1>

  </chapter>
-->


<!--
  **********************************
 
   PART I:
   Discussion and tutorial material

  **********************************
  -->


  <chapter id="using-rosegarden">
    <title>Using Rosegarden</title>

    <!-- This chapter should tell the user how to use your app. You
    should use as many sections (Chapter, Sect1, Sect3, etc...) as is
    necessary to fully document your application. -->

    <!-- Note that all graphics should be in .png format. Use no
    gifs because of patent issues. -->

    <!--
    <para>

      <screenshot>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="example.png" format="PNG"/>
	  </imageobject>
	  <textobject>
	    <phrase>An example image</phrase>
	  </textobject>
	</mediaobject>
      </screenshot>

    </para>

    <sect1 id="rosegarden-features-overview">
      <title>Features overview</title>

      <para>It slices! It dices! and it comes with a free toaster!</para>
      <para>
	The Squiggle Tool <guiicon><inlinemediaobject><imageobject><imagedata fileref="squiggle.png" format="PNG"/></imageobject></inlinemediaobject></guiicon> is used to draw squiggly lines all
	over the <application>Rosegarden</application> main window. It's not a bug, it's a feature!
      </para>

    </sect1>
    -->

    <sect1 id="basics">
      <title>How Rosegarden stores a composition</title>
      <para></para>
    </sect1>

    <sect1 id="segment-view">
      <title>The Segment editor</title>
      <para></para>
    </sect1>

    <sect1 id="matrix-editor">
      <title>The Matrix editor</title>
      <para></para>
    </sect1>

    <sect1 id="notation-view">
      <title>The Notation editor</title>

      <!-- Introduction, purpose -->

      <sect2 id="nv-introduction">
	<title>Introduction</title>

	<para>

	  The Rosegarden notation editor enables you to view and edit
	  one or more staffs in traditional score notation.

	</para><para>

	  Rosegarden aims to present scores with the best possible
	  layout compatible with its primary focus as a sequencer
	  application.  This means that although the editor supports
	  chords, overlapping and nested beamed groups, triplets and
	  arbitrary tuplets, grace notes, dynamics, accents, text and
	  so on, it does not provide as much fine control over layout
	  (especially in contrapuntal music) as a dedicated score
	  editing program might.  Rosegarden does not aim to produce
	  typeset-quality score, although it can <link
	  linkend="commands-main-file-export-lilypond">write Lilypond
	  files</link> which may form a good basis for typesetting.

	</para>
      </sect2>

      <!-- Single and multiple staffs, and "current staff" -->

      <sect2 id="nv-staffs">
	<title>Single and Multiple Staffs</title>

	<para>
	  There are two ways to open a notation editor from the
	  Rosegarden main window.  (Both of them require that you
	  have some existing segments in the main window first,
	  so if you're starting a new composition, you should
	  create your segments before you start thinking about
	  how to edit them.)

	  <variablelist>

	    <varlistentry>
	      <term>Double-clicking on segments</term>
	      <listitem>
		
		<para>The most obvious way is just to double-click on
		a segment in the main canvas.  So long as you haven't
		reconfigured <!-- !!!link --> Rosegarden to use the
		matrix editor as a default, double-clicking a segment
		will open it as a single staff in a notation editor
		window.</para>
		
		<para>You can also open a multi-staff editor this way:
		holding down the Shift key, select (with a single
		mouse click) each of the segments on the main view
		that you want to open, but double-click on the last
		one.  All of the selected segments will then be opened
		together in a single notation window.</para>

	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>The Open in Notation Editor menu functions</term>
	      <listitem>

		<para>Alternatively, you can use the main window's <!-- !!! link linkend="commands-main-segments-notation" -->Open in Notation Editor<!-- /link --> menu function, either on the Segments menu or on the right-button popup menu on a segment in the canvas.  Select the segments you want to edit (by shift-clicking as above, or by using the <!-- !!! link linkend="commands-main-edit-select-all-segments" -->Select All Segments<!-- /link --> function) and then select <!-- !!! link linkend="commands-main-segments-notation" -->Open in Notation Editor<!-- /link -->.</para>
	      </listitem>
	      
	    </varlistentry>
	  </variablelist>

	</para>

	<para>
	  If you have more than one staff (i.e. segment) visible in the notation
	  editor, only one of them can be "current" at once.  The
	  current staff can be distinguished because it has the insert
	  cursor on it (see <link linkend="nv-rulers">Rulers and
	  Cursors</link>), and this is the staff on which any editing
	  operations that use the insert cursor will take place.  The
	  topmost staff is the current one by default, but you can
	  switch to a different staff by ctrl-clicking on it <!--- !!! check this --> or by using the <!-- link linkend="commands-nv-move-cursor-up-staff" -->Move Cursor Up Staff<!-- /link --> and  <!-- link linkend="commands-nv-move-cursor-up-staff" -->Move Cursor Down Staff<!-- /link --> menu functions.
	</para>

      </sect2>

      <!-- Linear and page layouts -->

      <sect2 id="nv-layout">
	<title>Linear and Page Layout</title>

	<para>
	  The usual way the notation editor displays staffs is known
	  as Linear layout: one staff on top of another, with each
	  staff as a single, horizontally scrollable long line.  Some
	  of the functions of the editor (such as the <link
	  linkend="nv-rulers">Rulers</link>) are only available in
	  Linear layout.
	</para>

	<para>
	  However, you can also display staffs in Page layout, in
	  which each staff breaks at the end of a line, starting a new
	  line below the remaining staffs.  This is essentially the
	  same layout as found in printed music (except that it isn't
	  actually divided into physical pages).  Most, but not all,
	  of the display and editing functions work in Page layout as
	  well as in Linear layout.
	</para>

	<para>
	  To switch between the two, use the <!-- !!!link linkend="commands-nv-view-linear" -->Linear Layout<!-- /link --> and <!-- !!!link linkend="commands-nv-view-linear" -->Page Layout<!-- /link --> menu functions.
	</para>
      </sect2>

      <!-- Rulers and Cursors -->

      <sect2 id="nv-rulers">
	<title>Rulers and Cursors</title>

	<para>
	  The Rosegarden notation editor window includes two rulers
	  and two cursors.  The rulers are the horizontal strips
	  divided up with tickmarks at top and bottom of the main
	  notation canvas, and the cursors are the coloured vertical
	  lines shown initially at the start of the top staff in the
	  editor.  <!-- !!! screenshot -->
	</para>

	<para>
	  The purple cursor is the insert cursor.  It shows the point
	  at which operations such as insert and paste will take
	  place.  You can reposition the insert cursor by clicking or
	  dragging on the top ruler, or by clicking with the Select
	  tool on an empty part of the staff (avoiding any events), or
	  by clicking anywhere with Ctrl held down.</para>

	<para>You can also use the left and right arrow keys to move
	the insert cursor one event at a time.  If you hold Ctrl while
	pressing the arrow keys, the cursor will move a whole bar at a
	time; if you hold Shift, the cursor will <link
	linkend="nv-tools-selections">select the events</link> as it
	passes over them.
	</para>

	<para>
	  The blue cursor is the playback pointer.  Just like the
	  similar cursors in the main window and the matrix views,
	  this shows the location of the current playback or record
	  position.  It can be repositioned using the bottom ruler.
	</para>

	<para>
	  Note that the rulers are only shown in <link
	  linkend="nv-layout">Linear layout</link> mode.
	</para>

      </sect2>

      <!-- Display conventions (annotated picture with some selected notes,
           some quantized notes, a bar of incorrect length etc) -->

      <!-- Quantization, smoothing, and display of quantized notes -->

      <sect2 id="nv-quantization">
	<title>Quantization and Smoothing</title>

	<para>
	  Rosegarden is a multi-purpose program: it is a notation
	  editor, but it is primarily a sequencer and editor for
	  performed music.  And in performance, of course, the times
	  and durations of notes are rarely as precise as they are on
	  a printed score.
        </para>

        <para>
          This means that Rosegarden often has to do a lot of rounding
          of the basic note times and durations when attempting to
          make meaningful notes to show in the notation editor.  This
          is a type of quantization, but we refer to this quantization
          that's carried out solely for the purposes of notation
          display as "smoothing".  Smoothing doesn't affect the notes
          that play, or that you edit in other views such as the
          matrix.  The smoothing algorithm is also rather specialised
          (and some might say relatively ineffectual) because it tries
          to avoid doing any real damage: for example, a note that is
          apparently a little "too short", followed by a short rest,
          will often be rounded up to fill the rest, but the same
          note followed by a short note instead will be left as it is.
	</para>

	<para>
	  You can see which notes have required smoothing (either of
	  start time or duration) because they are shown in green on
	  the score, unless you have switched this behaviour off in
	  the Rosegarden configuration dialog.
	</para>

	<para>
	  The default smoothing level is fairly timid, and you may
	  find that it still leaves the music in a fairly
	  unintelligible state, with notes that should be chords
	  displayed as overlapping individual notes, with notes
	  truncated and followed by tiny rests, and so on --
	  particularly if you're editing music that was recorded live.
	  If so, you have two options:
        </para>

	<variablelist>

	  <varlistentry>
	    <term>Increase the smoothing level</term>
	    <listitem>
	      <para>
		You can increase the level of smoothing with the
		smoothing slider on the layout toolbar or the
		Smoothing submenu options on the View menu.  The
		default is the minimum smoothing level, which never
		rounds a note's duration by more than the length of
		the shortest possible note (a hemidemisemiquaver).
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>Do some real quantization</term>
	    <listitem>
	      <para>
	        The alternative is to quantize the underlying notes,
	        giving you more flexibility and power over the
	        rounding that is used, but meaning that the notes you
	        hear (and edit in the matrix editor) will acquire a
	        perhaps undesirable precision.  To do so, you can use
	        the <!-- !!!link
	        linkend="commands-nv-transforms-quantize"
	        -->Quantize<!-- /link --> menu function, which
	        operates on a selection of notes (see <!-- !!! link
	        linkend="nv-selection" -->Selection<!-- /link -->).  The
		notation editor will also pick up on any changes in  
		quantization made using the Quantize dropdown on the
		main window or the matrix editor.
	      </para>
	    </listitem>
	  </varlistentry>

	</variablelist>

      </sect2>

      <!-- Tools and Selections -->

      <sect2 id="nv-tools-selections">
        <title>Tools and Selections</title>
	<para>
	  Most of the menu and toolbar editing functions in the
	  Rosegarden notation editor fall into one of two categories:
	  "tools" and "functions that operate on selections".
        </para>

	<variablelist>
	  <varlistentry>
	    <term>Tools</term>
	    <listitem>
	      <para>The basic tools are the selection tool, the erase
	      tool, and those for inserting notes, rests, text and so
	      on, which are usually accessed from the toolbar buttons.
	      Choosing a tool changes the default behaviour of the
	      mouse buttons on the main notation canvas, at least
	      until another tool is chosen instead.  For example,
	      choosing the selection tool allows you to make
	      selections and so to use the selection-based functions
	      (below); choosing an insertion tool (such as one of the
	      notes) switches the GUI's behaviour so as to insert
	      notes by clicking on the canvas; choosing the erase tool
	      allows you to remove events by clicking on them.
	      </para>
	      <para>
	      You can also change the current tool using the Tools menu.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>Functions that operate on selections</term>
	    <listitem>
	      <para>
	      The majority of the remaining menu functions require a
	      selection to be made on the canvas before they can be
	      used.  Some of them (such as Cut or the Note Style
	      functions) will operate on any selected events; others
	      (such as the Grace Notes or Stem Directions functions)
	      will refuse to work unless the selection contains 
	      some notes.
	      </para>
	      <para>
	      To select some events on the canvas, switch to the
	      Select (arrow) tool and then outline a rectangular area
	      containing the events you want to select.  The selected
	      events will then be highlighted in blue.  If you click
	      on a single event, just that event will be selected.
	      (You can also double-click on a single event to open an
	      editing dialog for that event, but that's got nothing to
	      do with selections.)  If you hold Shift while dragging
	      out a rectangle, its contents will be added to any
	      existing selection instead of replacing it.
	      </para>
	      <para>
	      To select a whole bar, double-click with the Select tool
	      on some empty space within that bar; to select the whole
	      staff, click three times.  The Edit menu carries
	      functions for selecting extended areas based on the
	      location of the insert cursor, and you can also select
	      events around the insert cursor by holding Shift and
	      pressing the left or right arrow keys.
	      </para>
	      <para>
	      It is not possible to select events from more than
	      one staff at once.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term></term>
	    <listitem>
	      <para>
	      </para>
	    </listitem>
	  </varlistentry>
        </variablelist>

      </sect2>

      <!-- Insertion: notes, auto-ties, accidentals -->

      <sect2 id="nv-insertion">
      <title>Inserting notes and rests</title>

      <para>To insert a note, you generally just select one of the
      note tools by clicking on a particular duration of note on the
      toolbar, and then click on the staff at the point where you
      want to add the note.</para>

      <para>If you add a note at the same time as an existing note of
      different duration, the editor will generally assume that you
      want to create chords and will split the existing or new note
      accordingly so as to create one or more chords with ties.  If
      you really do want to chord two different durations, you can
      select the tied noteheads and use the Collapse Equal-Pitch Notes
      function to merge them together.  Alternatively, the default
      behaviour can be changed in the Rosegarden configuration dialog
      so as not to do the split at all.</para>

      <para>If you add a note exactly over an existing note of
      different duration (i.e. at the same pitch), the duration of the
      existing note will be changed to that of the new one.</para>

      <para>If you add a rest at the same time as an existing note,
      the note will be silenced for the duration of the rest,
      shortening or possibly removing it altogether.</para>

	<sect3 id="nv-insertion-keyboard">
	  <title>Typing notes with the PC keyboard</title>

	  <para>You can also insert notes by "typing" their pitches on
	  the PC's keyboard.</para>

	  <para>First, ensure a notation tool
	  is selected to indicate the duration of note you wish to
	    insert.  You can select the various note types using the number keys:</para>

	  <itemizedlist>
	    <listitem><para><keycap>5</keycap> - Breve</para></listitem>
	    <listitem><para><keycap>1</keycap> - Whole note (semibreve)</para></listitem>
	    <listitem><para><keycap>2</keycap> - Half note (minim)</para></listitem>
	    <listitem><para><keycap>4</keycap> - Quarter note (crotchet)</para></listitem>
	    <listitem><para><keycap>8</keycap> - Eighth note (quaver)</para></listitem>
	    <listitem><para><keycap>6</keycap> - Sixteenth note (semiquaver)</para></listitem>
	    <listitem><para><keycap>3</keycap> - Thirty-second note (demisemiquaver)</para></listitem>
	    <listitem><para><keycap>0</keycap> - Sixty-fourth note (hemidemisemiquaver)</para></listitem>
	  </itemizedlist>
	    
	  <para>Holding the <keycap>Ctrl</keycap> key while pressing a number will select the corresponding dotted-note tool.</para>
	  
	  <para>Once a notation tool is selected, you can insert a note at the current position of the <link linkend="nv-rulers">insert cursor</link> by pressing one of the pitch keys:</para>

	  <itemizedlist>
	    <listitem><para><keycap>A</keycap> - Do (the tonic of the current key in the current clef)</para></listitem>
	    <listitem><para><keycap>S</keycap> - Re</para></listitem>
	    <listitem><para><keycap>D</keycap> - Mi</para></listitem>
	    <listitem><para><keycap>F</keycap> - Fa</para></listitem>
	    <listitem><para><keycap>J</keycap> - So</para></listitem>
	    <listitem><para><keycap>K</keycap> - La</para></listitem>
	    <listitem><para><keycap>L</keycap> - Ti</para></listitem>
	  </itemizedlist>

	  <para>Holding <keycap>Shift</keycap> while pressing a key
	  will sharpen the note (except for Mi and Ti, which don't
	  have sharpened versions) and holding <keycap>Shift</keycap>
	  and <keycap>Ctrl</keycap> together will flatten it (except
	  for Fa and Do).</para>

	  <para>To enter notes an octave higher, use the corresponding
	  keys on the next row up: <keycap>Q</keycap>,
	  <keycap>W</keycap>, <keycap>E</keycap>, <keycap>R</keycap>,
	  <keycap>U</keycap>, <keycap>I</keycap>, and
	  <keycap>O</keycap>.  Likewise to enter notes an octave
	  lower, use <keycap>Z</keycap>, <keycap>X</keycap>,
	  <keycap>C</keycap>, <keycap>V</keycap>, <keycap>B</keycap>,
	  <keycap>N</keycap> and <keycap>M</keycap>.</para>

	  <para>The default behaviour of the notation editor is to
	  move the insert cursor forward after inserting a note, so as
	  to be ready to insert another note after it in a melody;
	  this can be changed using the <keycap>G</keycap> key, which
	  switches to chord mode so that subsequent insertions occur
	  at the same time as the last one.  Pressing
	  <keycap>H</keycap> switches back to the melody insertion
	  behaviour.</para>

	  <para>All of the insertion commands are also available on a
	  submenu of the Tools menu.  It's unlikely you'd ever want to
	  navigate the menus just to insert a single note, but the
	  menus show the keyboard shortcuts and so provide a useful
	  reference in case you forget which key is which.</para>

	  <para>The keyboard shortcuts are currently designed for use
	  with a QWERTY-layout keyboard.  There is not yet any way to
	  remap the keys for another layout, short of reassigning each
	  key individually using the "Configure Shortcuts..." option
	  on the Settings menu.</para>

	</sect3>
	
      </sect2>

      <!-- Text -->

      <sect2 id="nv-text">
	<title>Text and lyrics</title>
	
	<para>A staff can contain various sorts of text, in text
	events.  There are two basic classes of text event: single
	text items used for point annotations etc., and lyrics.  The
	former can be created (and so associated with a particular
	time in the staff) using the Text tool, which is available on
	the button marked with a big T in the toolbar.  Lyrics can
	also be created this way, but are more easily created using
	the <link linkend="nv-text-lyrics">lyric editor</link>.</para>

	<para>To add a piece of text, select the Text tool and click
	at the point where you want to add it.  A dialog box will
	appear, into which you can type the text and choose its
	intended purpose.  (Rosegarden prefers to store what the text
	is for, rather than how it should look; this is so that in
	future we may be able to configure how the various sorts of
	text are presented for each individual user.) The available
	purposes (or styles) are:</para>

	<variablelist>

	  <varlistentry><term>Dynamic</term><listitem><para> Used for
	  minor local indications such as the dynamic marks "p", "mf"
	  etc. Shown below the staff in small italic
	  type by default.  </para></listitem></varlistentry>

	  <varlistentry><term>Direction</term><listitem><para> Used
	  when indicating significant changes in style or mood.  Shown
	  above the staff in large roman type by default.
	  </para></listitem></varlistentry>

	  <varlistentry><term>Local Direction</term><listitem><para>
	  Used to indicate less significant changes in style or mood.
	  Shown below the staff in a smaller bold-italic roman type by
	  default.  </para></listitem></varlistentry>

	  <varlistentry><term>Tempo</term><listitem><para> Used to
	  indicate significant changes in tempo.  Shown above the
	  staff in large bold roman type by default.
	  </para></listitem></varlistentry>

	  <varlistentry><term>Local Tempo</term><listitem><para> Used
	  to indicate more minor or local changes in tempo.  Shown
	  above the staff in a small bold roman type by default.
	  </para></listitem></varlistentry>

	  <varlistentry><term>Lyric</term><listitem><para> Although
	  lyrics are usually created in the <link
	  linkend="nv-text-lyrics">lyric editor</link>, they can also
	  be entered word by word if necessary using this style.  This
	  style is shown below the text in a small roman type by
	  default.  (Warning: if you enter lyrics this way and later
	  edit the staff's lyrics using the lyric editor, any lyrics
	  entered this way may be modified or moved if their
	  positioning is not compatible with that expected by the
	  lyric editor.)  </para></listitem></varlistentry>

	  <varlistentry><term>Annotation</term><listitem><para> Used
	  for helpful text that is not strictly considered part of the
	  score.  Shown below the staff, boxed-out in a yellow
	  sticky-label-style box by default.
	  </para></listitem></varlistentry>

	  </variablelist>

	<para>You can also edit text after creating it, by clicking on
	the existing text with the text tool.</para>
	
	<sect3 id="nv-text-lyrics">
	  <title>Editing lyrics</title>
	
	  <para>The Lyric editor, available from the "Open Lyric
	  Editor" option of the View menu, allows you to edit all of
	  the lyric events for a single staff at once, using a fairly
	  rudimentary textual editing system.  To use it, just
	  activate the menu option, edit the lyric text in the
	  resulting dialog, and then hit OK.</para>

	  <para>The lyrics you enter should follow a particular
	  format.  Bar lines are vital to avoid the editor getting
	  confused, and are represented with a slash ("/").  Within
	  each bar the individual syllables are separated by spaces
	  (at least one space: the editor doesn't care about any extra
	  whitespace). Each syllable in turn will be attached to the
	  next subsequent note or chord within that bar (although at
	  the moment the editor can get quite confused by chords that
	  are not exact, i.e. that require smoothing or
	  quantizing).</para>

	  <para>If you want a note to have no syllable attached to it,
	  you need to provide a dot (".") as the syllable for that
	  note.  (This is why the default lyric text for a segment is
	  usually full of dots.)  Remember to separate the dots with
	  spaces, so that they are clearly separate syllables.</para>
	  
	  <para>If you want more than one syllable on the same note,
	  with a space between them, use a tilde ("~") instead of the
	  space.  It will be shown as a space on the score.</para>

	  <para>If you want to split a syllable across two notes, with
	  a hyphen, you need to enter a space following the hyphen so
	  the editor knows to treat it as two syllables.  (Hyphens get
	  no special treatment within syllables.)</para>

	  <para>Syllables consisting only of numbers surrounded by
	  square brackets (like "[29]") will be ignored; this is the
	  format used for the automatically-generated bar numbers
	  shown in the editor.</para>

	  <para>You should also be aware that the textual format of
	  lyrics is only used for editing:  the lyrics are actually
	  stored as distinct text events (one per syllable).  This
	  means that the text format may potentially change in the
	  future to accommodate more advanced editing capabilities,
	  although the event format should not change and so your
	  saved files should continue to be compatible.</para>

	  </sect3>

	</sect2>

      <!-- Indications -->

      <sect2 id="nv-indication">
	<title>Slurs and hairpins</title>

	<para>Slur and hairpin dynamic markings are stored as events,
	just like notes or rests.  To create one, select the area you
	want it to cover (a series of notes or whatever), and then use
	the Add Slur, Add Crescendo or Add Decrescendo options from
	the Group menu.</para>

	<para>You remove a slur or hairpin in the same way as any
	other event: either select it with the selection tool and then
	hit Delete, or click on it with the erase tool active.</para>

      </sect2>

      <!-- Stem direction, slashes etc -->

      <sect2 id="nv-note-qualities">
	<title>Note Stems</title>

	<para>You can set the stem direction of any selected notes
	(provided they are a sort that have stems) using the three
	Stem Direction options on the Notes menu.  The options allow
	you to either fix the stems up or down, or revert to the stem
	direction that Rosegarden would otherwise have chosen.</para>

	<para>The Notes menu also contains options for adding slashes
	across note stems, for example to indicate short repeated
	notes or drum rolls.  These are currently purely notational;
	Rosegarden will not take them into account when playing the
	staff or generating MIDI.</para>
      </sect2>
      
      <!-- Beamed groups, including overlapping and nesting them -->

      <sect2 id="nv-beamed-groups">
	<title>Beams</title>
	
	<para>Adding beams to notes is considered a grouping operation
	in the Rosegarden notation editor, available on the Group
	menu.  Select the notes you want to beam, and use the Beam
	Group menu option.  To remove a beam, select the notes and use
	the Unbeam menu option.</para>

	<para>It is possible to have more than one beamed group
	happening at the same time -- you just select and beam the
	separate groups one at a time -- but Rosegarden is usually not
	yet clever enough to work out which notes should have stems up
	and which should have stems down for simultaneous beamed
	groups, so you will probably have to set the stem directions
	of the notes in the groups explicitly as well as beaming them.</para>

	<para>Rosegarden can attempt to guess a sensible beaming for a
	piece of music, provided it's not too complicated.  To invoke
	this, select the notes you want to calculate the beaming for
	(for example by triple-clicking to select a whole staff) and
	then use the Auto-Beam option on the Group menu.  Auto-beaming
	is also done automatically when loading a MIDI file, for
	example, and the editor also does some automatic beaming as
	you enter notes (this can be disabled by changing the
	"Auto-Beam when appropriate" setting on the configuration
	dialog or the insertion tool's right-button menu).</para>

      </sect2>

      <!-- Tuplets -->

      <sect2 id="nv-tuplets">
	<title>Triplets and other tuplets</title>

	<para>A triplet group consists of three notes or chords played
	in the time of two.  (More precisely, it consists of notes
	with a total duration of three arbitrary units played in the
	time of two of those units.)</para>

	<para>We use the word "tuplet" to describe the general
	situation in which notes with a total duration of any given
	number of units are played in the time of a different number
	of those units: nine notes in the time of eight, or six in the
	time of four, or a crotchet and a quaver in the time of a
	single crotchet, or even two notes in the time of three.  (At
	present Rosegarden does not support the last example -- tuplet
	groups must always be played with a shorter duration than
	written.)</para>

	<para>To make a general tuplet group, we need to know what the
	base note is (for example, if we play three crotchets in the
	time of two then the base is a crotchet) and the ratio of the
	number of base notes written to the number played.</para>

      </sect2>

      <!-- Grace notes -->

      <!-- Paste -->

      <sect2 id="nv-paste-types">
	<title>Paste types</title>

	<para>
	  The meaning of "cut and paste" is less obvious for a music
	  editing program than it is for something like a word
	  processor in which the letters and words go in a simple
	  linear order.  Accordingly, Rosegarden's notation editor
	  offers several different types of Paste operation, as well
	  as separate <link
	  linkend="commands-nv-menu-edit-cut">Cut</link> and <link
	  linkend="commands-nv-menu-edit-cut-and-close">Cut and
	  Close</link> functions.
	</para>

	<para>The types of Paste operation are:</para>

	<variablelist>

	  <varlistentry>
	    <term>Restricted</term>
	    <listitem>
	      <para>Requires an existing gap (containing nothing but
		rests) of enough duration to completely contain the
		clipboard's contents.  The contents are pasted into
		the gap.  If there is no gap long enough, the paste
		is not carried out.
	      </para>
	      <para>
		This is the default paste type.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>Simple</term>
	    <listitem>
	      <para>Erases enough events to make a gap long enough to
		paste into, and then pastes into that.  The pasted events therefore completely replace any existing ones in the time covered by the paste.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>Open and Paste</term>
	    <listitem>
	      <para>The opposite of <link
	  linkend="commands-nv-menu-edit-cut-and-close">Cut and
	  Close</link>.  Makes room for the paste by moving all of the
		subsequent events further towards the end of the
		composition.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>Note Overlay</term>
	    <listitem>
	      <para>Carries out a paste in the way that it would
	      happen if you entered each of the notes in the clipboard
	      yourself using the notation editor: if there are other
	      notes overlapping with them, the new or existing notes
	      will be split into ties appropriately.
	      </para>
	    </listitem>
	  </varlistentry>

	  <varlistentry>
	    <term>Matrix Overlay</term>
	    <listitem>
	      <para>Carries out a paste in the way that it would
	      happen if you entered each of the notes in the clipboard
	      yourself using the matrix editor: the notes presently
		in the way of the paste will be ignored, allowing the new notes to overlap arbitrarily with them.
	      </para>
	    </listitem>
	  </varlistentry>

	</variablelist>

	<para>All of these take effect at the current position of the insert cursor on the current staff.  To choose between the various paste types, use the <link
	  linkend="commands-nv-menu-edit-paste-dot-dot-dot">Paste...</link> menu option (with dots) on the <link
	  linkend="commands-nv-menu-edit">Edit</link> menu.
	  </para>

      </sect2>

      <sect2 id="nv-note-styles">
	<title>Note Styles</title>

	<para>
	  Rosegarden also allows you to change various aspects of the
	  way the various types of notes are drawn, such as the choice
	  of note heads, the number of tails, whether notes are filled
	  or unfilled and so on.
	</para>

	<para>
	  A set of standard styles (Classical, Cross, Triangle and
	  Mensural) is provided, and you can change the style used for
	  individual notes by selecting them and then using the <!--
	  !!! link linkend="commands-nv-menu-notes-notestyle" -->Note
	  Style<!-- /link --> menu options.  Each note remembers which
	  style has been chosen for it, and this information is saved
	  as part of the composition.  You can also change the default
	  style for new notes using the "Configure Rosegarden..." 
	  option in the Settings menu.
	</para>

	<para>
	  It is also possible to create your own note styles by
	  describing them in XML files.  (Even the standard styles are
	  defined this way: the only reason the editor knows that a
	  Classical semiquaver has a tilted oval filled head, a stem,
	  two flags, etc., is that the description in Classical.xml
	  says so.)  See the <!-- !!! link
	  linkend="developers-note-styles" -->Developers Guide<!-- /link --> for
	  more information.
	</para>
      </sect2>
    </sect1>


  </chapter>




<!--
  **********************************
 
   PART II:
   Command reference

  **********************************
  -->


  <chapter id="commands">
    <title>Command Reference</title>

    <!-- (OPTIONAL, BUT RECOMMENDED) This chapter should list all of
    the application windows and their menubar and toolbar commands for
    easy reference.  Also include any keys that have a special
    function but have no equivalent in the menus or toolbars. This may
    not be necessary for small apps or apps with no tool or menu
    bars. -->

    <para></para>

    <sect1 id="commands-main">
      <title>The main Rosegarden window</title>
      <para></para>


      <sect2>
	<title>The File Menu</title>
	<para>
	  <variablelist>

	    <varlistentry id="commands-main-file-new">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>n</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>New</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Creates a new composition.</action></para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-open">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>o</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Open</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Opens an existing composition from a Rosegarden-4 (.rg) file.</action></para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-import">
	      <term><menuchoice>
		  <guimenu>File</guimenu>
		  <guimenuitem>Import</guimenuitem>
		</menuchoice></term>
	      <listitem><para>This submenu contains functions for importing compositions from other file formats.</para>

		<variablelist>

		  <varlistentry id="commands-main-file-import-midi">
		    <term><menuchoice>
			<guimenu>Import</guimenu>
			<guimenuitem>Import MIDI file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Creates a new composition from the contents of an existing MIDI (.mid) file.</action></para></listitem>
		  </varlistentry>

		  <varlistentry id="commands-main-file-import-rg21">
		    <term><menuchoice>
			<guimenu>Import</guimenu>
			<guimenuitem>Import Rosegarden 2.1 file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Creates a new composition from the contents of an existing Rosegarden 2.1 (.rose) file.</action></para></listitem>
		  </varlistentry>

		</variablelist>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-export">
	      <term><menuchoice>
		  <guimenu>File</guimenu>
		  <guimenuitem>Export</guimenuitem>
		</menuchoice></term>
	      <listitem><para>This submenu contains functions for exporting the contents of compositions to other file formats.</para>

		<variablelist>

		  <varlistentry id="commands-main-file-export-midi">
		    <term><menuchoice>
			<guimenu>Export</guimenu>
			<guimenuitem>Export MIDI file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Saves the contents of the current composition into a new MIDI file.</action>  Note that not all data in the Rosegarden composition necessarily can or will be saved in the MIDI format.</para></listitem>
		  </varlistentry>

		  <varlistentry id="commands-main-file-export-csound">
		    <term><menuchoice>
			<guimenu>Export</guimenu>
			<guimenuitem>Export Csound score file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Saves the contents of the current composition into a new Csound score file.</action>  Together with a suitable orchestra file (not supplied), this can be used to play the composition through <ulink url="http://www.csounds.com/">Csound</ulink>. Note that not all data in the Rosegarden composition necessarily can or will be saved in the Csound format.</para></listitem>
		  </varlistentry>

		  <varlistentry id="commands-main-file-export-lilypond">
		    <term><menuchoice>
			<guimenu>Export</guimenu>
			<guimenuitem>Export Lilypond file...</guimenuitem>
		      </menuchoice></term>
		    <listitem><para><action>Saves the contents of the current composition into a new Lilypond file.</action>  This can then be processed by the <ulink url="http://www.lilypond.org/">Lilypond</ulink> system to produce typeset-quality music, although it is likely that the file may need some tweaking to get really good quality output.  Note that not all data in the Rosegarden composition necessarily can or will be saved in the Lilypond format.</para></listitem>
		  </varlistentry>

		</variablelist>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-save">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>s</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Save</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Saves the composition.</action></para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-save-as">
	      <term><menuchoice>
		  <guimenu>File</guimenu>
		  <guimenuitem>Save As...</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Saves the composition with a new filename.</action></para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-close">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>w</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Close</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Closes the current composition.</action></para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-print">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>p</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Print</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Prints the current composition.</action> At the time of writing, the print function is incomplete.  We recommend using the <link linkend="commands-main-file-export-lilypond">Export Lilypond file</link> function and printing with Lilypond instead.</para></listitem>
	    </varlistentry>

	    <varlistentry id="commands-main-file-quit">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>q</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Quit</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Quits &rosegarden;</action></para></listitem>
	    </varlistentry>

	  </variablelist>
	</para>

      </sect2>

    </sect1>
    
    <sect1 id="commands-nv">
      <title>The Notation View</title>
      <para></para>

      <!-- Tools -->
         <!-- Note insertion tools -->
         <!-- Rest insertion tools -->
         <!-- Clef insertion tools -->
         <!-- Text tool -->
         <!-- Eraser -->

      <sect2 id="commands-nv-menu-file">
	<title>The File Menu</title>
	<para>
	  <variablelist>

	    <varlistentry id="commands-nv-menu-file-close">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>w</keycap></keycombo>
		  </shortcut>
		  <guimenu>File</guimenu>
		  <guimenuitem>Close</guimenuitem>
		</menuchoice></term>
	      <listitem><para><action>Closes the window</action></para></listitem>
	    </varlistentry>

	  </variablelist>
	</para>

      </sect2>

      <sect2 id="commands-nv-menu-edit">
	<title>The Edit Menu</title>
	<para>
	  <variablelist>

	    <varlistentry id="commands-nv-menu-edit-undo">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>z</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Undo</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Reverses the last edit.

		  </action> Edits are shared across
		    all views, so if the last edit was not made in
		    this view, undoing it might not appear to change
		    this view either.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-redo">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>Shift</keycap><keycap>z</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Redo</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Repeats the last edit, following an undo.

		  </action>
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-cut">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>x</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Cut</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Removes the selected events from the composition
		    and places them in the clipboard to replace any
		    contents the clipboard previously had.

		  </action>
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-copy">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>c</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Copy</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    
		    Copies the selected events to the clipboard
		    to replace any contents the clipboard previously had.

		  </action>
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-paste">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>v</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Paste</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    
		    Copies the contents of the clipboard to the
		    location of the insert cursor in the current
		    composition.

		  </action>

		  The clipboard must not contain
		    multiple segments, and there must be enough
		    space (occupied only by rests) starting at
		    the insert cursor position to accommodate the
		    clipboard's contents.

		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-cut-and-close">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>Shift</keycap><keycap>x</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Cut and Close</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    
		    Removes the selected events from the composition
		    and places them in the clipboard to replace any
		    contents the clipboard previously had, and closes
		    the gap left behind by moving all subsequent
		    events towards the beginning of the composition.

		  </action>
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-edit-paste-dot-dot-dot">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Ctrl</keycap><keycap>Shift</keycap><keycap>v</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Paste...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    
		    Provides a choice of paste mechanisms with the
		    ability to set one as the default for use in the
		    Paste menu function.

		  </action>

		   See the section on <link linkend="nv-paste-types">Paste types</link> for more information.

		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-delete">
	      <term><menuchoice>
		  <shortcut>
		    <keycombo><keycap>Del</keycap></keycombo>
		  </shortcut>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Delete</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Removes the selected events from the composition
		    and throws them away.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-select-from-start">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Select from Start</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Extends the current selection by selecting
		    all events from the start of the staff up to the
		    current selection (or up to the insert cursor,
		    if no events are currently selected).
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-select-to-end">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Select to End</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Extends the current selection by selecting
		    all events from the end of the current selection
		    (or from the insert cursor, if no events are
		    currently selected) up to the end of the staff.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-select-whole-staff">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Select Whole Staff</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Selects all the events on the current staff.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-add-tempo">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Add Tempo Change...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Invokes a tempo change dialog.
		  </action>
		  This offers a
		    selection of ways to change the tempo of the
		    composition, including changing the tempo from the
		    insert cursor position onwards, from the last
		    tempo change onwards, or for the entire
		    composition.  See <!-- !!!link linkend="segment-tempo-changes" -->Changing the Tempo<!-- /link --> for more information.
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-add-time-signature">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Add Time Signature Change...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Invokes a time-signature change dialog.
		  </action>
		  This offers a
		    selection of ways to change the tempo of the
		    composition, including changing the time signature
		  from the insert cursor position onwards or from the
		  start of the current bar.  See <!-- !!!link linkend="segment-tempo-changes" -->Changing the Time Signature<!-- /link --> for more information.

		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-add-clef">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Add Clef Change...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Invokes a clef selection dialog, and inserts the
		    chosen clef at the current insert cursor position.

		  </action>

		  The dialog allows you to choose a clef, but also
		  to choose how you want the clef to be applied, in
		  cases where there are already some notes following
		  the point where the clef is to be inserted.  You
		  must choose one of the following:

		  <variablelist>

		    <varlistentry>
		      <term>Maintain current pitches</term>
		      <listitem>
			<para>
			  Any notes following the clef will keep
			  their current performance pitches.
			</para>
			<para>
			  For example, inserting a
			  tenor clef in the middle of a previously
			  treble-clef section will cause the notes following
			  the clef to be moved an octave
			  higher up the staff, because they will still have
			  their treble-clef pitches.
			</para>
		      </listitem>
		    </varlistentry>

		    <varlistentry>
		      <term>Transpose into appropriate octave</term>
		      <listitem>
			<para>
			  Any notes following the clef will
			  retain their pitch within the octave, but
			  may be moved into a different octave to
			  match the new clef, and therefore will play
			  at a new pitch.
			</para>
			<para>
			  For example, inserting a tenor clef in the
			  middle of a previously treble-clef section
			  will cause the notes following the clef to
			  move by one staff line only to adjust to the new
			  clef, but to play an octave lower than before.
			</para>
		      </listitem>
		    </varlistentry>

		  </variablelist>

		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-edit-add-key-signature">
	      <term><menuchoice>
		  <guimenu>Edit</guimenu>
		  <guimenuitem>Add Key Change...</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-group-beam">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Beam Group</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Makes the selected notes into a beamed group.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-group-auto-beam">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Auto-Beam</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>
		    Scans the area covered by the selection and attempts
		    to group short notes into plausible beamed groups.
		  </action>
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-group-break-group">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Unbeam</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Removes the selected notes from any beamed groups
		    they may be part of, leaving them as separate
		    individuals.

		  </action>
		  If part of a beamed group is selected, the unselected
		  part of the group will remain beamed.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry id="commands-nv-menu-group-tuplet">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Tuplet</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Makes a triplet or other tuplet group.

		  </action>
		  This function allows you to adjust the timing of a
		  short section of music in the ratio of two
		  durations, for example to indicate that three notes
		  should be played in the time of two (the classic
		  triplet), or nine in the time of six, or whatever.
		  You can set this ratio in a dialog box when you
		  invoke the function.
		</para>
		<para>
		  If you have selected some events before invoking the
		  function, it will assume that you want to make a
		  tuplet group out of the selected region (or as close
		  to its duration as possible) and will adjust the
		  default values available in the dialog accordingly.
		</para>
	      </listitem>
	    </varlistentry>


	    <varlistentry id="commands-nv-menu-group-simple-tuplet">
	      <term><menuchoice>
		  <guimenu>Group</guimenu>
		  <guimenuitem>Simple Tuplet</guimenuitem>
		</menuchoice></term>
	      <listitem>
		<para>
		  <action>

		    Makes a tuplet group (normally of triplets) with
		    the most apparently obvious ratio of durations.

		  </action>
		  Usually this function will attempt to make a triplet
		  group starting at the current insert cursor, or if
		  some events are selected, will attempt to make them
		  into triplets.  It is possible that it might end up
		  making non-triplet groups if there is no obvious
		  valid triplet arrangement.
		</para>
	      </listitem>
	    </varlistentry>


	  </variablelist>
	</para>

      </sect2>


    </sect1>
  </chapter>




<!--
  **********************************
 
   PART III:
   Technical material

  **********************************
  -->


  <chapter id="developers">
    <title>Developer's Guide to Rosegarden</title>

    <!-- (OPTIONAL) A Programming/Scripting reference chapter should be
    used for apps that use plugins or that provide their own scripting hooks
    and/or development libraries. -->

    <para>
      Programming <application>Rosegarden</application> plugins is a joy to behold. Just read through the next
      66 pages of API's to learn how!
    </para>

    <!-- Use refentries to describe APIs.  Refentries are fairly
    complicated and you should consult the docbook reference for
    further details. The example below was taken from that reference
    and shortened a bit for readability. -->

    <refentry id="re-1007-unmanagechildren-1">
      <refmeta>
	<refentrytitle>XtUnmanageChildren</refentrytitle>
	<refmiscinfo>Xt - Geometry Management</refmiscinfo>
      </refmeta>
      <refnamediv>
	<refname>XtUnmanageChildren
	</refname>
	<refpurpose>remove a list of children from a parent widget's managed list.
	</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
	<refsynopsisdivinfo>
	  <date>4 March 1996</date>
	</refsynopsisdivinfo>
	<synopsis>
	  void XtUnmanageChildren(<replaceable>children</replaceable>, <replaceable>num_children</replaceable>)
	  WidgetList <replaceable>children</replaceable>;
	  Cardinal <replaceable>num_children</replaceable>;
	</synopsis>

	<refsect2 id="r2-1007-unmanagechildren-1">
	  <title>Inputs</title>
	  <variablelist>
	    <varlistentry>
	      <term><replaceable>children</replaceable>
	      </term>
	      <listitem>
		<para>Specifies an array of child widgets. Each child must be of
		  class RectObj or any subclass thereof.
		</para>
	      </listitem>
	    </varlistentry>
	    <varlistentry>
	      <term><replaceable>num_children</replaceable>
	      </term>
	      <listitem>
		<para>Specifies the number of elements in <replaceable>children</replaceable>.
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</refsect2></refsynopsisdiv>

      <refsect1 id="r1-1007-unmanagechildren-1">
	<title>Description
	</title>
	<para><function>XtUnmanageChildren()</function> unmaps the specified widgets
	  and removes them from their parent's geometry management.
	  The widgets will disappear from the screen, and (depending
	  on its parent) may no longer have screen space allocated for
	  them.
	</para>
	<para>Each of the widgets in the <replaceable>children</replaceable> array must have
	  the same parent.
	</para>
	<para>See the &ldquo;Algorithm&rdquo; section below for full details of the
	  widget unmanagement procedure.
	</para>
      </refsect1>

      <refsect1 id="r1-1007-unmanagechildren-2">
	<title>Usage</title>
	<para>Unmanaging widgets is the usual method for temporarily
	  making them invisible.  They can be re-managed with
	  <function>XtManageChildren()</function>.
	</para>
	<para>You can unmap a widget, but leave it under geometry
	  management by calling <function>XtUnmapWidget()</function>.  You can
	  destroy a widget's window without destroying the widget by
	  calling <function>XtUnrealizeWidget()</function>.  You can destroy a
	  widget completely with <function>XtDestroyWidget()</function>.
	</para>
	<para>If you are only going to unmanage a single widget, it is
	  more convenient to call <function>XtUnmanageChild()</function>.  It is
	  often more convenient to call <function>XtUnmanageChild()</function>
	  several times than it is to declare and initialize an array
	  of widgets to pass to <function>XtUnmanageChildren()</function>.  Calling
	  <function>XtUnmanageChildren()</function> is more efficient, however,
	  because it only calls the parent's <function>change_managed()</function>
	  method once.
	</para>
      </refsect1>

      <refsect1 id="r1-1007-unmanagechildren-3">
	<title>Algorithm
	</title>
	<para><function>XtUnmanageChildren()</function> performs the following:
	</para>
	<variablelist>
	  <varlistentry>
	    <term>-
	    </term>
	    <listitem>
	      <para>Ignores the child if it already is unmanaged or is being
		destroyed.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>-
	    </term>
	    <listitem>
	      <para>Otherwise, if the child is realized, it makes it nonvisible
		by unmapping it.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
	<para>
	</para>
      </refsect1>

      <refsect1 id="r1-1007-unmanagechildren-4">
	<title>Structures</title>
	<para>The <type>WidgetList</type> type is simply an array of widgets:
	</para>
	<screen id="sc-1007-unmanagechildren-1">typedef Widget *WidgetList;
	</screen>
      </refsect1>
    </refentry>

  </chapter>



  <!-- cc: I also think we should omit this chapter, but link to the online FAQ from the handbook's introduction -->

    <!-- (OPTIONAL but recommended) This chapter should include all of
    the silly (and not-so-silly) newbie questions that fill up your
    mailbox. This chapter should be reserved for BRIEF questions and
    answers! If one question uses more than a page or so then it
    should probably be part of the "Using this Application" chapter
    instead. You should use links to cross-reference questions to the
    parts of your documentation that answer them.  This is also a
    great place to provide pointers to other FAQ's if your users must
    do some complicated configuration on other programs in order for
    your application work. -->
<!--
  <chapter id="faq">
    <title>Questions and Answers</title>

    <para></para>

    <qandaset>
      <qandaentry>
	<question>
	  <para>My Mouse doesn't work. How do I quit <application>Rosegarden</application>?</para>
	</question>
	<answer>
	  <para>You silly goose! Check out the <link linkend="commands">Commands
	      Section</link> for the answer.</para>
	</answer>
      </qandaentry>
      <qandaentry>
	<question>
	  <para>Why can't I twiddle my documents?</para>
	</question>
	<answer>
	  <para>You can only twiddle your documents if you have the foobar.lib
	    installed.</para>
	</answer>
      </qandaentry>
    </qandaset>
  </chapter>
-->


  <chapter id="credits">

    <title>Credits and License</title>

    <para>
      <application>Rosegarden</application>
    </para>
    <para>
      <itemizedlist>
	<listitem>
	  <para>

	    Rosegarden-4 is Copyright 2000-2002 Guillaume Laurent,
	    Chris Cannam and Richard Bown.  The moral rights of
	    Guillaume Laurent, Chris Cannam and Richard Bown to be
	    identified as the authors of this work have been asserted.

	  </para>
	</listitem>

	<listitem>
	  <para>

	    Parts of Rosegarden-4 are derived from Rosegarden 2.1,
	    which is Copyright 1994 - 2001 Chris Cannam, Andrew Green,
	    Richard Bown and Guillaume Laurent.

	  </para>
	</listitem>

	<listitem>
	  <para>

	    For musical notation display Rosegarden-4 uses pixmaps
	    derived from the Feta font, part of the <ulink
	    url="http://lilypond.org/">Lilypond</ulink> software,
	    which is Copyright 1997 - 2001 Jan Nieuwenhuizen and
	    Han-Wen Nienhuys.

	  </para>
	</listitem>

	<listitem>
	  <para>

	    Other major contributors include Randall Farmer, Ron
	    Kuris, and Hans Kieserman.

	  </para>
	</listitem>

	<listitem>
	  <para>

	    The Rosegarden splash-screen image is from a 1900 postcard
	    of Thornden Park at Syracuse University, Syracuse, NY,
	    used with thanks to the staff of Syracuse University.

	  </para>
	</listitem>

      </itemizedlist>
    </para>

    <para>
      Documentation copyright 2002 Chris Cannam, Richard Bown, Guillaume Laurent
    </para>
<!--
    <para>
      Translations done by:
      <itemizedlist>
	<listitem>
	  <para>Babel D. Fish <email>babelfish@kde.org</email> (Sanskrit)</para>
	</listitem>
      </itemizedlist>
    </para>
-->
    <!-- For URL links to common stuff like the one below,
    always use paths like "common/gpl-licence".
    In this path, "common" will be a symbolic link built at "make install" time.
    This link will normally point to $KDEDIR/share/doc/HTML/en/common,
    where "en" should be replaced with the current language. -->

    <para>
      This program is licensed under the terms of the
      <ulink url="common/gpl-license.html">GNU GPL</ulink>.
    </para>
  </chapter>



  &documentation.index; 
</book>
