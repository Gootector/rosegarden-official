#MIN_CONFIG

AM_INIT_AUTOMAKE(rosegarden,0.2.0)

dnl These are common macros that you might or might not want to use

dnl Image readers/writers
KDE_CHECK_KIMGIO
 
dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h stdlib.h paths.h)
AC_CHECK_FUNCS(usleep)
AC_CHECK_LIB(z, gzgets,, AC_MSG_ERROR("gzgets not found in zlib - need zlib-1.0.9 or newer"))

dnl check whether user wants to use ALSA
AC_ARG_WITH(arts, [  --with-arts             enable aRts support (at cost of ALSA support)],
[
   if test $withval = "yes"; then
     with_alsa=no
   else
     with_alsa=yes
  fi
], with_alsa=yes)

if test "$with_alsa" = "yes"; then
  AM_PATH_ALSA(0.9.0, with_alsa=yes, with_alsa=no)
else
  AC_CHECK_FILE($kde_includes/arts/reference.h,, AC_MSG_ERROR("aRts headers are missing"))
fi

if test "$with_alsa" = "yes"; then
  AC_DEFINE(HAVE_ALSA, 1, [Define if you have ALSA support])
fi

dnl check whether user wants to use JACK
AC_ARG_WITH(jack, [  --with-jack             enable JACK support (requires ALSA)],
[
   if test "$withval" = "yes"; then
     with_jack=yes
   else
     with_jack=no
  fi
], with_jack=no)

dnl only use JACK when jack/jack.h is found
if test "$ac_header_jack_jack_h" = "no"; then
  with_jack=no
fi

if test "$with_jack" = "yes"; then
  AC_DEFINE(HAVE_JACK, 1, [Define if you have JACK support])
  AC_SUBST(JACKLIB)
  AC_CHECK_FUNCS(libRosegardenSequencer.la, [],
                 [JACKLIB="-ljack"])
fi

dnl append RDKDE3 flag if we've found KDE3
if test $kde_qtver = 3; then
  KDE_CXXFLAGS="-DRGKDE3 $KDE_CXXFLAGS"
fi

dnl test for sound support at all
AC_ARG_ENABLE(sound,[  --disable-sound         disable sound support (default is enabled for aRts)],
[
  if test "$enable_sound" = "no";
  then
      with_sound=no
  fi
])

dnl Disable sound system
dnl
if test "$with_sound" = "no";
then
    AC_DEFINE(NO_SOUND, 1, [Define if you don't want sound support - overrides all sound drivers])
fi

dnl automake conditionals
dnl
dnl AM_CONDITIONAL(NO_SOUND, test "$with_sound" = "no")
AM_CONDITIONAL(HAVE_ALSA, test "$with_alsa" = "yes")


dnl check whether user wants to have LADSPA
AC_ARG_WITH(ladspa, [  --with-ladspa           enable LADSPA plugins],
[
   if test "$withval" = "yes"; then
     with_ladspa=yes
   else
     with_ladspa=no
  fi
], with_ladspa=no)

dnl only use LADSPA when ladspa.h is found
if test "$ac_header_ladspa_h" = "no"; then
  with_ladspa=no
fi

if test "$with_ladspa" = "yes"; then
  AC_DEFINE(HAVE_LADSPA, 1, [Define if you have LADSPA])
fi
