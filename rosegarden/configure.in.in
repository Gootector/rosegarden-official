#MIN_CONFIG

AM_INIT_AUTOMAKE(rosegarden,0.1.6)

dnl These are common macros that you might or might not want to use

dnl Image readers/writers
KDE_CHECK_KIMGIO
 
dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h stdlib.h paths.h)
AC_CHECK_FILE($kde_includes/arts/reference.h,, AC_MSG_ERROR("aRTS headers are missing"))
AC_CHECK_FUNCS(usleep)

dnl check whether user wants to use ALSA
AC_ARG_WITH(alsa, [  --with-alsa             enable ALSA support (at cost of aRts support)],
[
   if test $withval = "yes"; then
     with_alsa=yes
   else
     with_alsa=no
  fi
], with_alsa=no)

dnl only use ALSA when sys/soundlib.h is found
if test "$ac_header_sys_soundlib_h" = "no"; then
  with_alsa=no
fi


dnl and libasound is present
#if test "$with_alsa" = "yes"; then
  AC_CHECK_LIB(asound,snd_seq_create_simple_port,
               LIBASOUND="-lasound",with_alsa=no)
#fi
AC_SUBST(LIBASOUND)

if test "$with_alsa" = "yes"; then
  AC_DEFINE(HAVE_ALSA, 1, [Define if you have ALSA support])
fi

dnl check whether user wants to use JACK
AC_ARG_WITH(jack, [  --with-jack             enable JACK support (requires ALSA)],
[
   if test "$withval" = "yes"; then
     with_jack=yes
   else
     with_jack=no
  fi
], with_jack=no)

dnl only use JACK when jack/jack.h is found
if test "$ac_header_jack_jack_h" = "no"; then
  with_jack=no
fi

if test "$with_jack" = "yes"; then
  AC_DEFINE(HAVE_JACK, 1, [Define if you have JACK support])
  AC_SUBST(JACKLIB)
  AC_CHECK_FUNCS(libRosegardenSequencer.la, [],
                 [JACKLIB="-ljack"])
fi

dnl append RDKDE3 flag if we've found KDE3
if test $kde_qtver = 3; then
  KDE_CXXFLAGS="-DRGKDE3 $KDE_CXXFLAGS"
fi

dnl test for sound support at all
AC_ARG_ENABLE(sound,[  --enable-sound          enable sound support (default is true)],
[
  if test "$enable_sound" = "no";
  then
      with_sound=no
  fi
])

dnl If we're disabling sound then disable all drivers and don't
dnl enable any of the conditional building for other drivers
dnl
if test "$with_sound" = "no";
then
    AC_DEFINE(NO_SOUND, 1, [Define if you don't want sound support - overrides all sound drivers])
else 

    dnl At this point there is sound (ALSA or ARTS) - enable the drivers to be
    dnl built with this ugly substitution .

    if test "$with_alsa" = "yes"
    then
        dnl ALSA_DRIVER_SRC = "AlsaDriver.cpp"
        dnl AC_SUBST(ALSA_DRIVER_SRC)
        dnl AC_DEFINE(ALSA_DRIVER_SRC, "AlsaDriver.cpp")
        AC_CHECK_FUNCS(libRosegardenSequencer.la, [],
            [ALSA_DRIVER_SRC="AlsaDriver.cpp"])
        AC_SUBST(ALSA_DRIVER_SRC)
    else
        dnl ARTS_DRIVER_SRC = "MidiArts.cc ArtsDriver.cpp MidiRecord.cpp"
        dnl AC_SUBST(ARTS_DRIVER_SRC)
        dnl aRts support
        dnl AC_DEFINE(ARTS_DRIVER_SRC, "MidiArts.cc ArtsDriver.cpp MidiRecord.cpp")
        AC_CHECK_FUNCS(libRosegardenSequencer.la, [],
            [ARTS_DRIVER_SRC="MidiArts.cc ArtsDriver.cpp MidiRecord.cpp"])
        AC_SUBST(ARTS_DRIVER_SRC)
    fi
fi

